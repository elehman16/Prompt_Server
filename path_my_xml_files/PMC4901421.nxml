<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.0 20120330//EN" "JATS-archivearticle1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">Genome Biol</journal-id><journal-id journal-id-type="iso-abbrev">Genome Biol</journal-id><journal-title-group><journal-title>Genome Biology</journal-title></journal-title-group><issn pub-type="ppub">1474-7596</issn><issn pub-type="epub">1474-760X</issn><publisher><publisher-name>BioMed Central</publisher-name><publisher-loc>London</publisher-loc></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">27287201</article-id><article-id pub-id-type="pmc">4901421</article-id><article-id pub-id-type="publisher-id">993</article-id><article-id pub-id-type="doi">10.1186/s13059-016-0993-1</article-id><article-categories><subj-group subj-group-type="heading"><subject>Method</subject></subj-group></article-categories><title-group><article-title>Resolving complex structural genomic rearrangements using a randomized approach</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Zhao</surname><given-names>Xuefang</given-names></name><xref ref-type="aff" rid="Aff1"/></contrib><contrib contrib-type="author"><name><surname>Emery</surname><given-names>Sarah B.</given-names></name><xref ref-type="aff" rid="Aff2"/></contrib><contrib contrib-type="author"><name><surname>Myers</surname><given-names>Bridget</given-names></name><xref ref-type="aff" rid="Aff2"/></contrib><contrib contrib-type="author"><name><surname>Kidd</surname><given-names>Jeffrey M.</given-names></name><xref ref-type="aff" rid="Aff1"/><xref ref-type="aff" rid="Aff2"/></contrib><contrib contrib-type="author" corresp="yes"><name><surname>Mills</surname><given-names>Ryan E.</given-names></name><address><email>remills@umich.edu</email></address><xref ref-type="aff" rid="Aff1"/><xref ref-type="aff" rid="Aff2"/></contrib><aff id="Aff1"><label/>Department of Computational Medicine &#x00026; Bioinformatics, University of Michigan, Ann Arbor, MI 48109 USA </aff><aff id="Aff2"><label/>Department of Human Genetics, University of Michigan, Ann Arbor, MI 48109 USA </aff></contrib-group><pub-date pub-type="epub"><day>10</day><month>6</month><year>2016</year></pub-date><pub-date pub-type="pmc-release"><day>10</day><month>6</month><year>2016</year></pub-date><pub-date pub-type="collection"><year>2016</year></pub-date><volume>17</volume><elocation-id>126</elocation-id><history><date date-type="received"><day>20</day><month>4</month><year>2016</year></date><date date-type="accepted"><day>25</day><month>5</month><year>2016</year></date></history><permissions><copyright-statement>&#x000a9; The Author(s). 2016</copyright-statement><license license-type="OpenAccess"><license-p>
<bold>Open Access</bold>This article is distributed under the terms of the Creative Commons Attribution 4.0 International License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p></license></permissions><abstract id="Abs1"><p>Complex chromosomal rearrangements are structural genomic alterations involving multiple instances of deletions, duplications, inversions, or translocations that co-occur either on the same chromosome or represent different overlapping events on homologous chromosomes. We present SVelter, an algorithm that identifies regions of the genome suspected to harbor a complex event and then resolves the structure by iteratively rearranging the local genome structure, in a randomized fashion, with each structure scored against characteristics of the observed sequencing data. SVelter is able to accurately reconstruct complex chromosomal rearrangements when compared to well-characterized genomes that have been deeply sequenced with both short and long reads.</p><sec><title>Electronic supplementary material</title><p>The online version of this article (doi:10.1186/s13059-016-0993-1) contains supplementary material, which is available to authorized users.</p></sec></abstract><kwd-group xml:lang="en"><title>Keywords</title><kwd>Structural variation (SV)</kwd><kwd>Complex structural rearrangements</kwd><kwd>Sequence analysis</kwd><kwd>Human</kwd><kwd>Copy number variant (CNV)</kwd></kwd-group><funding-group><award-group><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000051</institution-id><institution>National Human Genome Research Institute</institution></institution-wrap></funding-source><award-id>1R01-HG007068-01A1</award-id><principal-award-recipient><name><surname>Mills</surname><given-names>Ryan E.</given-names></name></principal-award-recipient></award-group><award-group><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000052</institution-id><institution>NIH Office of the Director</institution></institution-wrap></funding-source><award-id>DP5OD009154</award-id><principal-award-recipient><name><surname>Kidd</surname><given-names>Jeffrey M.</given-names></name></principal-award-recipient></award-group></funding-group><custom-meta-group><custom-meta><meta-name>issue-copyright-statement</meta-name><meta-value>&#x000a9; The Author(s) 2016</meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec id="Sec1"><title>Background</title><p>Structural variation (SV), defined as chromosomal rearrangements resulting from the removal, insertion, or rearrangement of genomic regions, are natural sources of genetic variation [<xref ref-type="bibr" rid="CR1">1</xref>&#x02013;<xref ref-type="bibr" rid="CR3">3</xref>] that have also been implicated in numerous human diseases [<xref ref-type="bibr" rid="CR4">4</xref>&#x02013;<xref ref-type="bibr" rid="CR6">6</xref>]. There have been extensive studies to discover these genomic aberrations from the whole genomes of humans and other species and numerous algorithms have been developed to accurately identify their prevalence [<xref ref-type="bibr" rid="CR7">7</xref>&#x02013;<xref ref-type="bibr" rid="CR11">11</xref>]. These approaches have primarily focused on simple copy number variants (CNVs; deletions, duplications) or copy neutral (inversions) rearrangements defined by at most two chromosomal breakpoints (BPs) and work by identifying and clustering various signals of discordant alignments from paired-end next generation sequencing data [<xref ref-type="bibr" rid="CR12">12</xref>]. Recent algorithms have begun to integrate signals across multiple features to increase sensitivity [<xref ref-type="bibr" rid="CR9">9</xref>, <xref ref-type="bibr" rid="CR11">11</xref>, <xref ref-type="bibr" rid="CR13">13</xref>] and these have been successful in precisely identifying various types of SVs. Knowledge of the underlying structure of the rearrangement is still required, however, in order to properly model these aberrant signals to the correct type of structural variant. For example, clusters of read pairs (RPs) with insert sizes (ISs) larger than expected are typically representative of deleted sequence since this observation is consistent with how the reads would map in the presence of such an event.</p><p>While these simple rearrangements are common in the genome, there are additional rearrangements that, while rarer, are far more convoluted. These complex SVs (CSVs) are typically represented by three or more BPs and can arise from a variety of mechanisms including fork stalling and template switching (FoSTeS) and microhomology-mediated break-induced replication (MMBIR) (Fig.&#x000a0;<xref rid="Fig1" ref-type="fig">1</xref>, reviewed in [<xref ref-type="bibr" rid="CR14">14</xref>]). Although fairly common in cancers, their prevalence in germline genomes is gradually becoming more apparent as is their potential role in the pathogenesis of other disease [<xref ref-type="bibr" rid="CR4">4</xref>, <xref ref-type="bibr" rid="CR5">5</xref>, <xref ref-type="bibr" rid="CR15">15</xref>]. The complex nature of these events have made them challenging to accurately detect and catalog and many CSVs have been either neglected or misinterpreted by current techniques due to the complexity of the signals shown by the sequencing data. This is primarily due to the limitations of presupposing the types of SVs being considered, as oftentimes the signals from one event are clustered independently from those of another and can lead to contradictory or sometimes even opposing predictions to what is actually present. Under such circumstances, traditional prediction models lose their ability to discriminate between signals and therefore new computational strategies are required to overcome these challenges. Previous endeavors have been made to reconstruct somatic variants in cancer genomes both spatially [<xref ref-type="bibr" rid="CR16">16</xref>, <xref ref-type="bibr" rid="CR17">17</xref>] and temporally [<xref ref-type="bibr" rid="CR18">18</xref>], but require an unaltered &#x0201c;matched&#x0201d; germline genome as an anchor for comparison. Studies into CSVs in the germline itself to date have thus been more limited, though there has been some early work that has profiled the existence of some of the more common types of CSVs including inverted-duplications and deletion-inversions [<xref ref-type="bibr" rid="CR19">19</xref>].<fig id="Fig1"><label>Fig. 1</label><caption><p>Illustration of simple and complex rearrangements, as compared to an unaltered reference genome. Simple rearrangements are typically defined by two BPs, although dispersed duplications include an additional BP at the insertion site. Examples of commonly observed complex structural variants with three or more BPs are provided but are non-inclusive</p></caption><graphic xlink:href="13059_2016_993_Fig1_HTML" id="MO1"/></fig></p><p>Here, we present a novel approach, SVelter, to accurately resolve complex structural genomic rearrangements in whole genomes. Unlike previous &#x0201c;bottom up&#x0201d; strategies that search for deviant signals to infer structural changes, our &#x0201c;top down&#x0201d; approach works by virtually rearranging segments of the genomes in a randomized fashion and attempting to minimize such aberrations relative to the observed characteristics of the sequence data. In this manner, SVelter is able to interrogate many different types of rearrangements, including multi-deletion and duplication-inversion-deletion events as well as distinct overlapping variants on homologous chromosomes. The framework is provided as a publicly available software package that is available online (<ext-link ext-link-type="uri" xlink:href="https://github.com/mills-lab/svelter">https://github.com/mills-lab/svelter</ext-link>).</p></sec><sec id="Sec2"><title>Results</title><sec id="Sec3"><title>Overview of SVelter</title><p>Our approach predicts the underlying structure of a genomic region through a two-step process. SVelter first identifies and clusters BPs defined by aberrant groups of reads that are linked across potentially related structural events. It then searches through candidate rearrangements using a randomized iterative process by which rearranged structures are randomly proposed and scored by statistical models of expected sequence characteristics (Fig.&#x000a0;<xref rid="Fig2" ref-type="fig">2</xref>; see &#x0201c;<xref rid="Sec11" ref-type="sec">Methods</xref>&#x0201d;). In this fashion, it resembles a Gibbs sampling approach as has been previously utilized for motif finding [<xref ref-type="bibr" rid="CR20">20</xref>] and haplotype reconstruction using single nucleotide polymorphisms (SNPs) [<xref ref-type="bibr" rid="CR21">21</xref>], among other applications.<fig id="Fig2"><label>Fig. 2</label><caption><p>Overview of computational strategy for identifying SV in whole genome sequences. <bold>a</bold> SVelter first scans the genome and identifies clusters of aberrant read characteristics. These are used to create a putative set of BP positions. <bold>b</bold> The segments between BPs are then iteratively rearranged and scored against null models of sequence expectations. <bold>c</bold> The final converged structure is reported as the predicted structural rearrangement for the region</p></caption><graphic xlink:href="13059_2016_993_Fig2_HTML" id="MO2"/></fig></p><p>SVelter begins by fitting statistical models for IS and read depth (RD) based on paired-end sequences sampled from copy neutral genomic regions [<xref ref-type="bibr" rid="CR22">22</xref>]. Both are modeled as normal distributions for efficiency purposes which is recommended for relatively clean data sequenced at higher depth; however, more accurate but slower models (i.e. binomial for IS and negative binomial for RD) are also available as options for data of lower quality. SVelter then searches for and integrates potential SV signals from RPs with aberrant IS, orientation, and/or alignment (soft-clipping). Pairs of BPs are assigned simultaneously and BP pairs that intersect with each other are further connected to form BP clusters. For each cluster containing <italic>n</italic> BPs, the <italic>n-1</italic> genomic segments defined by adjacent BPs are then rearranged in a randomized iterative process whereby a simple SV (deletion, insertion, inversion) is randomly proposed and applied to all possible segments to assess the viability of each putative change. The initial structure and each subsequent rearranged structure are then scored by examining the impact of each change on various features of the sequence reads in the region, including IS distribution, sequence coverage, physical coverage, and the relative orientation of the reads. A new structure is then chosen for the next iteration using a probability distribution generated from the structure scores. This continues until the algorithm converges on a final, stable set of rearrangements or a maximum number of iterations is reached.</p><p>An important feature of SVelter is that it simultaneously constructs and iterates over two structures, consistent with the zygosity of the human genome. This allows for the proper linking of BP segments on the correct haplotypes, which is crucial for the proper resolution of overlapping structural changes that can often confuse or mislead other approaches. Individual breaks in the genome can then be properly linked and segregated, aiding in downstream genotyping across multiple individual sequences.</p><p>The randomized aspect of this approach leads to additional computation cost relative to other SV detection algorithms. We have addressed this by implementing a number of optimizations to increase the overall efficiency of SVelter. First, we limit the number of clustered BPs during the initial BP-linking step in order to manage the number of random combinations at the next step. For regions with potentially higher numbers of linked BPs, we form subgroups based on physical distance between adjacent BPs that are later combined. Second, we set an upper and lower bound on the potential copy number (CN) of each segment between BPs using local RD information and only allow structures containing <italic>CN-1</italic> to <italic>CN&#x02009;+&#x02009;1</italic> blocks for downstream analysis. This results in a total processing time for SVelter on a re-sequenced human genome with 50X coverage of under 8 h when run in parallel on a high-performance computing cluster made up of Dell C6100 machines using 24 cores consisting of 2.67 GHz Intel Xeon X5650 processors, each with an allocated 8 GB of memory.</p><p>Another limitation due to the stochastic nature of this approach is that SVelter by default is primarily heuristic rather than rigorous. Thus, it is not only non-deterministic but can neither guarantee the optimality of its converged structures nor that every possible solution/structure was visited. A brute force method that interrogates every potential structure would address these issues but would be computationally prohibitive, especially for more complex rearrangements with a larger number of BPs and thus possible structures that would need to be permutated. We have attempted to balance SVelter in this regard by implementing a two-pass system where, after converging on a stable rearrangement for 100 continuous iterations, we set this structure aside and restart the random iterations for another 100 iterations, at which point the highest scoring structure overall is chosen. We also provide a deterministic option that is non-random and uses hill climbing to incrementally choose the best scoring structure, though we note that this will likely result in suboptimal results as the converged structure could represent a local rather than global minimum deviation in score from the null models.</p></sec><sec id="Sec4"><title>Performance evaluation</title><p>We compared SVelter to four SV detection algorithms: Delly [<xref ref-type="bibr" rid="CR11">11</xref>], Lumpy [<xref ref-type="bibr" rid="CR9">9</xref>], Pindel [<xref ref-type="bibr" rid="CR8">8</xref>], and ERDS [<xref ref-type="bibr" rid="CR23">23</xref>]. Both Delly and Lumpy have integrated IS and split read information into their SV detection strategy, while Pindel implements a pattern grown approach to utilize split read alignments. ERDS uses an integrative model that combines IS, RD, and SNP allele frequency to detect CN imbalances. While there are numerous other algorithms that have been developed for detecting SVs, we focused on these as they have previously published comparisons that can be transitively applied to our results.</p><p>Multiple experiments were conducted in order to evaluate our approach. We first simulated genomes of various sequence coverage containing both simple and complex SVs as homozygous and heterozygous events. We next applied these algorithms to the genome of a haploid hydatidiform mole (CHM1) [<xref ref-type="bibr" rid="CR8">8</xref>, <xref ref-type="bibr" rid="CR24">24</xref>, <xref ref-type="bibr" rid="CR25">25</xref>] and also a well-characterized diploid genome (NA12878) [<xref ref-type="bibr" rid="CR26">26</xref>, <xref ref-type="bibr" rid="CR27">27</xref>], both of which had reported high-confidence calls as well as long-read Pacific Biosciences (PacBio) sequences available for orthogonal assessment. All algorithms were run either with the recommended settings as provided by the authors (where available) or default settings. Detailed commands for running each algorithm can be found in Additional file <xref rid="MOESM2" ref-type="media">2</xref>.</p><sec id="Sec5"><title>Simulated data</title><p>We simulated specific types of complex rearrangements based on structures recently reported [<xref ref-type="bibr" rid="CR28">28</xref>] as well as our own observations (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S1). Performance comparisons with complex structures are less straightforward than with simple SVs as most algorithms are only designed to identify simple events, and therefore may predict portions of CSVs as independent events. We address this issue by considering the identification and predicted CN of individual junctions as reported in the entire prediction set of each algorithm (deletions, duplications, inversions) and compared against each simulated complex event collectively, treating predicted non-simulated junctions in the region as false positives (FPs) (see &#x0201c;<xref rid="Sec11" ref-type="sec">Methods</xref>&#x0201d;). SVelter performs consistently better in terms of sensitivity and false discovery rate (FDR) across almost all types of complex events (Fig.&#x000a0;<xref rid="Fig3" ref-type="fig">3</xref>).<fig id="Fig3"><label>Fig. 3</label><caption><p>Assessment of CSV accuracy using simulated datasets. Sensitivity and FDRs for SVelter (<italic>red</italic>), Delly (<italic>blue</italic>), Lumpy (<italic>green</italic>), Pindel (<italic>purple</italic>), and ERDS (<italic>yellow</italic>) on simulated <bold>a</bold> inverted duplications, <bold>b</bold> deletion inversions, <bold>c</bold> deletion duplications, and <bold>d</bold> deletion-inversion-duplication events</p></caption><graphic xlink:href="13059_2016_993_Fig3_HTML" id="MO3"/></fig></p><p>We also simulated heterozygous and homozygous non-overlapping simple SVs (deletions, inversions, tandem duplications, dispersed duplications, and translocations) of varied sizes into synthetic genomes sequenced at different depths of coverage (10&#x02013;50X). We then calculated the sensitivity and FDR of each algorithm (Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Figures S1&#x02013;S3). Overall, SVelter achieves a higher sensitivity and lower FDR for simple deletions compared to all other algorithms. Comparisons with duplications were more difficult; while all compared approaches can report tandem duplications, for dispersed duplications only SVelter reports both the duplicated sequence and its distal insertion point. We therefore took a conservative approach such that for calculating sensitivity we compared the full set of duplications predicted from each approach to the simulated set of tandem and dispersed events, but limited the FP analysis to only tandem duplications for the other algorithms. It should be noted that this method of comparison would bias against SVelter to some extent; however, under these circumstances SVelter still showed very good sensitivity and positive predictive value in calling dispersed duplications, with slightly worse performance for tandem duplications. For inversions, SVelter showed a comparable accuracy to other the algorithms.</p></sec><sec id="Sec6"><title>Real data</title><p>To evaluate how SVelter performs on real data, we have applied each algorithm to two publicly available datasets: CHM1 [<xref ref-type="bibr" rid="CR24">24</xref>] and a well-characterized diploid genome analyzed by the Genome in a Bottle (GIAB) Consortium (NA12878) [<xref ref-type="bibr" rid="CR26">26</xref>, <xref ref-type="bibr" rid="CR27">27</xref>]. Both have been deep sequenced by Illumina short-insert and PacBio long-read sequencing and provide excellent sets of benchmarking variants for simple SVs. However, there are few complex rearrangements annotated in either genome and this precluded a direct comparison with our results. We therefore examined the PacBio data directly for each predicted variant using a custom validation approach that utilizes a recurrence strategy to compare each read to both the reference allele as well as a rearranged reference consistent with the predicted structure (Fig.&#x000a0;<xref rid="Fig4" ref-type="fig">4a, b</xref>, see &#x0201c;<xref rid="Sec11" ref-type="sec">Methods</xref>&#x0201d;). We conducted PCR experiments on the predicted BPs of three predicted complex rearrangements that were validated with this approach to show convincing evidence for two, with inconclusive results for the third due to high degrees of repetitiveness in the region (Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Figures S4&#x02013;S7). We also evaluated this approach using sets of reported deletions in these samples as well as matched random sets located within copy neutral regions and found it to have very high true positive (TP) and true negative rates (Fig.&#x000a0;<xref rid="Fig4" ref-type="fig">4c</xref>). We then assessed our approach on specific types of complex rearrangements in CHM1 and showed SVelter to have an overall high validation rate (Fig.&#x000a0;<xref rid="Fig4" ref-type="fig">4d</xref>). We also observed an increase in accuracy on simple deletion calls across all algorithms after the application of our validation scheme (Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Table S2).<fig id="Fig4"><label>Fig. 4</label><caption><p>Overview and application of PacBio validation approach to human data. <bold>a</bold>
<italic>Dot plot</italic> of the sample region containing a simple deletion using a single PacBio read against the reference genome. <italic>Red dots</italic> indicate matches between sequences and <italic>dashed black lines</italic> delineate 10 % deviance from the diagonal. <bold>b</bold>
<italic>Dot plot</italic> of the same region using an altered reference incorporating the deletion event. <bold>c</bold> Fraction of TP calls using validation approach on published deletions in NA12878 (<italic>black</italic>) and CHM1 (<italic>gray</italic>) and CN2 regions as negative controls. <italic>Dashed black lines</italic> indicate regions that could not be assessed due to lack of PacBio reads to interrogate. <bold>d</bold> Assessment of specific predicted complex structures by SVelter using PacBio reads in NA12878 (<italic>black</italic>) and CHM1 (<italic>gray</italic>)</p></caption><graphic xlink:href="13059_2016_993_Fig4_HTML" id="MO4"/></fig></p><p>We then compared the performance of each algorithm on identifying and resolving CSVs. Given that there are very few reference sets available of known complex rearrangements, we first created a set of non-overlapping candidate CSVs as identified by SVelter in CHM1 and NA12878. We then collected all predictions from each algorithm that overlap that region and scored them using the validation approach above. As many complex rearrangements may be described as a combination of simple SVs, we utilized a ranking approach to compare the individual predictions by assigning 0 to the lowest scores and 0.75 to the highest scores (see &#x0201c;<xref rid="Sec11" ref-type="sec">Methods</xref>&#x0201d;). We observed a significant enrichment of SVelter predictions with high validation scores, indicative of its efficacy in correctly resolving CSVs (Fig.&#x000a0;<xref rid="Fig5" ref-type="fig">5a</xref>). An example is shown in Fig.&#x000a0;<xref rid="Fig5" ref-type="fig">5b</xref>, which depicts a summary of sequence read alignments for a region on chromosome 1 in CHM1 containing multiple deletions as well as a local translocation. Using standard read clustering algorithms, the signals present might suggest the presence of a tandem duplication overlapping with large deletions. However, this is not consistent with the haploid nature of CHM1 and comparisons with long PacBio sequence reads that overlap the region show the true structure (Fig.&#x000a0;<xref rid="Fig5" ref-type="fig">5c</xref>), which when aligned to a rearranged reference using SVelter predictions shows a full length alignment (Fig.&#x000a0;<xref rid="Fig5" ref-type="fig">5d</xref>). A comparison with other algorithms indicates that their predictions are indeed consistent with analyzing each aberrant read cluster independently of each other and result in a combination of tandem duplications, deletions, and inversions (Fig.&#x000a0;<xref rid="Fig5" ref-type="fig">5e</xref>).<fig id="Fig5"><label>Fig. 5</label><caption><p>Evaluation of CSV predictions. <bold>a</bold> Validation scores of CSV predicted in NA12878 from all algorithms ranked and normalized from 0 to 1 for comparison. For approaches with multiple predicted SVs in a region, average scores from each prediction were averaged. <bold>b</bold>
<italic>IGV screenshot</italic> of example complex region in CHM1 (chr1:14435000-1444000) containing multiple deletions (<italic>blue shaded arrows</italic>) and a translocated region (<italic>green arrow</italic>), with surrounding anchor regions in <italic>black. Light green lines</italic> in IGV indicate RPs with reverse-forward orientation, while <italic>red lines</italic> indicate RPs with aberrant IS length. <bold>c</bold>
<italic>Dot plot</italic> of region between an individual PacBio read (SRR1304376.123525) against the reference sequence. <italic>Colored arrows</italic> correspond to segments indicated in (<bold>b</bold>). <bold>d</bold>
<italic>Dot plot</italic> of altered reference sequence implementing predicted rearrangements by SVelter. <bold>e</bold>
<italic>Schematic</italic> of predictions by each SV algorithm with respect to segments indicated in (<bold>b</bold>). For approaches with multiple predictions overlapping the region, each predicted SV is shown independently</p></caption><graphic xlink:href="13059_2016_993_Fig5_HTML" id="MO5"/></fig></p></sec><sec id="Sec7"><title>Computational runtime</title><p>We compared the overall executable runtime of the different software packages using a single chromosome from NA12878. For each algorithm, we initialized the analysis using a previously aligned sequence in BAM format and used the respective procedures necessary for each approach to result in a variant call file (see &#x0201c;<xref rid="Sec11" ref-type="sec">Methods</xref>&#x0201d;). Delly was observed to complete the fastest, followed by Lumpy. Pindel and SVelter were somewhat slower and were comparable in their runtime (Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Table S3). It should be noted that some algorithms (e.g. Lumpy) can perform faster with optimized alignment strategies [<xref ref-type="bibr" rid="CR29">29</xref>], however this was not included in our assessment.</p></sec></sec><sec id="Sec8"><title>Examination of identified SVs in CHM1 and NA12878</title><p>We examined the full set of identified simple and complex SVs in both CHM1 and NA12878. As expected, we rediscovered many previously reported deletions, duplications, and inversions (Table&#x000a0;<xref rid="Tab1" ref-type="table">1</xref>). In some cases, we were also able to identify dispersed duplications that were incorrectly identified as overlapping tandem duplication and deletion events in prior reports (Fig.&#x000a0;<xref rid="Fig6" ref-type="fig">6a</xref>, Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Figure S8). Furthermore, we found a recurrence of particular types of CSVs, including inverted-duplication and deletion-inversion events (Fig.&#x000a0;<xref rid="Fig6" ref-type="fig">6b&#x02013;d</xref>, Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Figures S9&#x02013;S11) suggesting that they are likely more common than previously thought. However, there were numerous other CSVs that could not be coalesced into a single classification and may provide future insight into new mechanisms for SV formation.<table-wrap id="Tab1"><label>Table 1</label><caption><p>Predicted SV types in CHM1 and NA12878 by SVelter</p></caption><table frame="hsides" rules="groups"><thead><tr><th>SV type</th><th>CHM1</th><th>NA12878</th></tr></thead><tbody><tr><td>Simple DEL</td><td>1003 (0.72)</td><td>1867 (0.95)</td></tr><tr><td>Simple DUP</td><td>897 (0.61)</td><td>790 (0.61)</td></tr><tr><td>&#x02003;Tandem</td><td>834 (0.62)</td><td>755 (0.60)</td></tr><tr><td>&#x02003;Dispersed</td><td>63 (0.56)</td><td>35 (0.71)</td></tr><tr><td>Simple INV</td><td>48 (0.75)</td><td>107 (0.76)</td></tr><tr><td>Simple TRA</td><td>24 (0.67)</td><td>30 (0.83)</td></tr><tr><td>INV&#x02009;+&#x02009;DUP</td><td>126 (0.59)</td><td>29 (0.86)</td></tr><tr><td>DEL&#x02009;+&#x02009;INV</td><td>8 (0.88)</td><td>26 (0.81)</td></tr><tr><td>DEL&#x02009;+&#x02009;DUP</td><td>8 (0.50)</td><td>12 (0.67)</td></tr><tr><td>DEL&#x02009;+&#x02009;DUP&#x02009;+&#x02009;INV</td><td>2 (1.00)</td><td>6 (0.83)</td></tr><tr><td>Other</td><td>112 (0.63)</td><td>204 (0.77)</td></tr></tbody></table><table-wrap-foot><p>Numbers in parenthesis indicate percentage of calls with PacBio validation support. The remaining calls either were not able to be assayed with our approach or were invalidated</p></table-wrap-foot></table-wrap><fig id="Fig6"><label>Fig. 6</label><caption><p>Examples of various types of CSV in NA12878 identified by SVelter. <bold>a</bold>
<italic>IGV screenshot</italic> of disperse duplication event predicted by SVelter. <italic>Line colors</italic> as described in Fig.&#x000a0;<xref rid="Fig4" ref-type="fig">4</xref>. Such regions are typically identified as an overlapping tandem duplication and deletion. <bold>b</bold> Example of inverted duplication event. <italic>Blue lines</italic> in IGV indicated reverse-reverse RP orientation while <italic>dark green lines</italic> indicate forward-forward RP orientation. <bold>c</bold> Region with heterozygous inversion and deletion rearrangement. <bold>d</bold> Region with homozygous inversion and deletion rearrangement. All regions shown had PacBio sequences consistent with predicted SVelter structures and were misclassified by other approaches (Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Figures S8&#x02013;S11)</p></caption><graphic xlink:href="13059_2016_993_Fig6_HTML" id="MO6"/></fig></p></sec></sec><sec id="Sec9"><title>Discussion</title><p>We have described an integrative approach, SVelter, that can identify both simple and complex structural variants through an iterative randomization process. We show that it has an improved or comparable accuracy to other algorithms when detecting deletions, duplications, and inversions but has the additional capability of correctly interpreting and resolving more complex genomic rearrangements with three or more BPs. Furthermore, SVelter can resolve structural changes on parental haplotypes individually, allowing for the correct stratification of multiple overlapping SVs. SVelter achieves this by forgoing the assumption of specific patterns of read alignment aberrations as associated with individual rearrangements and instead allowing the underlying sequence itself to dictate the most probable structure.</p><p>The ability to accurately identify CSVs in whole genome sequence data is a significant advancement, as currently many such regions are either missed or identified as individual errant events. For example, in our investigation of NA12878 we identified many disperse duplications that were previously reported as overlapping deletion and tandem duplication events as well as other simple deletions and inversions that were in fact part of a larger complex rearrangement (Fig.&#x000a0;<xref rid="Fig5" ref-type="fig">5</xref>). Such regions could be, in part, responsible for the observed discrepancies when comparing different SV algorithms with each other as well as other platforms such as array-CGH [<xref ref-type="bibr" rid="CR30">30</xref>]. Our observations are also consistent with recent findings by the 1000 Genomes Project [<xref ref-type="bibr" rid="CR28">28</xref>], however their analysis required the use of multiple long-read sequencing technologies including PacBio and Moleculo to interpret the regions while SVelter is able to correctly resolve the regions from short-insert Illumina sequences alone. Although long-read technologies are very well suited for such an application, their use is currently limited to small-scale projects and there have been estimates that over 300,000 genomes have been sequenced using Illumina short-insert reads in 2015 alone. Thus, approaches like SVelter that perform accurately on such datasets are likely to have a larger impact on correctly reporting complex structural genomic aberrations, though they will have lesser ability to detect and reconstruct novel insertion sequences compared to long-read approaches.</p><p>While SVelter was specifically designed to identify and resolve complex rearrangements, it also surprisingly showed a slight increase in accuracy in identifying certain types of simple SVs when compared to other modern approaches. One potential factor that may contribute to this observation is that SVelter determines the presence of an SV in a quantitative and not qualitative manner. Specifically, most other paired-end algorithms typically utilize a standard deviation-based cutoff to determine whether the observed IS fragments are larger than would be expected from the constructed library; thus, two paired sequence reads are either aberrant or normal. SVelter, however, scores each observation directly from the IS probability density function. For example, for an IS library with mean&#x02009;=&#x02009;350, an observation of 375 will score better than one of 475, even if both are within 3 standard deviations of the overall IS distribution. When combined with the signals of RD and physical coverage over potential BPs, we feel this adds additional granularity for identifying SVs, particularly for smaller (&#x0003c;1 kb) events.</p><p>One limitation of SVelter is that, even with our efficiency enhancements, it still exhibits a longer processing time with respect to the other SV algorithms compared here. This is in part due to the randomization strategy but is also owing to the inclusion of a read coverage component, which is not modeled in the other approaches we compared against but contributes to the overall increased accuracy of SVelter. Recent advances have made it possible to analyze a high coverage human genome from sequence to variant calling and annotation in half a day [<xref ref-type="bibr" rid="CR29">29</xref>] and such applications are very useful for diagnostic applications where speed is a critical component. Nevertheless, the enhanced ability of SVelter to correctly resolve overlapping and complex rearrangements relative to other approaches makes it very useful for projects where the accurate detection of such regions is important. Another limitation of SVelter is that in its current form it has a reduced ability to delineate heterogeneous data, such as commonly found when sequencing cancer genomes. This is due to its expectation of a specific ploidy when iterating between multiple haplotypes. Future work in this area will focus on creating a dynamic structure that can allow different levels of heterogeneity or mosaicism.</p></sec><sec id="Sec10"><title>Conclusions</title><p>We have developed and applied a new approach to accurately detect and correctly interpret both simple and complex structural genomic rearrangements. Our comparisons to existing algorithms and datasets show that SVelter is very well suited to identifying all forms of balanced and unbalanced SV in whole genome sequencing datasets.</p></sec><sec id="Sec11"><title>Methods</title><sec id="Sec12"><title>SVelter algorithm</title><p>SVelter takes aligned Illumina paired-end sequence data in sorted BAM format as input as well as the reference genome against which the sequences were aligned and reports all predicted SVs in both a custom format as well as VCFv4.1. Default parameters are chosen to best balance sensitivity and efficiency, though are adjustable for users to best fit their own data. The SVelter framework consists of three major modules: null model determination, BP detection, random iterative rearrangement, and structure scoring (Fig.&#x000a0;<xref rid="Fig2" ref-type="fig">2</xref>).</p><sec id="Sec13"><title>Null model determination</title><p>SVelter first filters the reference genome to exclude regions of low mappability from downstream analysis to increase efficiency by avoiding regions where alignments are unreliable. Such regions include gaps and unknown regions in the reference genome (Ns) and these are integrated with previously reported genomic regions identified by ENCODE [<xref ref-type="bibr" rid="CR31">31</xref>] (wgEncodeDacMapabilityConsensusExcludable and DukeMapabilityRegionsExcludable obtained from UCSC Genome Browser) that are of low mappability to form a final version of excluded regions. Next, the IS distribution (<italic>f</italic><sub><italic>IS</italic></sub>) is determined by calculating the mean (<italic>&#x003bc;</italic><sub><italic>IS</italic></sub>) and standard deviation (<italic>&#x003c3;</italic><sub><italic>IS</italic></sub><sup>2</sup>) of all RPs aligned to genomic regions that are either randomly sampled or collected from a set of copy neutral (CN2) genomic regions defined as places in the genome where no polymorphic CNVs, segmental duplications, or repetitive elements have been annotated and thus providing a good estimate of the baseline alignment characteristics [<xref ref-type="bibr" rid="CR22">22</xref>]. Normal distribution is constructed (<italic>f</italic><sub><italic>IS</italic></sub>&#x02009;&#x0223c;&#x02009;<italic>N</italic>(<italic>&#x003bc;</italic><sub><italic>IS</italic></sub>,&#x02009;<italic>&#x003c3;</italic><sub><italic>IS</italic></sub><sup>2</sup>)). A normal distribution of RD (<italic>f</italic><sub><italic>RD</italic></sub>&#x02009;&#x0223c;&#x02009;<italic>N</italic>(<italic>&#x003bc;</italic><sub><italic>RD</italic></sub>,&#x02009;<italic>&#x003c3;</italic><sub><italic>RD</italic></sub><sup>2</sup>)) and physical coverage (<italic>f</italic><sub><italic>PC</italic></sub>&#x02009;&#x0223c;&#x02009;<italic>N</italic>(<italic>&#x003bc;</italic><sub><italic>PC</italic></sub>,&#x02009;<italic>&#x003c3;</italic><sub><italic>PC</italic></sub><sup>2</sup>)) are characterized by sliding a fixed-size window (default: 100 bp) across the same genomic region and constructing the sample mean and standard deviation. Alternatively, in situations where the RD is not high enough be approximated as normal (empirically, &#x0003c;10X), SVelter provides options for more complex but less efficient models, i.e. bimodal (fitted by <italic>mixtools</italic>) for IS,<disp-formula id="Equa"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ {f}_{IS}\sim p\times N\left({\mu}_{I{S}_1},{\sigma}_{I{S}_1}^2\right)+\left(1-p\right)\times N\left({\mu}_{I{S}_2},{\sigma}_{I{S}_2}^2\right) $$\end{document}</tex-math><mml:math id="M2"><mml:msub><mml:mi>f</mml:mi><mml:mi mathvariant="italic">IS</mml:mi></mml:msub><mml:mo>&#x0223c;</mml:mo><mml:mi>p</mml:mi><mml:mo>&#x000d7;</mml:mo><mml:mi>N</mml:mi><mml:mfenced close=")" open="(" separators=","><mml:msub><mml:mi>&#x003bc;</mml:mi><mml:mrow><mml:mi>I</mml:mi><mml:msub><mml:mi>S</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:msub><mml:msubsup><mml:mi>&#x003c3;</mml:mi><mml:mrow><mml:mi>I</mml:mi><mml:msub><mml:mi>S</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:mfenced><mml:mo>+</mml:mo><mml:mfenced close=")" open="("><mml:mrow><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mi>p</mml:mi></mml:mrow></mml:mfenced><mml:mo>&#x000d7;</mml:mo><mml:mi>N</mml:mi><mml:mfenced close=")" open="(" separators=","><mml:msub><mml:mi>&#x003bc;</mml:mi><mml:mrow><mml:mi>I</mml:mi><mml:msub><mml:mi>S</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:msub><mml:msubsup><mml:mi>&#x003c3;</mml:mi><mml:mrow><mml:mi>I</mml:mi><mml:msub><mml:mi>S</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mn>2</mml:mn></mml:msubsup></mml:mfenced></mml:math><graphic xlink:href="13059_2016_993_Article_Equa.gif" position="anchor"/></alternatives></disp-formula>and negative binomial for RD and physical coverage:<disp-formula id="Equb"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \begin{array}{l}{f}_{RD}\sim NB\left({r}_{RD},{p}_{RD}\right),\  where\ {r}_{RD}=\frac{{\mu_{RD}}^2}{{\sigma_{RD}}^2-{\mu}_{RD}},\ {P}_{RD}=1-\frac{\mu_{RD}}{{\sigma_{RD}}^2}\hfill \\ {}{f}_{PC}\sim NB\left({r}_{PC},{p}_{PC}\right), where\ {r}_{PC}=\frac{{\mu_{PC}}^2}{{\sigma_{PC}}^2-{\mu}_{PC}},\ {P}_{PC}=1-\frac{\mu_{PC}}{{\sigma_{PC}}^2}\hfill \end{array} $$\end{document}</tex-math><mml:math id="M4"><mml:mtable columnalign="left"><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>R</mml:mi><mml:mi>D</mml:mi></mml:mrow></mml:msub><mml:mo>&#x0223c;</mml:mo><mml:mi>N</mml:mi><mml:mi>B</mml:mi><mml:mfenced close=")" open="("><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>R</mml:mi><mml:mi>D</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>R</mml:mi><mml:mi>D</mml:mi></mml:mrow></mml:msub></mml:mfenced><mml:mo>,</mml:mo><mml:mspace width="0.25em"/><mml:mi mathvariant="italic">where</mml:mi><mml:mspace width="0.25em"/><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>R</mml:mi><mml:mi>D</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:msup><mml:msub><mml:mi>&#x003bc;</mml:mi><mml:mrow><mml:mi>R</mml:mi><mml:mi>D</mml:mi></mml:mrow></mml:msub><mml:mn>2</mml:mn></mml:msup><mml:mrow><mml:msup><mml:msub><mml:mi>&#x003c3;</mml:mi><mml:mrow><mml:mi>R</mml:mi><mml:mi>D</mml:mi></mml:mrow></mml:msub><mml:mn>2</mml:mn></mml:msup><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mi>&#x003bc;</mml:mi><mml:mrow><mml:mi>R</mml:mi><mml:mi>D</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mspace width="0.25em"/><mml:mo>,</mml:mo><mml:mspace width="0.25em"/><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>R</mml:mi><mml:mi>D</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mfrac><mml:msub><mml:mi>&#x003bc;</mml:mi><mml:mrow><mml:mi>R</mml:mi><mml:mi>D</mml:mi></mml:mrow></mml:msub><mml:msup><mml:msub><mml:mi>&#x003c3;</mml:mi><mml:mrow><mml:mi>R</mml:mi><mml:mi>D</mml:mi></mml:mrow></mml:msub><mml:mn>2</mml:mn></mml:msup></mml:mfrac></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>P</mml:mi><mml:mi>C</mml:mi></mml:mrow></mml:msub><mml:mo>&#x0223c;</mml:mo><mml:mi>N</mml:mi><mml:mi>B</mml:mi><mml:mfenced close=")" open="("><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>P</mml:mi><mml:mi>C</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>P</mml:mi><mml:mi>C</mml:mi></mml:mrow></mml:msub></mml:mfenced><mml:mo>,</mml:mo><mml:mi mathvariant="italic">where</mml:mi><mml:mspace width="0.25em"/><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>P</mml:mi><mml:mi>C</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:msup><mml:msub><mml:mi>&#x003bc;</mml:mi><mml:mrow><mml:mi>P</mml:mi><mml:mi>C</mml:mi></mml:mrow></mml:msub><mml:mn>2</mml:mn></mml:msup><mml:mrow><mml:msup><mml:msub><mml:mi>&#x003c3;</mml:mi><mml:mrow><mml:mi>P</mml:mi><mml:mi>C</mml:mi></mml:mrow></mml:msub><mml:mn>2</mml:mn></mml:msup><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mi>&#x003bc;</mml:mi><mml:mrow><mml:mi>P</mml:mi><mml:mi>C</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mspace width="0.25em"/><mml:mo>,</mml:mo><mml:mspace width="0.25em"/><mml:msub><mml:mi>P</mml:mi><mml:mrow><mml:mi>P</mml:mi><mml:mi>C</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mfrac><mml:msub><mml:mi>&#x003bc;</mml:mi><mml:mrow><mml:mi>P</mml:mi><mml:mi>C</mml:mi></mml:mrow></mml:msub><mml:msup><mml:msub><mml:mi>&#x003c3;</mml:mi><mml:mrow><mml:mi>P</mml:mi><mml:mi>C</mml:mi></mml:mrow></mml:msub><mml:mn>2</mml:mn></mml:msup></mml:mfrac></mml:mtd></mml:mtr></mml:mtable></mml:math><graphic xlink:href="13059_2016_993_Article_Equb.gif" position="anchor"/></alternatives></disp-formula></p></sec><sec id="Sec14"><title>Detection and clustering of putative BPs</title><p>SVelter next scans the input alignment file to define putative BPs where the sample genome differs from the reference. These are defined through the identification of aberrant read alignments. Clusters of RPs showing abnormal insert length or aberrant mapping orientation may indicate BPs nearby, while reads with truncated (clipped) split read (SR) alignments are indicative of precise BP positions. SVelter specifically defines aberrant reads as follows:<list list-type="order"><list-item><p>RPs outside expected IS (<italic>&#x003bc;</italic><sub><italic>IS</italic></sub>&#x02009;&#x000b1;&#x02009;<italic>s</italic>&#x02009;&#x000d7;&#x02009;<italic>&#x003c3;</italic><sub><italic>IS</italic></sub>, where <italic>s</italic> is the number of standard deviation from the mean, default as 3);</p></list-item><list-item><p>RPs that do not have forward reverse pair orientation;</p></list-item><list-item><p>SRs with high average base quality (i.e. 20) clipped portion with minimum size fraction of overall read length (i.e. 10 %).</p></list-item></list></p><p>It should be noted that the default parameters used by SVelter were determined empirically and can be adjusted by the user. Discordant RPs of the within a window of mean IS&#x02009;+&#x02009;2*std distance and of the same orientation are clustered together. Next, split reads within this window and downstream of the read direction are collated and the clipped position is considered as a putative BP. If no such reads exist, the rightmost site of forward read clusters or leftmost site of reverse read clusters is assigned instead. For each cluster of aberrant RPs, a BP is assigned if the total number of split reads exceeds 20 % of the RD or the total number of all aberrant reads exceeds 30 %. For samples of poorer quality, higher cutoffs might be preferred. Each putative BP will be paired with other BPs that are defined by mates of its supporting reads. BP pairs that intersect or are physically close (&#x0003c;1 kb) to each other will be further grouped and reported as a BP cluster for the next step.</p></sec><sec id="Sec15"><title>Random iterative rearrangement</title><p>For each BP cluster containing n putative BPs, a randomized iterative procedure is then applied on the n-1 genomic blocks between adjacent BPs. SVelter has three different modules implemented for this step: diploid module (default) that detects structural variants on both alleles simultaneous, heterozygous module that only report high quality heterozygous SVs, and homozygous module for high quality homozygous SVs only. For the diploid module, a simple rearrangement (deletion, inversion, or insertion) is randomly proposed and applied to each block on one allele while the other allele is kept unchanged and the newly formed structure is scored against the null models of expectation for each feature through the scoring scheme described below. A new structure is then selected probabilistically from the distribution of scores such that higher scores are more likely but not assured. The same approach is then applied to the other allelic structure representing a single iteration overall. For heterozygous and homozygous modules, only one allele is iteratively rearranged while the other allele remains either unchanged or is mirrored, respectively.</p><p>The iterative process will terminate and report a final rearranged structure if one of the following configurable situations is met:<list list-type="order"><list-item><p>No changes to a structure after 100 continuous iterations; or</p></list-item><list-item><p>The maximum number of iterations is reached (100,000 as default).</p></list-item></list></p><p>After the initial termination, the structure is reset and the process is repeated for another 100 iterations while avoiding the fixed structure, at which point the highest scoring structure overall is chosen.</p></sec><sec id="Sec16"><title>Structure scoring</title><p>Assume <italic>S</italic><sub><italic>j</italic></sub> as the score of rearranged structure <italic>j</italic>. To estimate <italic>S</italic><sub><italic>j</italic></sub>, four different characteristics of RP <italic>i</italic>: IS (<italic>IS</italic><sub><italic>ij</italic></sub>), Pair Orientation (<italic>PO</italic><sub><italic>ij</italic></sub>), RD (<italic>RD</italic><sub><italic>ij</italic></sub>), and Physical Coverage Through a BP (<italic>PC</italic><sub><italic>ij</italic></sub>) would be calculated and integrated. As the distribution of IS, RD, and Physical Coverage has been defined, the density function would be calculated and transformed to log scale:<disp-formula id="Equc"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \begin{array}{l} Score\_I{S}_{ij}= log\left({f}_{IS\ }\left(I{S}_{ij}\right)\right)\hfill \\ {} Score\_R{D}_{ij}= log\left({f}_{RD}\left(R{D}_{ij}\right)\right)\hfill \\ {} Score\_P{C}_{ij}= log\left({f}_{PC}\left(P{C}_{ij}\right)\right)\hfill \end{array} $$\end{document}</tex-math><mml:math id="M6"><mml:mtable columnalign="left"><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mi mathvariant="italic">Score</mml:mi><mml:mo>_</mml:mo><mml:mi>I</mml:mi><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi mathvariant="italic">log</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi mathvariant="italic">IS</mml:mi><mml:mspace width="0.25em"/></mml:mrow></mml:msub><mml:mfenced close=")" open="("><mml:mrow><mml:mi>I</mml:mi><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mi mathvariant="italic">Score</mml:mi><mml:mo>_</mml:mo><mml:mi>R</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi mathvariant="italic">log</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>R</mml:mi><mml:mi>D</mml:mi></mml:mrow></mml:msub><mml:mfenced close=")" open="("><mml:mrow><mml:mi>R</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mi mathvariant="italic">Score</mml:mi><mml:mo>_</mml:mo><mml:mi>P</mml:mi><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi mathvariant="italic">log</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>P</mml:mi><mml:mi>C</mml:mi></mml:mrow></mml:msub><mml:mfenced close=")" open="("><mml:mrow><mml:mi>P</mml:mi><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:mtd></mml:mtr></mml:mtable></mml:math><graphic xlink:href="13059_2016_993_Article_Equc.gif" position="anchor"/></alternatives></disp-formula></p><p>Score of Pair Orientation is specified by the indicator function:<disp-formula id="Equd"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ Score\_P{O}_{ij}=\left\{{}_{0,\  if\  other\  wise}^{1,\  if\ PO= Forward - Reverse}\right\} $$\end{document}</tex-math><mml:math id="M8"><mml:mi mathvariant="italic">Score</mml:mi><mml:mo>_</mml:mo><mml:mi>P</mml:mi><mml:msub><mml:mi>O</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfenced close="}" open="{"><mml:msubsup><mml:mspace width="0.25em"/><mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mspace width="0.25em"/><mml:mi mathvariant="italic">if</mml:mi><mml:mspace width="0.25em"/><mml:mi mathvariant="italic">other</mml:mi><mml:mspace width="0.25em"/><mml:mi mathvariant="italic">wise</mml:mi><mml:mspace width="0.25em"/></mml:mrow><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mspace width="0.25em"/><mml:mi mathvariant="italic">if</mml:mi><mml:mspace width="0.25em"/><mml:mi>P</mml:mi><mml:mi>O</mml:mi><mml:mo>=</mml:mo><mml:mi mathvariant="italic">Forward</mml:mi><mml:mspace width="0.25em"/><mml:mo>&#x02212;</mml:mo><mml:mspace width="0.25em"/><mml:mi mathvariant="italic">Reverse</mml:mi></mml:mrow></mml:msubsup></mml:mfenced></mml:math><graphic xlink:href="13059_2016_993_Article_Equd.gif" position="anchor"/></alternatives></disp-formula></p><p>Assuming total number of n pairs of reads are aligned in the targeted genomic region, for each structure j, individual scores of each RP would be integrated to form the structure score:<disp-formula id="Eque"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ {S}_i={\displaystyle \sum_{i=1}^n}\  Score\_I{S}_{ij}\times \left(1+\frac{{\displaystyle {\sum}_{i=1}^n}\  Score\_P{O}_{ij}}{n}\right)+\tau {\displaystyle \sum_{i=1}^n} Score\_R{D}_{ij}\times \left(1-{\displaystyle \sum_{i=1}^n}\  Score\_P{C}_{ij}\right) $$\end{document}</tex-math><mml:math id="M10"><mml:msub><mml:mi>S</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mstyle displaystyle="true"><mml:munderover><mml:mo stretchy="true">&#x02211;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover></mml:mstyle><mml:mspace width="0.25em"/><mml:mi mathvariant="italic">Score</mml:mi><mml:mo>_</mml:mo><mml:mi>I</mml:mi><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>&#x000d7;</mml:mo><mml:mfenced close=")" open="("><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:mstyle displaystyle="true"><mml:msubsup><mml:mo stretchy="true">&#x02211;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:msubsup></mml:mstyle><mml:mspace width="0.25em"/><mml:mi mathvariant="italic">Score</mml:mi><mml:mo>_</mml:mo><mml:mi>P</mml:mi><mml:msub><mml:mi>O</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mi>n</mml:mi></mml:mfrac></mml:mrow></mml:mfenced><mml:mo>+</mml:mo><mml:mi>&#x003c4;</mml:mi><mml:mstyle displaystyle="true"><mml:munderover><mml:mo stretchy="true">&#x02211;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover></mml:mstyle><mml:mi mathvariant="italic">Score</mml:mi><mml:mo>_</mml:mo><mml:mi>R</mml:mi><mml:msub><mml:mi>D</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>&#x000d7;</mml:mo><mml:mfenced close=")" open="("><mml:mrow><mml:mn>1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mstyle displaystyle="true"><mml:munderover><mml:mo stretchy="true">&#x02211;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover></mml:mstyle><mml:mspace width="0.25em"/><mml:mi mathvariant="italic">Score</mml:mi><mml:mo>_</mml:mo><mml:mi>P</mml:mi><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfenced></mml:math><graphic xlink:href="13059_2016_993_Article_Eque.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq1"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ \tau =\frac{log\left({f}_{IS}\left({\mu}_{IS}\right)\right)}{log\left({f}_{RD}\left({\mu}_{RD}\right)\right)} $$\end{document}</tex-math><mml:math id="M12"><mml:mi>&#x003c4;</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi mathvariant="italic">log</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mi mathvariant="italic">IS</mml:mi></mml:msub><mml:mfenced close=")" open="("><mml:msub><mml:mi>&#x003bc;</mml:mi><mml:mi mathvariant="italic">IS</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:mfenced></mml:mrow><mml:mrow><mml:mi mathvariant="italic">log</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mi>R</mml:mi><mml:mi>D</mml:mi></mml:mrow></mml:msub><mml:mfenced close=")" open="("><mml:msub><mml:mi>&#x003bc;</mml:mi><mml:mrow><mml:mi>R</mml:mi><mml:mi>D</mml:mi></mml:mrow></mml:msub></mml:mfenced></mml:mrow></mml:mfenced></mml:mrow></mml:mfrac></mml:math><inline-graphic xlink:href="13059_2016_993_Article_IEq1.gif"/></alternatives></inline-formula> serves as the factor to regulate two parts into same scale.</p></sec></sec><sec id="Sec17"><title>Performance assessment</title><p>Both simulated and real data were used to evaluate performance of SVelter. To produce simulation datasets, we altered the human GRCh37 reference genome to include both homozygous and heterozygous simple SVs and complex SVs independently while adding micro-insertions and short tandem repeats around the junctions in frequencies consistent with previously reported BP characteristics [<xref ref-type="bibr" rid="CR32">32</xref>]. Details about specific types of SVs simulated are summarized in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S1,&#x000a0;and specific details regarding the generation of the simulated data can be found&#x000a0;in&#x000a0;Additional file <xref rid="MOESM3" ref-type="media">3</xref>: Supplemental Methods. Paired-end reads of 101 bp with an IS of 500 bp mean and 50 bp standard deviation were simulated using wgsim (<ext-link ext-link-type="uri" xlink:href="https://github.com/lh3/wgsim">https://github.com/lh3/wgsim</ext-link>) across different RDs (10X, 20X, 30X, 40X, 50X).</p><p>For comparisons using real sequence data, we adopted two previously published samples: CHM1 [<xref ref-type="bibr" rid="CR24">24</xref>] and NA12878 [<xref ref-type="bibr" rid="CR18">18</xref>]. CHM1 has been deep sequenced by Illumina whole-genome sequence to 40X and by Single Molecule, Real-Time (SMRT) sequencing to 54X, and SVs of the sample have been detected and published by the same group as well (<ext-link ext-link-type="uri" xlink:href="http://eichlerlab.gs.washington.edu/publications/chm1-structural-variation/">http://eichlerlab.gs.washington.edu/publications/chm1-structural-variation/</ext-link>). NA12878, together with the other 16 members from CEPH pedigree 1463, has been deep sequenced to 50X by Illumina HiSeq2000 system (<ext-link ext-link-type="uri" xlink:href="http://www.illumina.com/platinumgenomes/">http://www.illumina.com/platinumgenomes/</ext-link>). Additionally, the GIAB Consortium has published the PacBio sequencing data (20X) of NA12878 and also provided a set of high-confident SV calls [<xref ref-type="bibr" rid="CR24">24</xref>, <xref ref-type="bibr" rid="CR27">27</xref>].</p><p>We assessed SVelter against four other algorithms with diverse approaches: Pindel, Delly, Lumpy, and ERDs. We applied these algorithms to both simulated and real data with default settings, except that SVelter&#x02019;s homozygous module was used for CHM1. All algorithms were compared using the same set of excludable regions and were run on the same computing cluster.</p><sec id="Sec18"><title>Assessment of simulated simple SVs</title><p>For simulated datasets, we compared the performance of each algorithm by calculating their sensitivity and FDR on each type of simple SV (deletion, disperse duplication, tandem duplication, inversion). As Lumpy reports BPs in terms of range, we calculated the median coordinate of each reported interval and consider it as the BP for downstream comparison. A reported SV would be considered as a TP if the genomic region it spanned overlapped with a simulated SV of the same type by over 50 % reciprocally. As Delly and Lumpy did not differentiate tandem and dispersed duplication in their SV report, we compare their reported duplications to both simulated tandem and dispersed duplications independently to calculate sensitivity, but use the entire set of simulated duplications together for the calculation of specificity. In this manner, the result will be biased towards higher TP and TN rates for these approaches. Dispersed duplications reported by Pindel were very rare and as such were processed in the same way as Delly and Lumpy.</p></sec><sec id="Sec19"><title>Assessment of real SVs</title><p>We initially made use of reported simple and complex SVs in CHM1 and NA12878 as gold standard sets; however, the FP rate of each algorithm was high compared to previously published performance. To augment this set, we therefore have developed our own approach to validate simple and complex SVs using PacBio long reads. For each reported SV, we collect all PacBio reads that go through the targeted region and hard clip each read prior to the start of the region. We then compare each read to the local reference and an altered reference reflecting the structure of the reported SV by sliding a 10 bp window through the PacBio read and aligning it against the reference sequence. Coordinates of each window are plotted against its aligned position in the form of a recurrence plot. If a read was sampled from the reference genome, most of the matched points should distribute close to the diagonal line. However, if a read was sampled from an altered genomic region, a continuous diagonal line would only show when plotted against a correctly resolved sequence. In this manner, shorter SVs can be validated by accessing the deviation of all matched points from diagonal. If aligning long read <italic>j</italic> against reference <italic>k</italic>, deviation of point <italic>i</italic> (<italic>x</italic><sub><italic>ijk</italic></sub>, <italic>y</italic><sub><italic>ijk</italic></sub>) is defined as <italic>d</italic><sub><italic>ijk</italic></sub>&#x02009;=&#x02009;|<italic>x</italic><sub><italic>ijk</italic></sub>&#x02009;&#x02212;&#x02009;<italic>y</italic><sub><italic>ijk</italic></sub>|, i.e. the vertical distance of the point to the diagonal. The deviation score of each <italic>j</italic> is calculated by summing up deviation of all points<disp-formula id="Equf"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ {S}_{jk} = {\displaystyle {\sum}_{i=1}^n{d}_{ijk}} $$\end{document}</tex-math><mml:math id="M14"><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mspace width="0.25em"/><mml:mstyle displaystyle="true"><mml:msubsup><mml:mo stretchy="true">&#x02211;</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:msubsup><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>j</mml:mi><mml:mi>k</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:math><graphic xlink:href="13059_2016_993_Article_Equf.gif" position="anchor"/></alternatives></disp-formula>where <italic>n</italic> is the number of matches. For each long read <italic>j</italic>, the recurrence plot is made against the reference in both the original and altered formats, with corresponding scores <italic>S</italic><sub><italic>j</italic>,<italic>k</italic> = <italic>orig</italic></sub><italic>and S</italic><sub><italic>j</italic>,<italic>k</italic> = <italic>alt</italic></sub> assigned, and the score for the read is defined as<disp-formula id="Equg"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ {S}_j=\frac{S_{j,k= orig}}{S_{j,k= alt}}-1 $$\end{document}</tex-math><mml:math id="M16"><mml:msub><mml:mi>S</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mi mathvariant="italic">orig</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mi mathvariant="italic">alt</mml:mi></mml:mrow></mml:msub></mml:mfrac><mml:mo>&#x02212;</mml:mo><mml:mn>1</mml:mn></mml:math><graphic xlink:href="13059_2016_993_Article_Equg.gif" position="anchor"/></alternatives></disp-formula>such that a positive score indicates the priority of altered genome over reference genome, and vice versa. The validation score of an SV is defined as proportion of supportive reads among the total <italic>m</italic> interrogated reads<disp-formula id="Equh"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ {S}_{val}=\frac{{\displaystyle {\sum}_{j=1}^m}\ I\left(1,\  if\ {S}_j &#x0003e; 0;\ 0,\  otherwise\right)\ }{m\left( number\  of\  reads\  checked\right)} $$\end{document}</tex-math><mml:math id="M18"><mml:msub><mml:mi>S</mml:mi><mml:mi mathvariant="italic">val</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mstyle displaystyle="true"><mml:msubsup><mml:mo stretchy="true">&#x02211;</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>m</mml:mi></mml:msubsup></mml:mstyle><mml:mspace width="0.25em"/><mml:mi>I</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mspace width="0.25em"/><mml:mi mathvariant="italic">if</mml:mi><mml:mspace width="0.25em"/><mml:msub><mml:mi>S</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mspace width="0.25em"/><mml:mo>&#x0003e;</mml:mo><mml:mn>0</mml:mn><mml:mo>;</mml:mo><mml:mspace width="0.25em"/><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mspace width="0.25em"/><mml:mi mathvariant="italic">otherwise</mml:mi></mml:mrow></mml:mfenced><mml:mspace width="0.25em"/></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:mi mathvariant="italic">number</mml:mi><mml:mspace width="0.25em"/><mml:mi mathvariant="italic">of</mml:mi><mml:mspace width="0.25em"/><mml:mi mathvariant="italic">reads</mml:mi><mml:mspace width="0.25em"/><mml:mi mathvariant="italic">checked</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mfrac></mml:math><graphic xlink:href="13059_2016_993_Article_Equh.gif" position="anchor"/></alternatives></disp-formula></p><p>SVs with validation score &#x0003e;0.5 for haploid genome, or &#x0003e;0.3 for diploid genome would be considered validated. We further assess our ability to interrogate SVs in this fashion by scoring the reference sequence against itself at each region. In highly repetitive regions, the deviation scores will be higher overall and we can label such regions as non-assessable.</p><p>For longer (&#x0003e;5 kb) SVs, PacBio reads spanning through the whole targeted region are rarely observed in these data. In this situation, we scored each BP by adding 500 bp flanks and assessing each individually. The final validation score is then determined through the collation of matches from all BPs.</p><p>We reassessed our initial TP and FP simple calls from each algorithm by combining our PacBio validated SVs from each algorithm together with the reported calls. For simple SVs, we utilized a 50 % reciprocal overlap criterion. However, for CSVs we utilized a more complex comparison strategy to take into account that some algorithms will often detect individual parts of a complex rearrangement as distinct events. With each CSV predicted by SVelter, we extracted SVs with over 50 % reciprocal overlap from other algorithms and calculated the validation score for each of them using our PacBio validation approach described above. When multiple SVs were extracted from an algorithm, averaged scores were adopted. Validation scores of a CSV from all algorithms were ranked and normalized from 0 to 1 for comparison.</p></sec></sec></sec><sec id="Sec20"><title>Software and data availability</title><p>The software package <italic>SVelter</italic> (v1.1.2) is available for download at <ext-link ext-link-type="uri" xlink:href="https://github.com/mills-lab/svelter">https://github.com/mills-lab/svelter</ext-link> as open source under the MIT License and additional documentation regarding specific software usage and parameters, supporting files, algorithm comparisons, and simulated datasets are provided at this site.</p><p>Simulated whole genome sequence data were generated as outlined in the supplemental code from synthetic reference sequences that can be obtained from <ext-link ext-link-type="uri" xlink:href="https://umich.box.com/v/svelter">https://umich.box.com/v/svelter</ext-link>.</p><p>Sequence data used in this analysis were obtained from the following resources:</p><p>CHM1 &#x02013; Resolving the complexity of the human genome using single-molecule sequencing (<ext-link ext-link-type="uri" xlink:href="http://eichlerlab.gs.washington.edu/publications/chm1-structural-variation/">http://eichlerlab.gs.washington.edu/publications/chm1-structural-variation/</ext-link>) [<xref ref-type="bibr" rid="CR24">24</xref>].</p><p>NA12878 &#x02013; Genome in a Bottle Consortium (<ext-link ext-link-type="uri" xlink:href="https://sites.stanford.edu/abms/giab">https://sites.stanford.edu/abms/giab</ext-link>) [<xref ref-type="bibr" rid="CR24">24</xref>, <xref ref-type="bibr" rid="CR26">26</xref>], Illumina Platinum Genomes (<ext-link ext-link-type="uri" xlink:href="http://www.illumina.com/platinumgenomes/">http://www.illumina.com/platinumgenomes/</ext-link>).</p></sec></body><back><app-group><app id="App1"><sec id="Sec21"><title>Additional files</title><p><media position="anchor" xlink:href="13059_2016_993_MOESM1_ESM.xlsx" id="MOESM1"><label>Additional file 1:</label><caption><p>Contains Supplemental Table 1 outlining the type and number of SVs included in each simulated genome and the stratified results for each algorithm. (XLSX 111 kb)</p></caption></media><media position="anchor" xlink:href="13059_2016_993_MOESM2_ESM.docx" id="MOESM2"><label>Additional file 2:</label><caption><p>Contains Supplemental Tables 1&#x02013;3 and Supplemental Figures 1&#x02013;11 (DOCX 1461 kb)</p></caption></media><media position="anchor" xlink:href="13059_2016_993_MOESM3_ESM.docx" id="MOESM3"><label>Additional file 3:</label><caption><p>Supplemental Methods outlining the software and parameter usage that was used to generate the presented results. (DOCX 10 kb)</p></caption></media></p></sec></app></app-group><ack><title>Acknowledgements</title><p>We thank Laura Scott for her helpful comments on the statistical aspects of this work&#x000a0;and Marcus Sherman for his contributions to SVelter classifications.</p><sec id="FPar1"><title>Funding</title><p>This project was supported in part through funds from the University of Michigan, the NIH/NHGRI (1R01-HG007068-01A1), and NIH/Common Fund (DP5OD009154).</p></sec><sec id="FPar2"><title>Authors&#x02019; contributions</title><p>XZ developed and implemented the algorithms and wrote the source code. REM conceived the analytical framework, devised the experiments and supervised the project. SBE, BM, and JMK performed the PCR validation experiments. REM and XZ prepared the figures and wrote the manuscript. All authors read and approved of the final manuscript.</p></sec><sec id="FPar3"><title>Competing interests</title><p>The authors declare that they have no competing interest.</p></sec><sec id="FPar4"><title>Ethics approval and consent to participate</title><p>No ethical approval was required for the project.</p></sec></ack><ref-list id="Bib1"><title>References</title><ref id="CR1"><label>1.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zarrei</surname><given-names>M</given-names></name><name><surname>Mehdi</surname><given-names>Z</given-names></name><name><surname>MacDonald</surname><given-names>JR</given-names></name><name><surname>Daniele</surname><given-names>M</given-names></name><name><surname>Scherer</surname><given-names>SW</given-names></name></person-group><article-title>A copy number variation map of the human genome</article-title><source>Nat Rev Genet.</source><year>2015</year><volume>16</volume><fpage>172</fpage><lpage>83</lpage><pub-id pub-id-type="doi">10.1038/nrg3871</pub-id><pub-id pub-id-type="pmid">25645873</pub-id></element-citation></ref><ref id="CR2"><label>2.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mills</surname><given-names>RE</given-names></name><name><surname>Walter</surname><given-names>K</given-names></name><name><surname>Stewart</surname><given-names>C</given-names></name><name><surname>Handsaker</surname><given-names>RE</given-names></name><name><surname>Chen</surname><given-names>K</given-names></name><name><surname>Alkan</surname><given-names>C</given-names></name><etal/></person-group><article-title>Mapping copy number variation by population-scale genome sequencing</article-title><source>Nature.</source><year>2011</year><volume>470</volume><fpage>59</fpage><lpage>65</lpage><pub-id pub-id-type="doi">10.1038/nature09708</pub-id><pub-id pub-id-type="pmid">21293372</pub-id></element-citation></ref><ref id="CR3"><label>3.</label><element-citation publication-type="journal"><person-group person-group-type="author"><collab>1000 Genomes Project Consortium</collab><name><surname>Abecasis</surname><given-names>GR</given-names></name><name><surname>Auton</surname><given-names>A</given-names></name><name><surname>Brooks</surname><given-names>LD</given-names></name><name><surname>DePristo</surname><given-names>MA</given-names></name><name><surname>Durbin</surname><given-names>RM</given-names></name><etal/></person-group><article-title>An integrated map of genetic variation from 1,092 human genomes</article-title><source>Nature</source><year>2012</year><volume>491</volume><fpage>56</fpage><lpage>65</lpage><pub-id pub-id-type="doi">10.1038/nature11632</pub-id><pub-id pub-id-type="pmid">23128226</pub-id></element-citation></ref><ref id="CR4"><label>4.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Brand</surname><given-names>H</given-names></name><name><surname>Pillalamarri</surname><given-names>V</given-names></name><name><surname>Collins</surname><given-names>RL</given-names></name><name><surname>Eggert</surname><given-names>S</given-names></name><name><surname>O&#x02019;Dushlaine</surname><given-names>C</given-names></name><name><surname>Braaten</surname><given-names>EB</given-names></name><etal/></person-group><article-title>Cryptic and complex chromosomal aberrations in early-onset neuropsychiatric disorders</article-title><source>Am J Hum Genet.</source><year>2014</year><volume>95</volume><fpage>454</fpage><lpage>61</lpage><pub-id pub-id-type="doi">10.1016/j.ajhg.2014.09.005</pub-id><pub-id pub-id-type="pmid">25279985</pub-id></element-citation></ref><ref id="CR5"><label>5.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Chiang</surname><given-names>C</given-names></name><name><surname>Colby</surname><given-names>C</given-names></name><name><surname>Jacobsen</surname><given-names>JC</given-names></name><name><surname>Carl</surname><given-names>E</given-names></name><name><surname>Carrie</surname><given-names>H</given-names></name><name><surname>Adrian</surname><given-names>H</given-names></name><etal/></person-group><article-title>Complex reorganization and predominant non-homologous repair following chromosomal breakage in karyotypically balanced germline rearrangements and transgenic integration</article-title><source>Nat Genet.</source><year>2012</year><volume>44</volume><fpage>390</fpage><lpage>7</lpage><pub-id pub-id-type="doi">10.1038/ng.2202</pub-id><pub-id pub-id-type="pmid">22388000</pub-id></element-citation></ref><ref id="CR6"><label>6.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Stankiewicz</surname><given-names>P</given-names></name><name><surname>Pawe&#x00142;</surname><given-names>S</given-names></name><name><surname>Lupski</surname><given-names>JR</given-names></name></person-group><article-title>Structural variation in the human genome and its role in disease</article-title><source>Annu Rev Med.</source><year>2010</year><volume>61</volume><fpage>437</fpage><lpage>55</lpage><pub-id pub-id-type="doi">10.1146/annurev-med-100708-204735</pub-id><pub-id pub-id-type="pmid">20059347</pub-id></element-citation></ref><ref id="CR7"><label>7.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Chen</surname><given-names>K</given-names></name><name><surname>Wallis</surname><given-names>JW</given-names></name><name><surname>McLellan</surname><given-names>MD</given-names></name><name><surname>Larson</surname><given-names>DE</given-names></name><name><surname>Kalicki</surname><given-names>JM</given-names></name><name><surname>Pohl</surname><given-names>CS</given-names></name><etal/></person-group><article-title>BreakDancer: an algorithm for high-resolution mapping of genomic structural variation</article-title><source>Nat Methods.</source><year>2009</year><volume>6</volume><fpage>677</fpage><lpage>81</lpage><pub-id pub-id-type="doi">10.1038/nmeth.1363</pub-id><pub-id pub-id-type="pmid">19668202</pub-id></element-citation></ref><ref id="CR8"><label>8.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ye</surname><given-names>K</given-names></name><name><surname>Schulz</surname><given-names>MH</given-names></name><name><surname>Long</surname><given-names>Q</given-names></name><name><surname>Apweiler</surname><given-names>R</given-names></name><name><surname>Ning</surname><given-names>Z</given-names></name></person-group><article-title>Pindel: a pattern growth approach to detect break points of large deletions and medium sized insertions from paired-end short reads</article-title><source>Bioinformatics.</source><year>2009</year><volume>25</volume><fpage>2865</fpage><lpage>71</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btp394</pub-id><pub-id pub-id-type="pmid">19561018</pub-id></element-citation></ref><ref id="CR9"><label>9.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Layer</surname><given-names>RM</given-names></name><name><surname>Chiang</surname><given-names>C</given-names></name><name><surname>Quinlan</surname><given-names>AR</given-names></name><name><surname>Hall</surname><given-names>IM</given-names></name></person-group><article-title>LUMPY: a probabilistic framework for structural variant discovery</article-title><source>Genome Biol.</source><year>2014</year><volume>15</volume><fpage>R84</fpage><pub-id pub-id-type="doi">10.1186/gb-2014-15-6-r84</pub-id><pub-id pub-id-type="pmid">24970577</pub-id></element-citation></ref><ref id="CR10"><label>10.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Handsaker</surname><given-names>RE</given-names></name><name><surname>Korn</surname><given-names>JM</given-names></name><name><surname>Nemesh</surname><given-names>J</given-names></name><name><surname>McCarroll</surname><given-names>SA</given-names></name></person-group><article-title>Discovery and genotyping of genome structural polymorphism by sequencing on a population scale</article-title><source>Nat Genet.</source><year>2011</year><volume>43</volume><fpage>269</fpage><lpage>76</lpage><pub-id pub-id-type="doi">10.1038/ng.768</pub-id><pub-id pub-id-type="pmid">21317889</pub-id></element-citation></ref><ref id="CR11"><label>11.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Rausch</surname><given-names>T</given-names></name><name><surname>Zichner</surname><given-names>T</given-names></name><name><surname>Schlattl</surname><given-names>A</given-names></name><name><surname>St&#x000fc;tz</surname><given-names>AM</given-names></name><name><surname>Benes</surname><given-names>V</given-names></name><name><surname>Korbel</surname><given-names>JO</given-names></name></person-group><article-title>DELLY: structural variant discovery by integrated paired-end and split-read analysis</article-title><source>Bioinformatics.</source><year>2012</year><volume>28</volume><fpage>i333</fpage><lpage>9</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/bts378</pub-id><pub-id pub-id-type="pmid">22962449</pub-id></element-citation></ref><ref id="CR12"><label>12.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Alkan</surname><given-names>C</given-names></name><name><surname>Can</surname><given-names>A</given-names></name><name><surname>Coe</surname><given-names>BP</given-names></name><name><surname>Eichler</surname><given-names>EE</given-names></name></person-group><article-title>Genome structural variation discovery and genotyping</article-title><source>Nat Rev Genet.</source><year>2011</year><volume>12</volume><fpage>363</fpage><lpage>76</lpage><pub-id pub-id-type="doi">10.1038/nrg2958</pub-id><pub-id pub-id-type="pmid">21358748</pub-id></element-citation></ref><ref id="CR13"><label>13.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sindi</surname><given-names>SS</given-names></name><name><surname>Selim</surname><given-names>&#x000d6;</given-names></name><name><surname>Peng</surname><given-names>LC</given-names></name><name><surname>Hsin-Ta</surname><given-names>W</given-names></name><name><surname>Raphael</surname><given-names>BJ</given-names></name></person-group><article-title>An integrative probabilistic model for identification of structural variation in sequencing data</article-title><source>Genome Biol.</source><year>2012</year><volume>13</volume><fpage>R22</fpage><pub-id pub-id-type="doi">10.1186/gb-2012-13-3-r22</pub-id><pub-id pub-id-type="pmid">22452995</pub-id></element-citation></ref><ref id="CR14"><label>14.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Quinlan</surname><given-names>AR</given-names></name><name><surname>Hall</surname><given-names>IM</given-names></name></person-group><article-title>Characterizing complex structural variation in germline and somatic genomes</article-title><source>Trends Genet.</source><year>2012</year><volume>28</volume><fpage>43</fpage><lpage>53</lpage><pub-id pub-id-type="doi">10.1016/j.tig.2011.10.002</pub-id><pub-id pub-id-type="pmid">22094265</pub-id></element-citation></ref><ref id="CR15"><label>15.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Usher</surname><given-names>CL</given-names></name><name><surname>McCarroll</surname><given-names>SA</given-names></name></person-group><article-title>Complex and multi-allelic copy number variation in human disease</article-title><source>Brief Funct Genomics.</source><year>2015</year><volume>14</volume><fpage>329</fpage><lpage>38</lpage><pub-id pub-id-type="doi">10.1093/bfgp/elv028</pub-id><pub-id pub-id-type="pmid">26163405</pub-id></element-citation></ref><ref id="CR16"><label>16.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Raphael</surname><given-names>BJ</given-names></name><name><surname>Volik</surname><given-names>S</given-names></name><name><surname>Collins</surname><given-names>C</given-names></name><name><surname>Pevzner</surname><given-names>PA</given-names></name></person-group><article-title>Reconstructing tumor genome architectures</article-title><source>Bioinformatics</source><year>2003</year><volume>19</volume><issue>2</issue><fpage>ii162</fpage><lpage>71</lpage><pub-id pub-id-type="pmid">14534186</pub-id></element-citation></ref><ref id="CR17"><label>17.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Moncunill</surname><given-names>V</given-names></name><name><surname>Gonzalez</surname><given-names>S</given-names></name><name><surname>Be&#x000e0;</surname><given-names>S</given-names></name><name><surname>Andrieux</surname><given-names>LO</given-names></name><name><surname>Salaverria</surname><given-names>I</given-names></name><name><surname>Royo</surname><given-names>C</given-names></name><etal/></person-group><article-title>Comprehensive characterization of complex structural variations in cancer by directly comparing genome sequence reads</article-title><source>Nat Biotechnol.</source><year>2014</year><volume>32</volume><fpage>1106</fpage><lpage>12</lpage><pub-id pub-id-type="doi">10.1038/nbt.3027</pub-id><pub-id pub-id-type="pmid">25344728</pub-id></element-citation></ref><ref id="CR18"><label>18.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Greenman</surname><given-names>CD</given-names></name><name><surname>Pleasance</surname><given-names>ED</given-names></name><name><surname>Newman</surname><given-names>S</given-names></name><name><surname>Yang</surname><given-names>F</given-names></name><name><surname>Fu</surname><given-names>B</given-names></name><name><surname>Nik-Zainal</surname><given-names>S</given-names></name><etal/></person-group><article-title>Estimation of rearrangement phylogeny for cancer genomes</article-title><source>Genome Res.</source><year>2012</year><volume>22</volume><fpage>346</fpage><lpage>61</lpage><pub-id pub-id-type="doi">10.1101/gr.118414.110</pub-id><pub-id pub-id-type="pmid">21994251</pub-id></element-citation></ref><ref id="CR19"><label>19.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Conrad</surname><given-names>DF</given-names></name><name><surname>Bird</surname><given-names>C</given-names></name><name><surname>Blackburne</surname><given-names>B</given-names></name><name><surname>Lindsay</surname><given-names>S</given-names></name><name><surname>Mamanova</surname><given-names>L</given-names></name><name><surname>Lee</surname><given-names>C</given-names></name><etal/></person-group><article-title>Mutation spectrum revealed by breakpoint sequencing of human germline CNVs</article-title><source>Nat Genet.</source><year>2010</year><volume>42</volume><fpage>385</fpage><lpage>91</lpage><pub-id pub-id-type="doi">10.1038/ng.564</pub-id><pub-id pub-id-type="pmid">20364136</pub-id></element-citation></ref><ref id="CR20"><label>20.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lawrence</surname><given-names>CE</given-names></name><name><surname>Altschul</surname><given-names>SF</given-names></name><name><surname>Boguski</surname><given-names>MS</given-names></name><name><surname>Liu</surname><given-names>JS</given-names></name><name><surname>Neuwald</surname><given-names>AF</given-names></name><name><surname>Wootton</surname><given-names>JC</given-names></name></person-group><article-title>Detecting subtle sequence signals: a Gibbs sampling strategy for multiple alignment</article-title><source>Science.</source><year>1993</year><volume>262</volume><fpage>208</fpage><lpage>14</lpage><pub-id pub-id-type="doi">10.1126/science.8211139</pub-id><pub-id pub-id-type="pmid">8211139</pub-id></element-citation></ref><ref id="CR21"><label>21.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kim</surname><given-names>JH</given-names></name><name><surname>Waterman</surname><given-names>MS</given-names></name><name><surname>Li</surname><given-names>LM</given-names></name></person-group><article-title>Diploid genome reconstruction of Ciona intestinalis and comparative analysis with Ciona savignyi</article-title><source>Genome Res.</source><year>2007</year><volume>17</volume><fpage>1101</fpage><lpage>10</lpage><pub-id pub-id-type="doi">10.1101/gr.5894107</pub-id><pub-id pub-id-type="pmid">17567986</pub-id></element-citation></ref><ref id="CR22"><label>22.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Handsaker</surname><given-names>RE</given-names></name><name><surname>Van Doren</surname><given-names>V</given-names></name><name><surname>Berman</surname><given-names>JR</given-names></name><name><surname>Genovese</surname><given-names>G</given-names></name><name><surname>Kashin</surname><given-names>S</given-names></name><name><surname>Boettger</surname><given-names>LM</given-names></name><etal/></person-group><article-title>Large multiallelic copy number variations in humans</article-title><source>Nat Genet.</source><year>2015</year><volume>47</volume><fpage>296</fpage><lpage>303</lpage><pub-id pub-id-type="doi">10.1038/ng.3200</pub-id><pub-id pub-id-type="pmid">25621458</pub-id></element-citation></ref><ref id="CR23"><label>23.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhu</surname><given-names>M</given-names></name><name><surname>Need</surname><given-names>AC</given-names></name><name><surname>Han</surname><given-names>Y</given-names></name><name><surname>Ge</surname><given-names>D</given-names></name><name><surname>Maia</surname><given-names>JM</given-names></name><name><surname>Zhu</surname><given-names>Q</given-names></name><etal/></person-group><article-title>Using ERDS to infer copy-number variants in high-coverage genomes</article-title><source>Am J Hum Genet.</source><year>2012</year><volume>91</volume><fpage>408</fpage><lpage>21</lpage><pub-id pub-id-type="doi">10.1016/j.ajhg.2012.07.004</pub-id><pub-id pub-id-type="pmid">22939633</pub-id></element-citation></ref><ref id="CR24"><label>24.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Chaisson</surname><given-names>MJP</given-names></name><name><surname>Huddleston</surname><given-names>J</given-names></name><name><surname>Dennis</surname><given-names>MY</given-names></name><name><surname>Sudmant</surname><given-names>PH</given-names></name><name><surname>Malig</surname><given-names>M</given-names></name><name><surname>Hormozdiari</surname><given-names>F</given-names></name><etal/></person-group><article-title>Resolving the complexity of the human genome using single-molecule sequencing</article-title><source>Nature.</source><year>2015</year><volume>517</volume><fpage>608</fpage><lpage>11</lpage><pub-id pub-id-type="doi">10.1038/nature13907</pub-id><pub-id pub-id-type="pmid">25383537</pub-id></element-citation></ref><ref id="CR25"><label>25.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Steinberg</surname><given-names>KM</given-names></name><name><surname>Schneider</surname><given-names>VA</given-names></name><name><surname>Graves-Lindsay</surname><given-names>TA</given-names></name><name><surname>Fulton</surname><given-names>RS</given-names></name><name><surname>Agarwala</surname><given-names>R</given-names></name><name><surname>Huddleston</surname><given-names>J</given-names></name><etal/></person-group><article-title>Single haplotype assembly of the human genome from a hydatidiform mole</article-title><source>Genome Res.</source><year>2014</year><volume>24</volume><fpage>2066</fpage><lpage>76</lpage><pub-id pub-id-type="doi">10.1101/gr.180893.114</pub-id><pub-id pub-id-type="pmid">25373144</pub-id></element-citation></ref><ref id="CR26"><label>26.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pendleton</surname><given-names>M</given-names></name><name><surname>Sebra</surname><given-names>R</given-names></name><name><surname>Pang</surname><given-names>AWC</given-names></name><name><surname>Ummat</surname><given-names>A</given-names></name><name><surname>Franzen</surname><given-names>O</given-names></name><name><surname>Rausch</surname><given-names>T</given-names></name><etal/></person-group><article-title>Assembly and diploid architecture of an individual human genome via single-molecule technologies</article-title><source>Nat Methods.</source><year>2015</year><volume>12</volume><fpage>780</fpage><lpage>6</lpage><pub-id pub-id-type="doi">10.1038/nmeth.3454</pub-id><pub-id pub-id-type="pmid">26121404</pub-id></element-citation></ref><ref id="CR27"><label>27.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Parikh</surname><given-names>H</given-names></name><name><surname>Mohiyuddin</surname><given-names>M</given-names></name><name><surname>Lam</surname><given-names>HYK</given-names></name><name><surname>Iyer</surname><given-names>H</given-names></name><name><surname>Chen</surname><given-names>D</given-names></name><name><surname>Pratt</surname><given-names>M</given-names></name><etal/></person-group><article-title>svclassify: a method to establish benchmark structural variant calls</article-title><source>BMC Genomics</source><year>2016</year><volume>17</volume><fpage>64</fpage><pub-id pub-id-type="doi">10.1186/s12864-016-2366-2</pub-id><pub-id pub-id-type="pmid">26772178</pub-id></element-citation></ref><ref id="CR28"><label>28.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Sudmant</surname><given-names>PH</given-names></name><name><surname>Rausch</surname><given-names>T</given-names></name><name><surname>Gardner</surname><given-names>EJ</given-names></name><name><surname>Handsaker</surname><given-names>RE</given-names></name><name><surname>Abyzov</surname><given-names>A</given-names></name><name><surname>Huddleston</surname><given-names>J</given-names></name><etal/></person-group><article-title>An integrated map of structural variation in 2,504 human genomes</article-title><source>Nature.</source><year>2015</year><volume>526</volume><fpage>75</fpage><lpage>81</lpage><pub-id pub-id-type="doi">10.1038/nature15394</pub-id><pub-id pub-id-type="pmid">26432246</pub-id></element-citation></ref><ref id="CR29"><label>29.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Chiang</surname><given-names>C</given-names></name><name><surname>Layer</surname><given-names>RM</given-names></name><name><surname>Faust</surname><given-names>GG</given-names></name><name><surname>Lindberg</surname><given-names>MR</given-names></name><name><surname>Rose</surname><given-names>DB</given-names></name><name><surname>Garrison</surname><given-names>EP</given-names></name><etal/></person-group><article-title>SpeedSeq: ultra-fast personal genome analysis and interpretation</article-title><source>Nat Methods.</source><year>2015</year><volume>12</volume><fpage>966</fpage><lpage>8</lpage><pub-id pub-id-type="doi">10.1038/nmeth.3505</pub-id><pub-id pub-id-type="pmid">26258291</pub-id></element-citation></ref><ref id="CR30"><label>30.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pinto</surname><given-names>D</given-names></name><name><surname>Darvishi</surname><given-names>K</given-names></name><name><surname>Shi</surname><given-names>X</given-names></name><name><surname>Rajan</surname><given-names>D</given-names></name><name><surname>Rigler</surname><given-names>D</given-names></name><name><surname>Fitzgerald</surname><given-names>T</given-names></name><etal/></person-group><article-title>Comprehensive assessment of array-based platforms and calling algorithms for detection of copy number variants</article-title><source>Nat Biotechnol.</source><year>2011</year><volume>29</volume><fpage>512</fpage><lpage>20</lpage><pub-id pub-id-type="doi">10.1038/nbt.1852</pub-id><pub-id pub-id-type="pmid">21552272</pub-id></element-citation></ref><ref id="CR31"><label>31.</label><element-citation publication-type="journal"><person-group person-group-type="author"><collab>ENCODE Project Consortium</collab></person-group><article-title>An integrated encyclopedia of DNA elements in the human genome</article-title><source>Nature</source><year>2012</year><volume>489</volume><fpage>57</fpage><lpage>74</lpage><pub-id pub-id-type="doi">10.1038/nature11247</pub-id><pub-id pub-id-type="pmid">22955616</pub-id></element-citation></ref><ref id="CR32"><label>32.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kidd</surname><given-names>JM</given-names></name><name><surname>Graves</surname><given-names>T</given-names></name><name><surname>Newman</surname><given-names>TL</given-names></name><name><surname>Fulton</surname><given-names>R</given-names></name><name><surname>Hayden</surname><given-names>HS</given-names></name><name><surname>Malig</surname><given-names>M</given-names></name><etal/></person-group><article-title>A human genome structural variation sequencing resource reveals insights into mutational mechanisms</article-title><source>Cell.</source><year>2010</year><volume>143</volume><fpage>837</fpage><lpage>47</lpage><pub-id pub-id-type="doi">10.1016/j.cell.2010.10.027</pub-id><pub-id pub-id-type="pmid">21111241</pub-id></element-citation></ref></ref-list></back></article>