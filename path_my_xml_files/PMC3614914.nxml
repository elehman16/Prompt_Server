<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.0 20120330//EN" "JATS-archivearticle1.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:mml="http://www.w3.org/1998/Math/MathML" article-type="research-article"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">PLoS One</journal-id><journal-id journal-id-type="iso-abbrev">PLoS ONE</journal-id><journal-id journal-id-type="publisher-id">plos</journal-id><journal-id journal-id-type="pmc">plosone</journal-id><journal-title-group><journal-title>PLoS ONE</journal-title></journal-title-group><issn pub-type="epub">1932-6203</issn><publisher><publisher-name>Public Library of Science</publisher-name><publisher-loc>San Francisco, USA</publisher-loc></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">23565168</article-id><article-id pub-id-type="pmc">3614914</article-id><article-id pub-id-type="publisher-id">PONE-D-12-29445</article-id><article-id pub-id-type="doi">10.1371/journal.pone.0059795</article-id><article-categories><subj-group subj-group-type="heading"><subject>Research Article</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>Biology</subject><subj-group><subject>Computational Biology</subject><subj-group><subject>Microarrays</subject><subject>Systems Biology</subject></subj-group></subj-group><subj-group><subject>Molecular Cell Biology</subject><subj-group><subject>Gene Expression</subject></subj-group></subj-group><subj-group><subject>Systems Biology</subject></subj-group></subj-group><subj-group subj-group-type="Discipline-v2"><subject>Computer Science</subject><subj-group><subject>Algorithms</subject></subj-group><subj-group><subject>Software Engineering</subject><subj-group><subject>Software Tools</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v2"><subject>Mathematics</subject><subj-group><subject>Probability Theory</subject><subj-group><subject>Bayes Theorem</subject></subj-group></subj-group><subj-group><subject>Statistics</subject><subj-group><subject>Biostatistics</subject><subject>Statistical Methods</subject></subj-group></subj-group></subj-group></article-categories><title-group><article-title>Accelerating Bayesian Hierarchical Clustering of Time Series Data with a Randomised Algorithm</article-title><alt-title alt-title-type="running-head">Clustering Time Series with a Randomised Algorithm</alt-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Darkins</surname><given-names>Robert</given-names></name><xref ref-type="aff" rid="aff1">
<sup>1</sup>
</xref><xref ref-type="author-notes" rid="fn1">
<sup>&#x000a4;a</sup>
</xref></contrib><contrib contrib-type="author"><name><surname>Cooke</surname><given-names>Emma J.</given-names></name><xref ref-type="aff" rid="aff2">
<sup>2</sup>
</xref></contrib><contrib contrib-type="author"><name><surname>Ghahramani</surname><given-names>Zoubin</given-names></name><xref ref-type="aff" rid="aff3">
<sup>3</sup>
</xref></contrib><contrib contrib-type="author"><name><surname>Kirk</surname><given-names>Paul D. W.</given-names></name><xref ref-type="aff" rid="aff1">
<sup>1</sup>
</xref><xref ref-type="author-notes" rid="fn2">
<sup>&#x000a4;b</sup>
</xref></contrib><contrib contrib-type="author"><name><surname>Wild</surname><given-names>David L.</given-names></name><xref ref-type="aff" rid="aff1">
<sup>1</sup>
</xref></contrib><contrib contrib-type="author"><name><surname>Savage</surname><given-names>Richard S.</given-names></name><xref ref-type="aff" rid="aff1">
<sup>1</sup>
</xref><xref ref-type="corresp" rid="cor1">
<sup>*</sup>
</xref></contrib></contrib-group><aff id="aff1">
<label>1</label>
<addr-line>Systems Biology Centre, University of Warwick, Coventry, United Kingdom</addr-line>
</aff><aff id="aff2">
<label>2</label>
<addr-line>Department of Chemistry, University of Warwick, Coventry, United Kingdom</addr-line>
</aff><aff id="aff3">
<label>3</label>
<addr-line>Department of Engineering, University of Cambridge, Cambridge, United Kingdom</addr-line>
</aff><contrib-group><contrib contrib-type="editor"><name><surname>Rattray</surname><given-names>Magnus</given-names></name><role>Editor</role><xref ref-type="aff" rid="edit1"/></contrib></contrib-group><aff id="edit1">
<addr-line>University of Manchester, United Kingdom</addr-line>
</aff><author-notes><corresp id="cor1">* E-mail: <email>r.s.savage@warwick.ac.uk</email></corresp><fn fn-type="COI-statement"><p><bold>Competing Interests: </bold>The authors have declared that no competing interests exist.</p></fn><fn fn-type="con"><p>Conceived and designed the experiments: RD RSS EJC ZG PDWK DLW. Performed the experiments: RD. Analyzed the data: RD RSS EJC PDWK DLW. Contributed reagents/materials/analysis tools: RD RSS. Wrote the paper: RD RSS EJC ZG PDWK DLW.</p></fn><fn id="fn1" fn-type="current-aff"><label>&#x000a4;a</label><p>Current address: London Centre for Nanotechnology, University College London, London, United Kingdom</p></fn><fn id="fn2" fn-type="current-aff"><label>&#x000a4;b</label><p>Current address: Centre for Bioinformatics, Imperial College London, London, United Kingdom</p></fn></author-notes><pub-date pub-type="collection"><year>2013</year></pub-date><pub-date pub-type="epub"><day>2</day><month>4</month><year>2013</year></pub-date><volume>8</volume><issue>4</issue><elocation-id>e59795</elocation-id><history><date date-type="received"><day>25</day><month>9</month><year>2012</year></date><date date-type="accepted"><day>19</day><month>2</month><year>2013</year></date></history><permissions><copyright-statement>&#x000a9; 2013 Darkins et al</copyright-statement><copyright-year>2013</copyright-year><copyright-holder>Darkins et al</copyright-holder><license xlink:href="http://creativecommons.org/licenses/by/4.0/"><license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are properly credited.</license-p></license></permissions><abstract><p>We live in an era of abundant data. This has necessitated the development of new and innovative statistical algorithms to get the most from experimental data. For example, faster algorithms make practical the analysis of larger genomic data sets, allowing us to extend the utility of cutting-edge statistical methods. We present a randomised algorithm that accelerates the clustering of time series data using the Bayesian Hierarchical Clustering (BHC) statistical method. BHC is a general method for clustering any discretely sampled time series data. In this paper we focus on a particular application to microarray gene expression data. We define and analyse the randomised algorithm, before presenting results on both synthetic and real biological data sets. We show that the randomised algorithm leads to substantial gains in speed with minimal loss in clustering quality. The randomised time series BHC algorithm is available as part of the R package <italic>BHC</italic>, which is available for download from Bioconductor (version 2.10 and above) via <ext-link ext-link-type="uri" xlink:href="http://bioconductor.org/packages/2.10/bioc/html/BHC.html">http://bioconductor.org/packages/2.10/bioc/html/BHC.html</ext-link>. We have also made available a set of R scripts which can be used to reproduce the analyses carried out in this paper. These are available from the following URL. <ext-link ext-link-type="uri" xlink:href="https://sites.google.com/site/randomisedbhc/">https://sites.google.com/site/randomisedbhc/</ext-link>.</p></abstract><funding-group><funding-statement>The authors acknowledge support from EPSRC grants EP/F027400/1 (DLW, PDWK, RD and ZG) and EP/I036575/1 (DLW, PDWK and ZG). RSS acknowledges support from an MRC Biostatistics Fellowship. EJC acknowledges support from the Warwick MOAC Doctoral Training Centre. The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement></funding-group><counts><page-count count="9"/></counts></article-meta></front><body><sec id="s1"><title>Introduction</title><p>Many scientific disciplines are becoming data intensive. These subjects require the development of new and innovative statistical algorithms to fully utilise these data. Time series clustering methods in particular have become popular in many disciplines such as clustering stocks with different price dynamics in finance <xref rid="pone.0059795-Bauwens1" ref-type="bibr">[1]</xref>, clustering regions with different growth patterns <xref rid="pone.0059795-FrhwirthSchnatter1" ref-type="bibr">[2]</xref> or signal clustering <xref rid="pone.0059795-Jackson1" ref-type="bibr">[3]</xref>.</p><p>Molecular biology is one such subject. New and increasingly affordable measurement technologies such as microarrays have led to an explosion of high-quality data for transcriptomics, proteomics and metabolomics. These data are generally high-dimensional and are often time-courses rather than single time point measurements.</p><p>It is well-established that clustering genes on the basis of expression time series profiles can identify genes that are likely to be co-regulated by the same transcription factors <xref rid="pone.0059795-Eisen1" ref-type="bibr">[4]</xref>. There have been a number of approaches developed to clustering time series, for example using finite or infinite hidden Markov models <xref rid="pone.0059795-Schliep1" ref-type="bibr">[5]</xref>, <xref rid="pone.0059795-Beal1" ref-type="bibr">[6]</xref>. Another popular approach is the use of splines as basis functions <xref rid="pone.0059795-BarJoseph1" ref-type="bibr">[7]</xref>&#x02013;<xref rid="pone.0059795-Ma1" ref-type="bibr">[10]</xref>. <xref rid="pone.0059795-Liverani1" ref-type="bibr">[11]</xref> also use Fourier series as basis functions. A number of additional methods for time series data analysis have been reviewed by <xref rid="pone.0059795-BarJoseph2" ref-type="bibr">[12]</xref>.</p><p>These statistical methods often provide superior results to standard clustering algorithms, at the cost of a much greater computational load. This limits the size of data set to which a given method can be applied in a given fixed time frame. Fast implementations of the best statistical methods are therefore highly valuable.</p><p>The Bayesian Hierarchical Clustering (BHC) algorithm has proven a highly successful tool for the clustering of microarray data <xref rid="pone.0059795-Heller1" ref-type="bibr">[13]</xref>&#x02013;<xref rid="pone.0059795-Cooke1" ref-type="bibr">[15]</xref>. The time series BHC method uses Gaussian processes to model time series in a flexible way, making the method highly adaptive and able to handle a wide range of structure in the data.</p><p>The principal downside of the BHC algorithm is its run-time, in particular its scaling with the number of items clustered. This can be addressed via <italic>randomised algorithms</italic>
<xref rid="pone.0059795-Motwani1" ref-type="bibr">[16]</xref>, a class of techniques that can be highly powerful in this regard. Randomised algorithms employ a degree of randomness as part of their logic, aiming to achieve good average case performance with high probability. Because the requirement for guaranteeing a certain (e.g. optimal) result is relaxed, it is often possible to obtain significantly improved performance as a result.</p><p>In this paper, we apply the approach of <xref rid="pone.0059795-Heller2" ref-type="bibr">[17]</xref> to create a randomised BHC algorithm for clustering microarray time series. This allows much larger time series data sets to be analysed in a given amount of time, substantially extending the utility of the time series BHC method.</p></sec><sec id="s2"><title>Results</title><sec id="s2a"><title>Synthetic Data Results</title><p>To demonstrate the effectiveness of the randomised BHC algorithm, we test its performance on a realistic synthetic data set. We use synthetic data constructed from several realisations of the <italic>S. cerevisiae</italic> synthetic data generated in <xref rid="pone.0059795-Cooke1" ref-type="bibr">[15]</xref>. Using the fact that Gaussian processes are generative models, we draw random realisations from the BHC model obtained on a 169-gene subset of the cell cycle gene expression data of <xref rid="pone.0059795-Cho1" ref-type="bibr">[18]</xref>, to give a total of 1000 genes, spread across 13 distinct clusters.</p><p>Given that for these synthetic data we know the ground truth clustering partition, we use the adjusted Rand index as our performance metric <xref rid="pone.0059795-Hubert1" ref-type="bibr">[19]</xref>.</p><p>
<xref ref-type="fig" rid="pone-0059795-g001">Figure 1</xref> shows how the adjusted Rand index (averaged over runs) varies with the randomised algorithm parameter, <inline-formula><inline-graphic xlink:href="pone.0059795.e001.jpg"/></inline-formula>. For <inline-formula><inline-graphic xlink:href="pone.0059795.e002.jpg"/></inline-formula>, there is some loss in accuracy performance; however for <inline-formula><inline-graphic xlink:href="pone.0059795.e003.jpg"/></inline-formula>, the adjusted Rand index is approximately that of the greedy algorithm.</p><fig id="pone-0059795-g001" orientation="portrait" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0059795.g001</object-id><label>Figure 1</label><caption><title>Adjusted Rand index scores for different values of <inline-formula><inline-graphic xlink:href="pone.0059795.e004.jpg"/></inline-formula>, analysing the synthetic data set.</title><p>Each point is the average of 10 runs, with the error bars denoting the standard error on the mean. The horizontal dashed line shows the result for the full BHC method.</p></caption><graphic xlink:href="pone.0059795.g001"/></fig><p>
<xref ref-type="fig" rid="pone-0059795-g002">Figure 2</xref> shows the corresponding run-time performance. As expected, the algorithm is approximately linear in <inline-formula><inline-graphic xlink:href="pone.0059795.e005.jpg"/></inline-formula> and a significant speed-up can be obtained over the greedy algorithm. For these synthetic data, one could therefore pick <inline-formula><inline-graphic xlink:href="pone.0059795.e006.jpg"/></inline-formula> and get approximately the same performance as for the greedy algorithm, but with more than a <inline-formula><inline-graphic xlink:href="pone.0059795.e007.jpg"/></inline-formula> speed-up. And if some performance drop-off was acceptable, as much as an order of magnitude improvement is possible. We note that such a run takes only approximately 5 hours to complete on a single node 2.40 GHz Intel Xeon CPU.</p><fig id="pone-0059795-g002" orientation="portrait" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0059795.g002</object-id><label>Figure 2</label><caption><title>Run-times for different values of <inline-formula><inline-graphic xlink:href="pone.0059795.e008.jpg"/></inline-formula>, analysing the synthetic data set.</title><p>Each point is the average of 10 runs, with the error bars denoting the standard error on the mean. The horizontal dashed line shows the result for the full BHC method.</p></caption><graphic xlink:href="pone.0059795.g002"/></fig><p>We also consider how the run-time varies as a function of the total number of genes analysed, <inline-formula><inline-graphic xlink:href="pone.0059795.e009.jpg"/></inline-formula>. <xref ref-type="fig" rid="pone-0059795-g003">Figure 3</xref> shows this variation for several different <inline-formula><inline-graphic xlink:href="pone.0059795.e010.jpg"/></inline-formula> values. <xref ref-type="fig" rid="pone-0059795-g004">Figure 4</xref> shows the same information, expressed a a speed-up over the greedy algorithm.</p><fig id="pone-0059795-g003" orientation="portrait" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0059795.g003</object-id><label>Figure 3</label><caption><title>Run-time as a function of the number of genes, <inline-formula><inline-graphic xlink:href="pone.0059795.e011.jpg"/></inline-formula>, using (subsets of) the synthetic data.</title><p>Shown are the results for <inline-formula><inline-graphic xlink:href="pone.0059795.e012.jpg"/></inline-formula> (red), <inline-formula><inline-graphic xlink:href="pone.0059795.e013.jpg"/></inline-formula> (green) and <inline-formula><inline-graphic xlink:href="pone.0059795.e014.jpg"/></inline-formula> (blue), as well as for the full BHC method (black).</p></caption><graphic xlink:href="pone.0059795.g003"/></fig><fig id="pone-0059795-g004" orientation="portrait" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0059795.g004</object-id><label>Figure 4</label><caption><title>Speed up factor as a function of the number of genes, <inline-formula><inline-graphic xlink:href="pone.0059795.e015.jpg"/></inline-formula>, relative to the full BHC method, using (subsets of) the synthetic data.</title><p>Shown are the results for <inline-formula><inline-graphic xlink:href="pone.0059795.e016.jpg"/></inline-formula> (red), <inline-formula><inline-graphic xlink:href="pone.0059795.e017.jpg"/></inline-formula> (green) and <inline-formula><inline-graphic xlink:href="pone.0059795.e018.jpg"/></inline-formula> (blue). The horizontal dashed line shows the full BHC result.</p></caption><graphic xlink:href="pone.0059795.g004"/></fig><p>We note an interesting effect for the lowest value of <inline-formula><inline-graphic xlink:href="pone.0059795.e019.jpg"/></inline-formula> (<inline-formula><inline-graphic xlink:href="pone.0059795.e020.jpg"/></inline-formula>) in <xref ref-type="fig" rid="pone-0059795-g001">Figure 1</xref>. A significant part of the performance degradation for lower <inline-formula><inline-graphic xlink:href="pone.0059795.e021.jpg"/></inline-formula> values in <xref ref-type="fig" rid="pone-0059795-g001">Figure 1</xref> comes from the randomised algorithm over-estimating the number of clusters (these being synthetic data, we know the ground truth number of clusters). Investigation of the <inline-formula><inline-graphic xlink:href="pone.0059795.e022.jpg"/></inline-formula> point shows that this effect is lessened for the synthetic data for small <inline-formula><inline-graphic xlink:href="pone.0059795.e023.jpg"/></inline-formula>. We believe that this is because for small numbers of data items, the inferred noise level is more weakly constrained. This in turn allows for clusters with higher noise levels, meaning the algorithm can explain the data using a smaller number of noisy clusters.</p></sec><sec id="s2b"><title>Microarray Results</title><p>It is also important to validate the randomised algorithm on real microarray data. To do this, we use a subset of the data of <xref rid="pone.0059795-Cho1" ref-type="bibr">[18]</xref>, selecting genes that have a KEGG pathway annotation, using the version of the KEGG database to match that used in <xref rid="pone.0059795-Savage2" ref-type="bibr">[20]</xref>. This consists of yeast cell cycle microarray time series for 1165 genes, measured at 17 time points.</p><p>As a performance metric, we choose the Biological Homogeneity Index (BHI) <xref rid="pone.0059795-Datta1" ref-type="bibr">[21]</xref>, as implemented in the R package clValid <xref rid="pone.0059795-Brock1" ref-type="bibr">[22]</xref>. The BHI metric scores a clustering partition between 0 and 1, with higher scores assigned to more biologically homogeneous partitions with respect to a reference annotation set. This has proven to be an effective metric for measuring the performance of microarray-based gene clustering <xref rid="pone.0059795-Savage1" ref-type="bibr">[14]</xref>, <xref rid="pone.0059795-Cooke1" ref-type="bibr">[15]</xref>.</p><p>
<xref ref-type="fig" rid="pone-0059795-g005">Figure 5</xref> shows the BHI scores (averaged over 10 runs) as a function of the randomised-algorithm parameter, <inline-formula><inline-graphic xlink:href="pone.0059795.e024.jpg"/></inline-formula>. The BHI scores show very little variation for <inline-formula><inline-graphic xlink:href="pone.0059795.e025.jpg"/></inline-formula>, showing that the randomised algorithm is highly robust, in this case, to choice of <inline-formula><inline-graphic xlink:href="pone.0059795.e026.jpg"/></inline-formula>. There is typically a small drop in performance relative to the greedy algorithm.</p><fig id="pone-0059795-g005" orientation="portrait" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0059795.g005</object-id><label>Figure 5</label><caption><title>BHI scores for difference values of <inline-formula><inline-graphic xlink:href="pone.0059795.e027.jpg"/></inline-formula>, analysing the yeast microarray data set.</title><p>Each point is the average of 10 runs, with the error bars denoting the standard error on the mean. The horizontal dashed line shows the results for the full BHC method. Shown are the results for the different gene ontologies, Biological Process (red), Molecular Function (green), Cellular Component (blue) and the logical-OR of all three (black). The BHI scores were all generated using the org.Sc.sgd.db annotation R package.</p></caption><graphic xlink:href="pone.0059795.g005"/></fig><p>
<xref ref-type="fig" rid="pone-0059795-g006">Figure 6</xref> shows the corresponding run-times. As with the synthetic data, we see the expected <inline-formula><inline-graphic xlink:href="pone.0059795.e028.jpg"/></inline-formula> scaling. We note that here the overhead of the randomised algorithm means that for <inline-formula><inline-graphic xlink:href="pone.0059795.e029.jpg"/></inline-formula> the greedy algorithm is actually faster. However, the BHI results in <xref ref-type="fig" rid="pone-0059795-g005">Figure 5</xref> show that we could set <inline-formula><inline-graphic xlink:href="pone.0059795.e030.jpg"/></inline-formula> and gain almost a factor of 3 in speed while incurring only a minimal loss of performance. We note that such a run takes only approximately 2 hours to complete on a single node 2.40 GHz Intel Xeon CPU.</p><fig id="pone-0059795-g006" orientation="portrait" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0059795.g006</object-id><label>Figure 6</label><caption><title>Run-times for different values of <inline-formula><inline-graphic xlink:href="pone.0059795.e031.jpg"/></inline-formula>, analysing the yeast microarray data set.</title><p>Each point is the average of 10 runs, with the error bars denoting the standard error on the mean. The horizontal dashed line shows the results for the full BHC method.</p></caption><graphic xlink:href="pone.0059795.g006"/></fig><p>We note an interesting difference between <xref ref-type="fig" rid="pone-0059795-g002">Figures 2</xref> and <xref ref-type="fig" rid="pone-0059795-g006">6</xref> in run time, relative to the greedy BHC algorithm. Because the number of genes is similar in both cases, one might expect the performance relative to the greedy algorithm to be similar. However (as is shown in these figures) the efficiency of the randomised BHC algorithm depends on how balanced (or otherwise) the dendrogram is. For example, if many levels of the dendrogram split into subsets of very different sizes (one big, one small), the randomised algorithm may have to go through many iterations in order to define the entire dendrogram. The run time is therefore dependent not only on the number of genes and time points, but also on the underlying clustering structure in the data. Essentially, unbalanced dendrograms make the randomised algorithm less efficient.</p><p>We also note that for <inline-formula><inline-graphic xlink:href="pone.0059795.e032.jpg"/></inline-formula> values close to the actual number of genes, it is a general feature that randomised BHC will tend to be slower than the greedy algorithm. This is because in this case, the randomised algorithm has to perform a greedy run with almost the entire set of genes to define the top branching of the dendrogram, and then assign all the genes to one of the two branches and run the greedy algorithm again for each of these subsets.</p><p>
<xref ref-type="fig" rid="pone-0059795-g002">Figures 2</xref> and <xref ref-type="fig" rid="pone-0059795-g006">6</xref> show an increased variance in the run time for <inline-formula><inline-graphic xlink:href="pone.0059795.e033.jpg"/></inline-formula>. We believe this effect is due to the fact that for higher &#x000e2;&#x020ac;&#x0223c;m&#x000e2;&#x020ac;&#x02122; values, the run time is more likely to be dominated by a single run of the greedy algorithm for <inline-formula><inline-graphic xlink:href="pone.0059795.e034.jpg"/></inline-formula> items. This will make the run time very sensitive to <inline-formula><inline-graphic xlink:href="pone.0059795.e035.jpg"/></inline-formula>, which will be affected by the randomisation of the overall algorithm.</p></sec></sec><sec id="s3"><title>Discussion</title><p>We have presented a randomised algorithm for the BHC clustering method. The randomised algorithm is statistically well-motivated and leads to a number of concrete conclusions.</p><list list-type="bullet"><list-item><p>The randomised BHC algorithm can be used to obtain a substantial speed-up over the greedy BHC algorithm.</p></list-item><list-item><p>Substantial speed-up can be obtained at only small cost to the statistical performance of the method.</p></list-item><list-item><p>The overall computational complexity of the randomised BHC algorithm is <inline-formula><inline-graphic xlink:href="pone.0059795.e036.jpg"/></inline-formula>.</p></list-item></list><p>The randomised BHC time series algorithm can therefore be used on data sets of well over 1000 genes.</p><p>Use of the randomised BHC algorithm requires the user to set a value of <inline-formula><inline-graphic xlink:href="pone.0059795.e037.jpg"/></inline-formula>. On the basis of the analyses presented in this paper, we recommend that a value of <inline-formula><inline-graphic xlink:href="pone.0059795.e038.jpg"/></inline-formula> in the range <inline-formula><inline-graphic xlink:href="pone.0059795.e039.jpg"/></inline-formula> is reasonable, giving significant speed-up with minimal cost in terms of statistical performance.</p><p>The randomised time series BHC algorithm is available as part of the R package <italic>BHC</italic>, which is available for download from Bioconductor (version 2.10 and above) via <ext-link ext-link-type="uri" xlink:href="http://bioconductor.org/packages/2.10/bioc/html/BHC.html">http://bioconductor.org/packages/2.10/bioc/html/BHC.html</ext-link>.</p><p>We have also made available a set of R scripts which can be used to reproduce the analyses carried out in this paper. These are available from the following URL. <ext-link ext-link-type="uri" xlink:href="https://sites.google.com/site/randomisedbhc/">https://sites.google.com/site/randomisedbhc/</ext-link>.</p></sec><sec sec-type="methods" id="s4"><title>Methods</title><p>In this section, we provide a mathematical overview of the time series BHC algorithm. Greater detail can be found in <xref rid="pone.0059795-Cooke1" ref-type="bibr">[15]</xref>. time series BHC combines the BHC clustering algorithm, coupled with a Gaussian process data model to provide a flexible, generative representation of microarray time series. Here we replace the standard (greedy) BHC algorithm with a randomised algorithm, improving the computational complexity of the method and hence its run time for scientifically-useful numbers of genes.</p><sec id="s4a"><title>BHC Algorithm</title><p>The BHC algorithm <xref rid="pone.0059795-Heller1" ref-type="bibr">[13]</xref>&#x02013;<xref rid="pone.0059795-Cooke1" ref-type="bibr">[15]</xref>, <xref rid="pone.0059795-Xu1" ref-type="bibr">[23]</xref> performs agglomerative hierarchical clustering in a Bayesian setting. In agglomerative clustering algorithms, each gene begins in its own cluster and at each stage the two most similar clusters are merged. BHC uses a model-based criterion to do this, also learning the most likely number of clusters given the data (something which many clustering methods are unable to do in a principled way). We note that the BHC algorithm can be interpreted as a fast approximate inference method for a Dirichlet Process Model (DPM) <xref rid="pone.0059795-Heller1" ref-type="bibr">[13]</xref>.</p><p>The prior probability, <inline-formula><inline-graphic xlink:href="pone.0059795.e040.jpg"/></inline-formula>, that a given pair of clusters, <inline-formula><inline-graphic xlink:href="pone.0059795.e041.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="pone.0059795.e042.jpg"/></inline-formula>, should be merged is defined by the DPM and is determined solely by the concentration hyperparameter for the DPM and the number of genes currently in each partition of the clustering. Bayes' rule is then used to find the posterior probability, <inline-formula><inline-graphic xlink:href="pone.0059795.e043.jpg"/></inline-formula>, that the pair of clusters should be merged,<disp-formula id="pone.0059795.e044"><graphic xlink:href="pone.0059795.e044.jpg" position="anchor" orientation="portrait"/><label>(1)</label></disp-formula>where <inline-formula><inline-graphic xlink:href="pone.0059795.e045.jpg"/></inline-formula> is the set of <inline-formula><inline-graphic xlink:href="pone.0059795.e046.jpg"/></inline-formula> data points contained in clusters <inline-formula><inline-graphic xlink:href="pone.0059795.e047.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="pone.0059795.e048.jpg"/></inline-formula>. <inline-formula><inline-graphic xlink:href="pone.0059795.e049.jpg"/></inline-formula> is the marginal likelihood of the data given the hypothesis, <inline-formula><inline-graphic xlink:href="pone.0059795.e050.jpg"/></inline-formula>, that the data <inline-formula><inline-graphic xlink:href="pone.0059795.e051.jpg"/></inline-formula> belong to a single cluster and requires the specification of a likelihood function, <inline-formula><inline-graphic xlink:href="pone.0059795.e052.jpg"/></inline-formula>, as the probabilistic model generating the observed data, <inline-formula><inline-graphic xlink:href="pone.0059795.e053.jpg"/></inline-formula>. <inline-formula><inline-graphic xlink:href="pone.0059795.e054.jpg"/></inline-formula> is the probability that the data could be partitioned in any way which is consistent with the order of assembly of the current partition and is defined recursively,<disp-formula id="pone.0059795.e055"><graphic xlink:href="pone.0059795.e055.jpg" position="anchor" orientation="portrait"/><label>(2)</label></disp-formula>where <inline-formula><inline-graphic xlink:href="pone.0059795.e056.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="pone.0059795.e057.jpg"/></inline-formula> are previously merged clusters containing subsets of the data in <inline-formula><inline-graphic xlink:href="pone.0059795.e058.jpg"/></inline-formula>.</p><p>When <inline-formula><inline-graphic xlink:href="pone.0059795.e059.jpg"/></inline-formula> is greater than 0.5, it is more likely that the data points contained in the clusters <inline-formula><inline-graphic xlink:href="pone.0059795.e060.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="pone.0059795.e061.jpg"/></inline-formula> were generated from the same underlying function, <inline-formula><inline-graphic xlink:href="pone.0059795.e062.jpg"/></inline-formula>, than that the data points should belong to two or more clusters. When <inline-formula><inline-graphic xlink:href="pone.0059795.e063.jpg"/></inline-formula> is less than 0.5 for all remaining pairs of clusters, the number of clusters and partitions best described by the data has been found.</p><p>For the purposes of the BHC algorithm, a complete dendrogram is constructed, with at each step the most likely merger being made. This allows us to see the log-probability of mergers in the whole dendrogram, even when this value is very small. To determine the likely number of clusters, given the data, we then cut the dendrogram wherever the probability of merger falls below 0.5 (i.e. non-merger is more likely).</p><p>As described in <xref rid="pone.0059795-Heller1" ref-type="bibr">[13]</xref>, the <inline-formula><inline-graphic xlink:href="pone.0059795.e064.jpg"/></inline-formula> are dependent on a hyperparameter for the mixture model, <inline-formula><inline-graphic xlink:href="pone.0059795.e065.jpg"/></inline-formula>. As in previous work on BHC, we set <inline-formula><inline-graphic xlink:href="pone.0059795.e066.jpg"/></inline-formula> as a fixed value. This has the effect of setting a prior assumption of only weak clustering. One could learn this parameter as part of the BHC algorithm; we choose to not do this as it will substantially increase the run time of the algorithm.</p><p>The BHC algorithm provides a lower bound of the DP marginal likelihood, as shown in <xref rid="pone.0059795-Heller1" ref-type="bibr">[13]</xref>. For the randomised algorithm, we note that the lower bound on the DP marginal likelihood is effectively determined using a subset of only <inline-formula><inline-graphic xlink:href="pone.0059795.e067.jpg"/></inline-formula> data items. These lower bounds are used in the usual way to optimise hyperparameters for each potential merger. One could attempt in principle to compute the lower bound using all <inline-formula><inline-graphic xlink:href="pone.0059795.e068.jpg"/></inline-formula> data items. However, this will be computationally intensive and so we do not consider it in this paper.</p></sec><sec id="s4b"><title>Gaussian Process Regression</title><p>Gaussian processes define priors over the space of functions, making them highly suited for use as non-linear regression models. This is highly valuable for microarray time series <xref rid="pone.0059795-Chu1" ref-type="bibr">[24]</xref>&#x02013;<xref rid="pone.0059795-Stegle1" ref-type="bibr">[27]</xref>, where a wide range of functional forms can be expected. In essence, Gaussian Process Regression (GPR) allows us to minimise the assumptions we must make as to the underlying structure in our time series data.</p><p>For the time series BHC model, we model an observation at time <inline-formula><inline-graphic xlink:href="pone.0059795.e069.jpg"/></inline-formula> as <inline-formula><inline-graphic xlink:href="pone.0059795.e070.jpg"/></inline-formula>. For each cluster, we assume the latent function <inline-formula><inline-graphic xlink:href="pone.0059795.e071.jpg"/></inline-formula> is drawn from a Gaussian process with covariance function <inline-formula><inline-graphic xlink:href="pone.0059795.e072.jpg"/></inline-formula>, defined by hyperparameters, <inline-formula><inline-graphic xlink:href="pone.0059795.e073.jpg"/></inline-formula>. We also assume <italic>iid</italic> Gaussian noise, <inline-formula><inline-graphic xlink:href="pone.0059795.e074.jpg"/></inline-formula>.</p><p>Let <inline-formula><inline-graphic xlink:href="pone.0059795.e075.jpg"/></inline-formula> be the <inline-formula><inline-graphic xlink:href="pone.0059795.e076.jpg"/></inline-formula> observations in a cluster of <inline-formula><inline-graphic xlink:href="pone.0059795.e077.jpg"/></inline-formula> genes, where the <inline-formula><inline-graphic xlink:href="pone.0059795.e078.jpg"/></inline-formula> are time series of <inline-formula><inline-graphic xlink:href="pone.0059795.e079.jpg"/></inline-formula> time points. Each gene is normalised to have mean 0 and standard deviation 1 across time points. The prior of <inline-formula><inline-graphic xlink:href="pone.0059795.e080.jpg"/></inline-formula> is given for fixed values of <inline-formula><inline-graphic xlink:href="pone.0059795.e081.jpg"/></inline-formula>, such that <inline-formula><inline-graphic xlink:href="pone.0059795.e082.jpg"/></inline-formula>. It follows that the likelihood function for <inline-formula><inline-graphic xlink:href="pone.0059795.e083.jpg"/></inline-formula> is <inline-formula><inline-graphic xlink:href="pone.0059795.e084.jpg"/></inline-formula>, where <inline-formula><inline-graphic xlink:href="pone.0059795.e085.jpg"/></inline-formula> is the <inline-formula><inline-graphic xlink:href="pone.0059795.e086.jpg"/></inline-formula> identity matrix. The marginal likelihood of the data, <inline-formula><inline-graphic xlink:href="pone.0059795.e087.jpg"/></inline-formula>, is then:<disp-formula id="pone.0059795.e088"><graphic xlink:href="pone.0059795.e088.jpg" position="anchor" orientation="portrait"/><label>(3)</label></disp-formula>
<disp-formula id="pone.0059795.e089"><graphic xlink:href="pone.0059795.e089.jpg" position="anchor" orientation="portrait"/><label>(4)</label></disp-formula>where <inline-formula><inline-graphic xlink:href="pone.0059795.e090.jpg"/></inline-formula> is the covariance function for <inline-formula><inline-graphic xlink:href="pone.0059795.e091.jpg"/></inline-formula>.</p><p>Time series BHC implements either the squared exponential or cubic spline covariance functions. In this paper, we restrict our attention to the default choice of squared exponential covariance:<disp-formula id="pone.0059795.e092"><graphic xlink:href="pone.0059795.e092.jpg" position="anchor" orientation="portrait"/><label>(5)</label></disp-formula>where <inline-formula><inline-graphic xlink:href="pone.0059795.e093.jpg"/></inline-formula> is the Kronecker delta function and <inline-formula><inline-graphic xlink:href="pone.0059795.e094.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="pone.0059795.e095.jpg"/></inline-formula> are two time points for <inline-formula><inline-graphic xlink:href="pone.0059795.e096.jpg"/></inline-formula>. <inline-formula><inline-graphic xlink:href="pone.0059795.e097.jpg"/></inline-formula> is the signal variance parameter for the covariance function and <inline-formula><inline-graphic xlink:href="pone.0059795.e098.jpg"/></inline-formula> is the length-scale parameter.</p></sec><sec id="s4c"><title>Randomised BHC Algorithm</title><p>To speed up the time series BHC, we implement the randomised BHC algorithm of <xref rid="pone.0059795-Heller2" ref-type="bibr">[17]</xref> (specifically, algorithm 1). The key insight from which we hope to benefit is that the standard, greedy BHC algorithm is dominated by the computation of merges at the lowest level of the tree. Therefore, if we can reduce this load in a sensible way, it may be possible to produce a substantially faster algorithm.</p><p>Throughout this paper we will refer to the <italic>top</italic> of the dendrogram. This is the highest level of the dendrogram, where the whole set of genes is split into two subsets.</p><p>For reasonably balanced trees, the top levels should be well-defined even using only a random subset of the genes. From this idea, we can define the following randomised algorithm.</p><list list-type="bullet"><list-item><p>Select a subset of <inline-formula><inline-graphic xlink:href="pone.0059795.e099.jpg"/></inline-formula> genes.</p></list-item><list-item><p>Run BHC on the subset of <inline-formula><inline-graphic xlink:href="pone.0059795.e100.jpg"/></inline-formula> genes.</p></list-item><list-item><p>Filter the remaining <inline-formula><inline-graphic xlink:href="pone.0059795.e101.jpg"/></inline-formula> genes through the top level of the tree, computing merge probabilities between each individual gene and the two subsets of <inline-formula><inline-graphic xlink:href="pone.0059795.e102.jpg"/></inline-formula> to decide to which branch the gene belongs.</p></list-item><list-item><p>Including the original <inline-formula><inline-graphic xlink:href="pone.0059795.e103.jpg"/></inline-formula> genes, we have now subdivided all genes on the basis of the top level branch of the tree.</p></list-item><list-item><p>Now recurse for the gene subsets in each branch, until each subset size is <inline-formula><inline-graphic xlink:href="pone.0059795.e104.jpg"/></inline-formula>, at which point use the standard BHC algorithm to complete the lower levels of the tree.</p></list-item></list><p>In effect, we are using estimates of the higher levels of the tree to subdivide the genes so that it is not necessary to compute many of the potential low-level merge probabilities. <xref ref-type="fig" rid="pone-0059795-g007">Figure 7</xref> shows a flow chart describing the algorithm.</p><fig id="pone-0059795-g007" orientation="portrait" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0059795.g007</object-id><label>Figure 7</label><caption><title>Flow chart showing the randomised BHC algorithm.</title><p>The main loop is the randomised part of the algorithm, which is used recursively until the remaining gene subsets are small enough that it uses the greedy version of BHC to complete the tree and then terminates.</p></caption><graphic xlink:href="pone.0059795.g007"/></fig></sec><sec id="s4d"><title>Setting the Hyperparameters</title><p>The covariance function of the Gaussian processes used in this paper are characterised by a small number of hyperparameters. These hyperparameters are learned for each potential merger using the BFGS quasi-Newton method <xref rid="pone.0059795-Flannery1" ref-type="bibr">[28]</xref>.</p><p>This merge-by-merge optimisation allows each cluster to have different hyperparameter values, allowing for example for clusters with different intrinsic noise levels and time series with different characteristic length scales.</p></sec><sec id="s4e"><title>Utilising the Covariance Matrix Block Structure</title><p>We assume in this paper that each time series is sampled at the same set of time points. This leads to a block structure in the covariance matrix, which can be utilised to greatly accelerate the computation of the Gaussian process marginal likelihood.</p><p>The computational complexity of BHC is dominated by inversion of the covariance matrix. Considering the case of a group of <inline-formula><inline-graphic xlink:href="pone.0059795.e105.jpg"/></inline-formula> genes, each sampled at the same <inline-formula><inline-graphic xlink:href="pone.0059795.e106.jpg"/></inline-formula> time points, the naive approach to matrix inversion would require us to invert a <inline-formula><inline-graphic xlink:href="pone.0059795.e107.jpg"/></inline-formula> matrix, which is an <inline-formula><inline-graphic xlink:href="pone.0059795.e108.jpg"/></inline-formula> operation. However, we can instead use block matrix pseudoinversion, which recursively reduces the block size to one, at which point the remaining inversion is an <inline-formula><inline-graphic xlink:href="pone.0059795.e109.jpg"/></inline-formula> operation.</p><p>We also note that this is equivalent to a Bayesian analysis using a standard multivariate Gaussian. Indeed, considering the task in this way may be a simpler way of doing so and is certainly a useful way of gaining additional insights into the workings of the model.</p></sec><sec id="s4f"><title>Computational Complexity</title><p>When proposed merges have constant cost (the case considered by <xref rid="pone.0059795-Heller2" ref-type="bibr">[17]</xref>), the standard greedy BHC algorithm has <inline-formula><inline-graphic xlink:href="pone.0059795.e110.jpg"/></inline-formula> computational complexity.</p><p>For the time series BHC algorithm however, the merges do not have have constant cost. For a given node, we are merging <inline-formula><inline-graphic xlink:href="pone.0059795.e111.jpg"/></inline-formula> gene time series, each of length <inline-formula><inline-graphic xlink:href="pone.0059795.e112.jpg"/></inline-formula>. We therefore have to consider a <inline-formula><inline-graphic xlink:href="pone.0059795.e113.jpg"/></inline-formula> covariance matrix, which we must invert. As noted in <xref rid="pone.0059795-Cooke1" ref-type="bibr">[15]</xref>, this matrix is actually a block matrix consisting of <inline-formula><inline-graphic xlink:href="pone.0059795.e114.jpg"/></inline-formula> blocks, which means we can invert it in <inline-formula><inline-graphic xlink:href="pone.0059795.e115.jpg"/></inline-formula> operations.</p><p>Because <inline-formula><inline-graphic xlink:href="pone.0059795.e116.jpg"/></inline-formula> will be as large as <inline-formula><inline-graphic xlink:href="pone.0059795.e117.jpg"/></inline-formula> for the merges closer to the root node of the tree, this gives the greedy time series BHC algorithm a worst-case computational complexity of <inline-formula><inline-graphic xlink:href="pone.0059795.e118.jpg"/></inline-formula>.</p><p>The randomised algorithm for case of constant cost merges has <inline-formula><inline-graphic xlink:href="pone.0059795.e119.jpg"/></inline-formula> complexity <xref rid="pone.0059795-Heller2" ref-type="bibr">[17]</xref>). Heller and Ghahramani show that, for reasonably balanced trees, the complexity is dominated by the filtering step. Each of the <inline-formula><inline-graphic xlink:href="pone.0059795.e120.jpg"/></inline-formula> filtering steps is <inline-formula><inline-graphic xlink:href="pone.0059795.e121.jpg"/></inline-formula>, resulting in the overall <inline-formula><inline-graphic xlink:href="pone.0059795.e122.jpg"/></inline-formula> complexity. For the time series BHC algorithm, the filtering step is <inline-formula><inline-graphic xlink:href="pone.0059795.e123.jpg"/></inline-formula>, because of the additional cost of merging time series clusters. As in the original analysis there will be <inline-formula><inline-graphic xlink:href="pone.0059795.e124.jpg"/></inline-formula> filtering steps, giving an overall computational complexity for the randomised version of time series BHC of <inline-formula><inline-graphic xlink:href="pone.0059795.e125.jpg"/></inline-formula>.</p></sec></sec></body><back><ack><p>We thank Jim Griffin for useful discussions.</p></ack><ref-list><title>References</title><ref id="pone.0059795-Bauwens1"><label>1</label><mixed-citation publication-type="journal">
<name><surname>Bauwens</surname><given-names>L</given-names></name>, <name><surname>Rombouts</surname><given-names>J</given-names></name> (<year>2007</year>) <article-title>Bayesian clustering of many garch models</article-title>. <source>Econometric Reviews</source>
<volume>26</volume>: <fpage>365</fpage>&#x02013;<lpage>386</lpage>.</mixed-citation></ref><ref id="pone.0059795-FrhwirthSchnatter1"><label>2</label><mixed-citation publication-type="journal">
<name><surname>Fr&#x000fc;hwirth-Schnatter</surname><given-names>S</given-names></name>, <name><surname>Kaufmann</surname><given-names>S</given-names></name> (<year>2008</year>) <article-title>Model-based clustering of multiple time series</article-title>. <source>Journal of Business and Economic Statistics</source>
<volume>26</volume>: <fpage>78</fpage>&#x02013;<lpage>89</lpage>.</mixed-citation></ref><ref id="pone.0059795-Jackson1"><label>3</label><mixed-citation publication-type="book">Jackson E, Davy M, Doucet A, Fitzgerald W (2007) Bayesian unsupervised signal classification by Dirichlet process mixtures of Gaussian processes. In: Acoustics, Speech and Signal Processing, 2007. ICASSP 2007. IEEE International Conference on. IEEE, volume 3, pp. III&#x02013;1077.</mixed-citation></ref><ref id="pone.0059795-Eisen1"><label>4</label><mixed-citation publication-type="journal">
<name><surname>Eisen</surname><given-names>M</given-names></name>, <name><surname>Spellman</surname><given-names>P</given-names></name>, <name><surname>Brown</surname><given-names>P</given-names></name>, <name><surname>Botstein</surname><given-names>D</given-names></name> (<year>1998</year>) <article-title>Cluster Analysis and Display of Genome-wide Expression</article-title>. <source>Proceedings of the National Academy of Sciences</source>
<volume>95</volume>: <fpage>14863</fpage>&#x02013;<lpage>14868</lpage>.</mixed-citation></ref><ref id="pone.0059795-Schliep1"><label>5</label><mixed-citation publication-type="journal">
<name><surname>Schliep</surname><given-names>A</given-names></name>, <name><surname>Costa</surname><given-names>IG</given-names></name>, <name><surname>Steinhoff</surname><given-names>C</given-names></name>, <name><surname>Schonhuth</surname><given-names>A</given-names></name> (<year>2005</year>) <article-title>Analyzing gene expression time-courses</article-title>. <source>IEEE/ACM Trans Comput Biol Bioinform</source>
<volume>2</volume>: <fpage>179</fpage>&#x02013;<lpage>193</lpage>.<pub-id pub-id-type="pmid">17044182</pub-id></mixed-citation></ref><ref id="pone.0059795-Beal1"><label>6</label><mixed-citation publication-type="book">Beal M, Krishnamurthy P (2006) Gene Expression Time Course Clustering with Countably Infinite Hidden Markov Models. In: Proceedings of the Proceedings of the Twenty-Second Conference Annual Conference on Uncertainty in Artificial Intelligence (UAI-06). Arlington, Virginia: AUAI Press, 23&#x02013;30.</mixed-citation></ref><ref id="pone.0059795-BarJoseph1"><label>7</label><mixed-citation publication-type="journal">
<name><surname>Bar-Joseph</surname><given-names>Z</given-names></name>, <name><surname>Gerber</surname><given-names>G</given-names></name>, <name><surname>Gifford</surname><given-names>D</given-names></name>, <name><surname>Jaakkola</surname><given-names>T</given-names></name>, <name><surname>Simon</surname><given-names>I</given-names></name> (<year>2003</year>) <article-title>Continuous representations of time-series gene expression data</article-title>. <source>Journal of Computational Biology</source>
<volume>10</volume>: <fpage>341</fpage>&#x02013;<lpage>356</lpage>.<pub-id pub-id-type="pmid">12935332</pub-id></mixed-citation></ref><ref id="pone.0059795-Heard1"><label>8</label><mixed-citation publication-type="journal">
<name><surname>Heard</surname><given-names>NA</given-names></name>, <name><surname>Holmes</surname><given-names>CC</given-names></name>, <name><surname>Stephens</surname><given-names>DA</given-names></name>, <name><surname>Hand</surname><given-names>DJ</given-names></name>, <name><surname>Dimopoulos</surname><given-names>G</given-names></name> (<year>2005</year>) <article-title>Bayesian coclustering of Anopheles gene expression time series: Study of immune defense response to multiple experimental challenges</article-title>. <source>Proceedings of the National Academy of Sciences</source>
<volume>102</volume>: <fpage>16939</fpage>&#x02013;<lpage>16944</lpage>.</mixed-citation></ref><ref id="pone.0059795-Heard2"><label>9</label><mixed-citation publication-type="journal">
<name><surname>Heard</surname><given-names>NA</given-names></name>, <name><surname>Holmes</surname><given-names>CC</given-names></name>, <name><surname>Stephens</surname><given-names>DA</given-names></name> (<year>2006</year>) <article-title>A Quantitative Study of Gene Regulation Involved in the Immune Response of Anopheline Mosquitoes: An Application of Bayesian Hierarchical Clustering of Curves</article-title>. <source>Journal of the American Statistical Association</source>
<volume>101</volume>: <fpage>18</fpage>.</mixed-citation></ref><ref id="pone.0059795-Ma1"><label>10</label><mixed-citation publication-type="journal">
<name><surname>Ma</surname><given-names>P</given-names></name>, <name><surname>Castillo-Davis</surname><given-names>CI</given-names></name>, <name><surname>Zhong</surname><given-names>W</given-names></name>, <name><surname>Liu</surname><given-names>JS</given-names></name> (<year>2006</year>) <article-title>A data-driven clustering method for time course gene expression data</article-title>. <source>Nucleic Acids Research</source>
<volume>34</volume>: <fpage>1261</fpage>&#x02013;<lpage>1269</lpage>.<pub-id pub-id-type="pmid">16510852</pub-id></mixed-citation></ref><ref id="pone.0059795-Liverani1"><label>11</label><mixed-citation publication-type="book">Liverani S, Cussens J, Smith JQ (2010) Searching a Multivariate Partition Space Using MAXSAT. In: Masulli F, Peterson L, Tagliaferri R, editors, Computational Intelligence Methods for Bioinformatics and Biostatistics, 6th International Meeting, CIBB 2009 Genova, Italy, Springer, Heidelberg, volume 6160 of Lecture Notes in Computer Science. 240&#x02013;253.</mixed-citation></ref><ref id="pone.0059795-BarJoseph2"><label>12</label><mixed-citation publication-type="journal">
<name><surname>Bar-Joseph</surname><given-names>Z</given-names></name> (<year>2004</year>) <article-title>Analyzing time series gene expression data</article-title>. <source>Bioinformatics</source>
<volume>20</volume>: <fpage>2493</fpage>.<pub-id pub-id-type="pmid">15130923</pub-id></mixed-citation></ref><ref id="pone.0059795-Heller1"><label>13</label><mixed-citation publication-type="book">Heller KA, Ghahramani Z (2005) Bayesian Hierarchical Clustering. In: Twenty-second International Conference on Machine Learning (ICML-2005).</mixed-citation></ref><ref id="pone.0059795-Savage1"><label>14</label><mixed-citation publication-type="journal">
<name><surname>Savage</surname><given-names>RS</given-names></name>, <name><surname>Heller</surname><given-names>K</given-names></name>, <name><surname>Xu</surname><given-names>Y</given-names></name>, <name><surname>Ghahramani</surname><given-names>Z</given-names></name>, <name><surname>Truman</surname><given-names>WM</given-names></name>, <etal>et al</etal> (<year>2009</year>) <article-title>R/BHC: Fast Bayesian Hierarchical Clustering for Microarray Data</article-title>. <source>BMC Bioinformatics</source>
<volume>10</volume>: <fpage>242</fpage>.<pub-id pub-id-type="pmid">19660130</pub-id></mixed-citation></ref><ref id="pone.0059795-Cooke1"><label>15</label><mixed-citation publication-type="journal">
<name><surname>Cooke</surname><given-names>E</given-names></name>, <name><surname>Savage</surname><given-names>R</given-names></name>, <name><surname>Kirk</surname><given-names>P</given-names></name>, <name><surname>Darkins</surname><given-names>R</given-names></name>, <name><surname>Wild</surname><given-names>D</given-names></name> (<year>2011</year>) <article-title>Bayesian hierarchical clustering for microarray time series data with replicates and outlier measurements</article-title>. <source>BMC Bioinformatics</source>
<volume>12</volume>: <fpage>399</fpage>.<pub-id pub-id-type="pmid">21995452</pub-id></mixed-citation></ref><ref id="pone.0059795-Motwani1"><label>16</label><mixed-citation publication-type="book">Motwani R, Raghavan P (1995) Randomised Algorithms. Cambridge University Press.</mixed-citation></ref><ref id="pone.0059795-Heller2"><label>17</label><mixed-citation publication-type="journal">
<name><surname>Heller</surname><given-names>K</given-names></name>, <name><surname>Ghahramani</surname><given-names>Z</given-names></name> (<year>2005</year>) <article-title>Randomized algorithms for fast bayesian hierarchical clustering</article-title>. <source>PASCAL Workshop on Statistics and Optimization of Clustering</source>
<volume>25</volume>: <fpage>1</fpage>&#x02013;<lpage>22</lpage>.</mixed-citation></ref><ref id="pone.0059795-Cho1"><label>18</label><mixed-citation publication-type="journal">
<name><surname>Cho</surname><given-names>R</given-names></name>, <name><surname>Campbell</surname><given-names>M</given-names></name>, <name><surname>Steinmetz</surname><given-names>EWL</given-names></name>, <name><surname>Conway</surname><given-names>A</given-names></name>, <name><surname>Wodicka</surname><given-names>L</given-names></name>, <etal>et al</etal> (<year>1998</year>) <article-title>A Genome-Wide Transcriptional Analysis of the Mitotic Cell Cycle</article-title>. <source>Molecular Cell</source>
<volume>2</volume>: <fpage>65</fpage>&#x02013;<lpage>73</lpage>.<pub-id pub-id-type="pmid">9702192</pub-id></mixed-citation></ref><ref id="pone.0059795-Hubert1"><label>19</label><mixed-citation publication-type="journal">
<name><surname>Hubert</surname><given-names>L</given-names></name>, <name><surname>Arabie</surname><given-names>P</given-names></name> (<year>1985</year>) <article-title>Comparing partitions</article-title>. <source>Journal of the Classification</source>
<volume>2</volume>: <fpage>193</fpage>&#x02013;<lpage>218</lpage>.</mixed-citation></ref><ref id="pone.0059795-Savage2"><label>20</label><mixed-citation publication-type="journal">
<name><surname>Savage</surname><given-names>RS</given-names></name>, <name><surname>Ghahramani</surname><given-names>Z</given-names></name>, <name><surname>Griffin</surname><given-names>JE</given-names></name>, <name><surname>de la Cruz</surname><given-names>BJ</given-names></name>, <name><surname>Wild</surname><given-names>DL</given-names></name> (<year>2010</year>) <article-title>Discovering Transcriptional Modules by Bayesian Data Integration</article-title>. <source>Bioinformatics</source>
<volume>26</volume>: <fpage>i158</fpage>&#x02013;<lpage>i167</lpage>.<pub-id pub-id-type="pmid">20529901</pub-id></mixed-citation></ref><ref id="pone.0059795-Datta1"><label>21</label><mixed-citation publication-type="journal">
<name><surname>Datta</surname><given-names>S</given-names></name>, <name><surname>Datta</surname><given-names>S</given-names></name> (<year>2006</year>) <article-title>Methods for evaluating clustering algorithms for gene expression data using a reference set of functional classes</article-title>. <source>BMC Bioinformatics</source>
<volume>7</volume>: <fpage>397</fpage>.<pub-id pub-id-type="pmid">16945146</pub-id></mixed-citation></ref><ref id="pone.0059795-Brock1"><label>22</label><mixed-citation publication-type="journal">
<name><surname>Brock</surname><given-names>G</given-names></name>, <name><surname>Pihur</surname><given-names>V</given-names></name>, <name><surname>Datta</surname><given-names>S</given-names></name>, <name><surname>Datta</surname><given-names>S</given-names></name> (<year>2008</year>) <article-title>clValid: An R package for cluster validation</article-title>. <source>Journal of Statistical Software</source>
<volume>25</volume>: <fpage>1</fpage>&#x02013;<lpage>22</lpage>.</mixed-citation></ref><ref id="pone.0059795-Xu1"><label>23</label><mixed-citation publication-type="book">Xu Y, Heller K, Ghahramani Z (2009) Tree-based inference for Dirichlet process mixtures. AISTATS 2009 conference.</mixed-citation></ref><ref id="pone.0059795-Chu1"><label>24</label><mixed-citation publication-type="journal">
<name><surname>Chu</surname><given-names>W</given-names></name>, <name><surname>Ghahramani</surname><given-names>Z</given-names></name>, <name><surname>Falciani</surname><given-names>F</given-names></name>, <name><surname>Wild</surname><given-names>DL</given-names></name> (<year>2005</year>) <article-title>Biomarker discovery in microarray gene expression data with Gaussian processes</article-title>. <source>Bioinformatics</source>
<volume>21</volume>: <fpage>3383</fpage>&#x02013;<lpage>3393</lpage>.</mixed-citation></ref><ref id="pone.0059795-Kirk1"><label>25</label><mixed-citation publication-type="journal">
<name><surname>Kirk</surname><given-names>PDW</given-names></name>, <name><surname>Stumpf</surname><given-names>MPH</given-names></name> (<year>2009</year>) <article-title>Gaussian process regression bootstrapping: exploring the e_ect of uncertainty in time course data</article-title>. <source>Bioinformatics</source>
<volume>25</volume>: <fpage>1300</fpage>&#x02013;<lpage>1306</lpage>.<pub-id pub-id-type="pmid">19289448</pub-id></mixed-citation></ref><ref id="pone.0059795-Liu1"><label>26</label><mixed-citation publication-type="journal">
<name><surname>Liu</surname><given-names>Q</given-names></name>, <name><surname>Lin</surname><given-names>K</given-names></name>, <name><surname>Anderson</surname><given-names>B</given-names></name>, <name><surname>Smyth</surname><given-names>P</given-names></name>, <name><surname>Ihler</surname><given-names>A</given-names></name> (<year>2010</year>) <article-title>Estimating replicate time shifts using Gaussian process regression</article-title>. <source>Bioinformatics</source>
<volume>26</volume>: <fpage>770</fpage>&#x02013;<lpage>776</lpage>.<pub-id pub-id-type="pmid">20147305</pub-id></mixed-citation></ref><ref id="pone.0059795-Stegle1"><label>27</label><mixed-citation publication-type="journal">
<name><surname>Stegle</surname><given-names>O</given-names></name>, <name><surname>Denby</surname><given-names>KJ</given-names></name>, <name><surname>Cooke</surname><given-names>EJ</given-names></name>, <name><surname>Wild</surname><given-names>DL</given-names></name>, <name><surname>Ghahramani</surname><given-names>Z</given-names></name>, <etal>et al</etal> (<year>2010</year>) <article-title>A Robust Bayesian Two-Sample Test for Detecting Intervals of Differential Gene Expression in Microarray Time Series</article-title>. <source>Journal of Computational Biology</source>
<volume>17</volume>: <fpage>355</fpage>&#x02013;<lpage>367</lpage>.<pub-id pub-id-type="pmid">20377450</pub-id></mixed-citation></ref><ref id="pone.0059795-Flannery1"><label>28</label><mixed-citation publication-type="book">Flannery B, Press W, Teukolsky S, Vetterling W (1992) Numerical recipes in c. Press Syndicate of the University of Cambridge, New York.</mixed-citation></ref></ref-list></back></article>