<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.0 20120330//EN" "JATS-archivearticle1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="case-report"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">BMC Genomics</journal-id><journal-id journal-id-type="iso-abbrev">BMC Genomics</journal-id><journal-title-group><journal-title>BMC Genomics</journal-title></journal-title-group><issn pub-type="epub">1471-2164</issn><publisher><publisher-name>BioMed Central</publisher-name><publisher-loc>London</publisher-loc></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">24564514</article-id><article-id pub-id-type="pmc">4046685</article-id><article-id pub-id-type="publisher-id">5677</article-id><article-id pub-id-type="doi">10.1186/1471-2164-15-S1-S4</article-id><article-categories><subj-group subj-group-type="heading"><subject>Proceedings</subject></subj-group></article-categories><title-group><article-title>Towards sequence-based prediction of mutation-induced stability changes in unseen non-homologous proteins</article-title></title-group><contrib-group><contrib contrib-type="author" corresp="yes"><name><surname>Folkman</surname><given-names>Lukas</given-names></name><address><email>lukas.folkman@griffithuni.edu.au</email></address><xref ref-type="aff" rid="Aff16"/><xref ref-type="aff" rid="Aff17"/></contrib><contrib contrib-type="author"><name><surname>Stantic</surname><given-names>Bela</given-names></name><xref ref-type="aff" rid="Aff16"/></contrib><contrib contrib-type="author"><name><surname>Sattar</surname><given-names>Abdul</given-names></name><xref ref-type="aff" rid="Aff16"/><xref ref-type="aff" rid="Aff17"/></contrib><aff id="Aff16"><label/>Institute for Integrated and Intelligent Systems, Griffith University, Brisbane, Australia </aff><aff id="Aff17"><label/>NICTA - National ICT Australia, Kragujevac, Australia </aff></contrib-group><pub-date pub-type="epub"><day>24</day><month>1</month><year>2014</year></pub-date><pub-date pub-type="pmc-release"><day>24</day><month>1</month><year>2014</year></pub-date><pub-date pub-type="collection"><year>2014</year></pub-date><volume>15</volume><issue>Suppl 1</issue><elocation-id>S4</elocation-id><permissions><copyright-statement>&#x000a9; Folkman et al.; licensee BioMed Central Ltd. 2014</copyright-statement><license license-type="open-access"><license-p>This article is published under license to BioMed Central Ltd. This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0">http://creativecommons.org/licenses/by/2.0</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p></license></permissions><abstract id="Abs1"><sec><title>Background</title><p>Reliable prediction of stability changes induced by a single amino acid substitution is an important aspect of computational protein design. Several machine learning methods capable of predicting stability changes from the protein sequence alone have been introduced. Prediction performance of these methods is evaluated on mutations unseen during training. Nevertheless, different mutations of the same protein, and even the same residue, as encountered during training are commonly used for evaluation. We argue that a faithful evaluation can be achieved only when a method is tested on previously unseen proteins with low sequence similarity to the training set.</p></sec><sec><title>Results</title><p>We provided experimental evidence of the limitations of the evaluation commonly used for assessing the prediction performance. Furthermore, we demonstrated that the prediction of stability changes in previously unseen non-homologous proteins is a challenging task for currently available methods. To improve the prediction performance of our previously proposed method, we identified features which led to over-fitting and further extended the model with new features. The new method employs <italic>Evolutionary And Structural Encodings with Amino Acid parameters</italic> (<sc>EASE-AA</sc>). Evaluated with an independent test set of more than 600 mutations, <sc>EASE-AA</sc> yielded a Matthews correlation coefficient of 0.36 and was able to classify correctly 66% of the stabilising and 74% of the destabilising mutations. For real-value prediction, <sc>EASE-AA</sc> achieved the correlation of predicted and experimentally measured stability changes of 0.51.</p></sec><sec><title>Conclusions</title><p>Commonly adopted evaluation with mutations in the same protein, and even the same residue, randomly divided between the training and test sets lead to an overestimation of prediction performance. Therefore, stability changes prediction methods should be evaluated only on mutations in previously unseen non-homologous proteins. Under such an evaluation, <sc>EASE-AA</sc> predicts stability changes more reliably than currently available methods.</p></sec><sec><title>Electronic supplementary material</title><p>The online version of this article (doi:10.1186/1471-2164-15-S1-S4) contains supplementary material, which is available to authorized users.</p></sec></abstract><kwd-group xml:lang="en"><title>Keywords</title><kwd>protein mutation</kwd><kwd>stability changes</kwd><kwd>machine learning</kwd></kwd-group><custom-meta-group><custom-meta><meta-name>issue-copyright-statement</meta-name><meta-value>&#x000a9; BioMed Central Ltd 2014</meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec id="Sec1"><title>Background</title><p>Even a single amino acid substitution, a mutation, in a protein sequence may result in significant changes in protein stability, structure, and therefore in protein function as well [<xref ref-type="bibr" rid="CR1">1</xref>]. Hence, accurate prediction of stability changes in protein variants is a crucially important task in computational protein design. Moreover, the ability to predict stability changes may help us understand the relationship between protein mutations and inherited diseases.</p><p>As more experimental data about stability changes became available in the ProTherm database [<xref ref-type="bibr" rid="CR2">2</xref>], machine learning methods for predicting stability changes emerged. Broadly, they can be categorised as <italic>structure-based</italic> and <italic>sequence-based</italic> methods. <italic>Structure-based</italic> methods [<xref ref-type="bibr" rid="CR3">3</xref>&#x02013;<xref ref-type="bibr" rid="CR8">8</xref>] require protein three-dimensional structure on the input which can be limiting if the experimentally solved structure is not available. Thus, with the immense amounts of data coming from the genome sequencing projects, the <italic>sequence-based</italic> methods are valuable tools for studying protein variants. In this work, we focused our attention on the <italic>sequence-based</italic> methods.</p><p>Traditionally, sequence-based methods make their predictions based on the amino acid identities of the mutation site and several neighbouring residues [<xref ref-type="bibr" rid="CR9">9</xref>&#x02013;<xref ref-type="bibr" rid="CR12">12</xref>]. Alternatively, the mutation site and its neighbouring residues can be encoded with a set of amino acid properties to account for physicochemical differences among amino acids [<xref ref-type="bibr" rid="CR13">13</xref>, <xref ref-type="bibr" rid="CR14">14</xref>]. In our recent work [<xref ref-type="bibr" rid="CR15">15</xref>], we proposed a method that combines amino acid identities of the mutation site neighbourhood with evolutionary and predicted structural features.</p><p>All of the studies referenced above were able to report a high cross-validation accuracy between 77% and 86% (Matthews correlation coefficient between 0.39 and 0.65) when classifying mutations as stabilising or destabilising [<xref ref-type="bibr" rid="CR9">9</xref>&#x02013;<xref ref-type="bibr" rid="CR15">15</xref>]. Regarding the real-value prediction of stability changes, the correlation of the predicted and experimentally measured stability changes reached a correlation coefficient of 0.62 to 0.83 [<xref ref-type="bibr" rid="CR9">9</xref>&#x02013;<xref ref-type="bibr" rid="CR11">11</xref>, <xref ref-type="bibr" rid="CR15">15</xref>]. Nevertheless, an assessment study [<xref ref-type="bibr" rid="CR16">16</xref>] indicated that the prediction performance of these methods on an independent test set is considerably lower than stated in the original studies.</p><p>There might be several aspects to why currently available methods did not perform well in the independent assessment. For example, as shown in [<xref ref-type="bibr" rid="CR10">10</xref>], when the data set used for training and evaluation did not contain multiple records for measurements of the same mutation at different experimental conditions, sensitivity (accuracy on positive examples) of the proposed method decreased from 71% to 28%. When the evaluation was further restricted to only proteins with low sequence similarity to the training set, sensitivity reached only 15%. These findings [<xref ref-type="bibr" rid="CR10">10</xref>, <xref ref-type="bibr" rid="CR16">16</xref>] suggest that currently available methods may suffer from over-fitting on the mutations and proteins that they experienced during training. However, the over-fitting problem is not apparent from the performance results reported in the original studies. This may mean that the evaluation scheme needs to be revisited.</p><p>Commonly, stability changes prediction performance is evaluated using cross-validation which randomly divides all data set examples into <italic>k</italic> folds where <italic>k&#x02212;</italic>1 folds are used for training and one fold for testing. This is repeated <italic>k</italic> times, each time with a different test fold. Typically, a stability changes data set consists of 1,000 to 3,000 examples describing various mutations in up to 90 different proteins. Upon randomly dividing examples of such a data set into <italic>k</italic> folds, different mutations of the same protein, and even the same residue, can be found among several folds. This means that even though a prediction method is tested on <italic>mutations</italic> unseen during training, different mutations of the <italic>same protein</italic>, and even the <italic>same residue</italic>, can be found in both training and test folds. This introduces bias if a method is designed using a data set in which correlation among different mutations of the <italic>same protein</italic>exists. For instance, the data set compiled in this study contains 1,914 unique mutations in 74 different non-homologous proteins (960 different residues). In 68 proteins which have more than one mutation record available, 78% of mutations agree with the prevailing sign of stability changes for the given protein. This number rises to 82% when we analyse mutations in each residue position with more than one mutation record available. Because of this correlation in the available data, stability changes prediction methods should be evaluated solely on mutations in previously <italic>unseen non-homologous proteins</italic>.</p><p>In this study, we provided experimental evidence of the limitations of the evaluation commonly used for assessing the prediction performance. Next, we proposed an evaluation scheme that can detect over-fitting on mutations in residues and proteins encountered during training. To achieve this, the evaluation is done solely on previously unseen proteins with sequence similarity below 25%. Finally, to improve the prediction performance of our previously proposed method [<xref ref-type="bibr" rid="CR15">15</xref>], we identified features which led to over-fitting and further extended the model with new features. The new method bases its predictions on <italic>Evolutionary And Structural Encodings with Amino Acid parameters</italic> (<sc>EASE-AA</sc>). We compared <sc>EASE-AA</sc> with currently available methods for both classification and real-value prediction of stability changes. Our results show that <sc>EASE-AA</sc> increases prediction performance on unseen non-homologous proteins.</p></sec><sec id="Sec2" sec-type="methods"><title>Methods</title><p>Stability changes prediction can be viewed as a machine learning classification problem if we are only interested in the direction of the stability change: stabilising (an increase in the free energy of unfolding) or destabilising (a decrease in the free energy of unfolding). If we are concerned with the real-value prediction, it is a regression problem. In this study, we proposed a method referred to as <sc>EASE-AA</sc>: <italic>Evolutionary And Structural Encodings with Amino Acid parameters</italic>. <sc>EASE-AA</sc> encompasses two models: one trained for classification and one for regression.</p><sec id="Sec3"><title>Predictive features for <sc>EASE-AA</sc></title><p>For machine learning prediction of stability changes, each mutation needs to be encoded with a number of predictive features. We combined evolutionary and predicted structural features with physical amino acid parameters to design <sc>EASE-AA</sc>.</p><sec id="Sec4"><title>Evolutionary features</title><p>Some residues in a protein sequence are more conserved within the family of related proteins than others. Notably, functionally important sites tend to be conserved. This has been previously exploited for the prediction of deleterious mutations [<xref ref-type="bibr" rid="CR17">17</xref>&#x02013;<xref ref-type="bibr" rid="CR23">23</xref>]. We introduced a range of evolutionary features for the prediction of stability changes in our recent work [<xref ref-type="bibr" rid="CR15">15</xref>]. There, the best performing model included two evolutionary features: SIFT <italic>score</italic> (<italic>S</italic>) and <italic>mutation likelihood</italic> (<italic>M</italic>).</p><p>SIFT [<xref ref-type="bibr" rid="CR20">20</xref>] predicts whether a mutation affects the function of a protein. It is calculated from a scaled probability matrix of possible amino acid substitutions generated from a multiple sequence alignment of related sequences. SIFT scores range from 0 to 1 where scores below 0.05 are predicted as deleterious mutations. We ran SIFT using the Swiss-Prot and TrEMBL databases with sequences more than 90% identical to the query removed.</p><p>The feature <italic>mutation likelihood</italic> (<italic>M</italic>) expresses the probability of the introduced amino acid to appear in the multiple sequence alignment of related proteins. To calculate this feature, three iterations of PSI-BLAST [<xref ref-type="bibr" rid="CR24">24</xref>] in default configuration were used to search the NCBI non-redundant database. Then, <italic>M</italic> was extracted from the last position specific scoring matrix (PSSM). We divided <italic>M</italic> by 10 for normalisation so that most values fell within the range of <italic>&#x02212;</italic>1 and 1.</p></sec><sec id="Sec5"><title>Structural features</title><p>It has been shown previously that stability changes prediction can be guided by observing structural properties describing the secondary structure and accessible surface area of the mutated residue [<xref ref-type="bibr" rid="CR25">25</xref>]. However, structural information is not available in the case of <italic>sequence-based</italic> prediction of stability changes. Nevertheless, in our recent work [<xref ref-type="bibr" rid="CR15">15</xref>], we found that <italic>predicted</italic> structural features can supplement the missing structural information. There, the best performing model included features <italic>secondary structure type</italic> (<italic>SS)</italic> and <italic>accessible surface area</italic> (<italic>ASA</italic>) for classification and real-value prediction, respectively. We included both features in <sc>EASE-AA</sc> and further extended the model with predicted <italic>disorder probability</italic> (<italic>D</italic>).</p><p>We used the multi-step neural network method SPINE-X [<xref ref-type="bibr" rid="CR26">26</xref>] for the prediction of the secondary structure type and accessible surface area of each mutation site. For the prediction of the disorder probabilities, the neural network method SPINE-D [<xref ref-type="bibr" rid="CR27">27</xref>] was used. Since feature <italic>SS</italic> describes the mutation site as either <italic>&#x003b1;</italic>-helix, <italic>&#x003b2;</italic>-sheet, or coil, it was represented in three binary inputs (1 was used to determine the secondary structure type present, 0 otherwise). Unlike in our previous work where feature <italic>ASA</italic> encoded mutation site as buried or exposed, we included the real value of the predicted accessible surface area in <sc>EASE-AA</sc>.</p></sec><sec id="Sec6"><title>Amino acid parameters</title><p>Different sets of physical parameters for encoding the substituted and neighbouring amino acids have been introduced for the prediction of stability changes [<xref ref-type="bibr" rid="CR4">4</xref>, <xref ref-type="bibr" rid="CR5">5</xref>, <xref ref-type="bibr" rid="CR13">13</xref>, <xref ref-type="bibr" rid="CR14">14</xref>]. Recently, calculating the difference in physical parameters between the introduced and deleted amino acids was proposed [<xref ref-type="bibr" rid="CR8">8</xref>]. We followed this methodology and applied it to seven representative parameters including hydrophobicity, volume, polarisability, isoelectric point, helix probability, sheet probability, and a steric parameter (graph shape index). These parameters were first introduced in [<xref ref-type="bibr" rid="CR28">28</xref>] and later applied to the prediction of secondary structure [<xref ref-type="bibr" rid="CR26">26</xref>]. We used the scaled values of the seven parameters from [<xref ref-type="bibr" rid="CR29">29</xref>]. We refer to the predictive feature encompassing the differences of seven physical parameters for the introduced and deleted amino acids as <italic>amino acid parameters</italic> (<italic>AAP)</italic>.</p></sec><sec id="Sec7"><title>Final set of predictive features</title><p>The final set of predictive features for <sc>EASE-AA</sc> was composed of the following features: <italic>S</italic> (1 real-value input), <italic>M</italic> (1 real-value input), <italic>SS</italic> (3 binary inputs), <italic>ASA</italic> (1 real-value input), <italic>D</italic> (1 real-value input), <italic>AAP</italic> (7 real-value inputs). Compared to our previous work [<xref ref-type="bibr" rid="CR15">15</xref>], <sc>EASE-AA</sc> extends the predictive model with the disorder probability (<italic>D)</italic> and seven amino acid parameters (<italic>AAP)</italic>. Moreover, we excluded 6<italic>&#x000d7;</italic>20 binary inputs describing the three and three amino acid neighbours to the left and right from the mutation site. Also, <sc>EASE-AA</sc> does not include 20 inputs encoding the identities of the deleted and introduced amino acids. This approach resulted in an overall reduction of the number of input attributes from 145 to only 14. Hence, <sc>EASE-AA</sc> is presumably more robust against over-fitting.</p></sec></sec><sec id="Sec8"><title>Support vector machines</title><p>Support vector machines (SVM) [<xref ref-type="bibr" rid="CR30">30</xref>] are machine learning algorithms which can approximate non-linear functions by mapping the inputs to a high-dimensional feature space using a kernel function and then, solving a linear problem by finding a maximum margin separating hyperplane. We adopted the radial basis kernel function because it has been shown to perform well for predicting stability changes [<xref ref-type="bibr" rid="CR10">10</xref>]. To implement our method with SVM, we used the LIBSVM library [<xref ref-type="bibr" rid="CR31">31</xref>].</p><p>The regularisation parameter <italic>C</italic> and the radial basis kernel width parameter <italic>&#x003b3;</italic> need to be chosen to optimise SVM performance. In the case of real-value prediction, another parameter (&#x003b5;), determining the error neglected during training, is required. For classification, a parameter setting the weight (<italic>w)</italic> of the penalty for training error on positive examples should be set if the number of positive and negative examples in the data set is unbalanced. For each experiment, we optimised these parameters by running a <italic>grid search</italic> using 10-fold cross-validation on the training set so that the highest Matthews correlation coefficient (MCC) and lowest root mean square error (RMSE) were reached for classification and real-value prediction, respectively. In the grid search, we considered all possible combinations of <italic>C</italic> &#x02208; {2<sup><italic>&#x02212;</italic>5</sup>, 2<sup><italic>&#x02212;</italic>3</sup>, . . . , 2<sup>15</sup>}, <italic>&#x003b3;</italic> &#x02208; {2<sup><italic>&#x02212;</italic>15</sup>, 2<sup><italic>&#x02212;</italic>13</sup>, . . . , 2<sup>1</sup>}, and <italic>w</italic> &#x02208; {1, 1.5, 2, 2.5, 3} for classification, and <italic>C</italic> &#x02208; {2<sup><italic>&#x02212;</italic>1</sup>, 2<sup>0</sup>, . . . , 2<sup>6</sup>}, <italic>&#x003b3;</italic> &#x02208; {2<sup><italic>&#x02212;</italic>15</sup>, 2<sup><italic>&#x02212;</italic>14</sup>, . . . , 2<sup>0</sup>}, and <italic>&#x003b5;</italic> &#x02208; {2<sup><italic>&#x02212;</italic>8</sup>, 2<sup><italic>&#x02212;</italic>7</sup>, . . . , 2<sup><italic>&#x02212;</italic>1</sup>} for real-value prediction. The range values for <italic>C, &#x003b3;</italic>, and <italic>&#x003b5;</italic> were taken from the LIBSVM grid search [<xref ref-type="bibr" rid="CR31">31</xref>] and extended to suit all methods assessed in this study. We also considered using a data-driven approach for optimising the kernel width parameter (<italic>&#x003b3;</italic>) [<xref ref-type="bibr" rid="CR32">32</xref>], however, for the relatively small size of our data set, the grid search was a sufficient solution.</p><p>As mentioned above, we decided to optimise the SVM performance in terms of MCC in the case of classification. MCC is a measure of prediction performance that provides more relevant information than classification accuracy in cases when the data set is severely biased against one class of examples. Since destabilising (negative) mutations prevail in the available experimental data (74% in our data set), optimising on MCC allowed us to achieve a more balanced performance in terms of correctly predicted both stabilising and destabilising mutations.</p></sec><sec id="Sec9"><title>Data sets</title><p>We compiled a data set of free energy stability changes from the ProTherm database [<xref ref-type="bibr" rid="CR2">2</xref>] (February 2013). There, a stability change is defined as the difference in the unfolding free energy: &#x00394;&#x00394;<italic>G</italic><sub><italic>u</italic></sub>[kcal mol<sup><italic>&#x02212;</italic>1</sup>] = &#x00394;<italic>G</italic><sub><italic>u</italic></sub>(<italic>mutant</italic>) <italic>&#x02212;</italic> &#x00394;<italic>G</italic><sub><italic>u</italic></sub>(<italic>wild</italic>-<italic>type</italic>). Hence, for the classification problem, we defined stabilising mutations (&#x00394;&#x00394;<italic>G</italic><sub><italic>u</italic></sub><italic>&#x02265;</italic> 0) to be the positive examples and destabilising mutations (&#x00394;&#x00394;<italic>G</italic><sub><italic>u</italic></sub><italic>&#x0003c;</italic>0) to be the negative examples.</p><p>We extracted 3,329 mutations with listed stability changes and cross-checked all the sources where the measurements came from. We found that incorrect values (mostly the sign of &#x00394;&#x00394;<italic>G</italic><sub><italic>u</italic></sub>) had been entered from at least 18 sources. We corrected stability changes for all relevant (<italic>&#x0003e;</italic>230) mutations in the extracted data set. Next, we removed all duplicate entries of the same amino acid substitutions (different concentrations of chemicals, stability changes of the protein intermediate state, etc.). If several measurements of the same mutation under the <italic>same</italic> experimental conditions were present, we averaged the stability changes and kept only a single entry. If several measurements of the same mutation under <italic>different</italic> experimental conditions were present, we kept only the measurement closest to the physiological pH 7. We removed the other entries because we believe that there is not enough data to appropriately model stability changes of the same mutation under different experimental conditions. Moreover, stability changes of mutations differing only in temperature and pH were highly correlated in the extracted data set.</p><p>Finally, we identified 74 clusters of homologous sequences with more than 25% sequence similarity using BLASTCLUST [<xref ref-type="bibr" rid="CR33">33</xref>]. If there were several measurements of the same amino acid substitution within a single cluster, we kept only the measurement closest to the physiological pH 7. This process yielded a non-redundant data set of 1,914 mutations in 95 different proteins grouped into 74 non-homologous clusters. We refer to this data set as S1914. The data set is available in Additional file <xref rid="MOESM1" ref-type="media">1</xref>.</p></sec><sec id="Sec10"><title>Experiments and different evaluation schemes</title><p>Three different evaluation schemes were compared in this study: <italic>unseen-mutation, unseen-residue</italic>, and <italic>unseen-protein</italic> evaluation. The most commonly used evaluation of sequence-based stability changes prediction methods is on unseen mutations. There, mutations are <italic>randomly</italic> divided into training and test sets (or into cross-validation folds). This means that different mutations in the same protein, and even in the same residue, can be used for training and testing. Because of the correlation in the available data sets, the most important drawback of the <italic>unseen-mutation</italic> evaluation is that even methods which over-fit on residue positions and proteins from the training set can achieve high prediction performance on the test set (or in cross-validation).</p><p>The <italic>unseen-residue</italic> evaluation guarantees that all mutations in the same residue position of a protein (or its homologue) exist either in the training or the test set (or in distinct folds for cross-validation). Hence, methods which over-fit on mutations in residue positions from the training set are unlikely to achieve good prediction performance on the test set (or in cross-validation). The <italic>unseen-residue</italic> evaluation has been previously adopted for the design of a three-state prediction method I-Mutant3.0 [<xref ref-type="bibr" rid="CR34">34</xref>].</p><p>Finally, the strictest assessment we considered was the <italic>unseen-protein</italic> evaluation. In this case, all mutations in the same protein and its homologues were used exclusively for either training or testing. Thus, if a prediction method cannot generalise well for mutations in previously unseen non-homologous proteins, it is unlikely to achieve a good performance under this evaluation.</p><sec id="Sec11"><title><italic>Training set, test set, and cross-validation folds</italic></title><p>To achieve an unbiased evaluation, we split the S1914 data set randomly into training and independent test sets with a ratio of 2 : 1. We repeated this process 10 times producing 10 different training/test splits. Each training set was further divided into 10 cross-validation folds. The ratio of positive and negative examples in the 10 folds and in the independent test set was kept close to that of the original data set. Cross-validation using the 10 folds was employed to optimise the performance of the evaluated methods. Then, each method was trained on the whole training set and tested on the examples in the independent test set. The whole process was repeated 10 times, utilising the 10 different training/test splits. Finally, the results of the 10 experiments were averaged.</p><p>We compared <italic>unseen-mutation, unseen-residue</italic>, and <italic>unseen-protein</italic> evaluation schemes in this study. Hence, splitting into the training and independent test sets as well as to the cross-validation folds was executed according to one of these three evaluation schemes for different experiments.</p></sec><sec id="Sec12"><title>Comparison with currently available methods</title><p>We compared the prediction performance of our new method (<sc>EASE-AA</sc>) with our previously proposed method [<xref ref-type="bibr" rid="CR15">15</xref>] which also employs evolutionary and structural encodings (thus, we refer to it as <sc>EASE</sc>). To further show how prediction performance varies when different evaluation schemes are employed, we evaluated another two sequence-based methods: I-Mutant2.0 [<xref ref-type="bibr" rid="CR9">9</xref>] and MUpro [<xref ref-type="bibr" rid="CR10">10</xref>]. These two methods had also been included in an independent assessment study [<xref ref-type="bibr" rid="CR16">16</xref>]. We did not compare with I-Mutant3.0 [<xref ref-type="bibr" rid="CR34">34</xref>] because it predicts stability changes into three states (stabilising, destabilising, and neutral).</p><p>To be able to asses I-Mutant2.0 and MUpro under different evaluation schemes, we implemented the two methods according to their description in the original publications. Therefore, rather than performing a comparison with the actual methods, we performed a comparison with the set of predictive features proposed for I-Mutant2.0 and MUpro. This approach allowed us to achieve a fair comparison of all four methods by optimising the SVM parameters and re-training the SVM models for every experiment on the same training set.</p><p>I-Mutant2.0 bases its prediction on the occurrence frequencies of the sequential neighbourhood, hence, we refer to our implementation as <sc>SEQ-FREQ</sc>. MUpro uses amino acid identities of neighbouring residues, thus, we refer to our implementation of this method as <sc>SEQ-NEIGHB</sc>.</p></sec></sec><sec id="Sec13"><title>Evaluation measures</title><p>The prediction performance in the classification task was assessed in terms of Matthews correlation coefficient (MCC), classification accuracy (Q<sub>2</sub>), sensitivity (Se), specificity (Sp), positive predictive value (PPV), and negative predictive value (NPV):<disp-formula id="Equ1"><label>1</label><graphic xlink:href="12864_2014_5677_Equ1_HTML.gif" position="anchor"/></disp-formula><disp-formula id="Equ2"><label>2</label><graphic xlink:href="12864_2014_5677_Equ2_HTML.gif" position="anchor"/></disp-formula><disp-formula id="Equ3"><label>3</label><graphic xlink:href="12864_2014_5677_Equ3_HTML.gif" position="anchor"/></disp-formula><disp-formula id="Equ4"><label>4</label><graphic xlink:href="12864_2014_5677_Equ4_HTML.gif" position="anchor"/></disp-formula><disp-formula id="Equ5"><label>5</label><graphic xlink:href="12864_2014_5677_Equ5_HTML.gif" position="anchor"/></disp-formula><disp-formula id="Equ6"><label>6</label><graphic xlink:href="12864_2014_5677_Equ6_HTML.gif" position="anchor"/></disp-formula></p><p>where <italic>TP, TN, FP</italic>, and <italic>FN</italic> refer to the number of true positives, true negatives, false positives, and false negatives, respectively. Furthermore, we assessed the classification performance by plotting the receiver operating characteristic (ROC) curve and calculating the area under the ROC curve (AUC). A ROC curve plots the true positive rate (sensitivity) as a function of the false positive rate (100 <italic>&#x02212;</italic> specificity) at different prediction thresholds.</p><p>For real-value prediction, performance was assessed in terms of Pearson correlation coefficient (<italic>r)</italic> and root mean square error (RMSE):<disp-formula id="Equ7"><label>7</label><graphic xlink:href="12864_2014_5677_Equ7_HTML.gif" position="anchor"/></disp-formula><disp-formula id="Equ8"><label>8</label><graphic xlink:href="12864_2014_5677_Equ8_HTML.gif" position="anchor"/></disp-formula></p></sec></sec><sec id="Sec14" sec-type="results"><title>Results</title><p>We compared the prediction performance of the two methods from the literature, I-Mutant2.0 [<xref ref-type="bibr" rid="CR9">9</xref>] and MUpro [<xref ref-type="bibr" rid="CR10">10</xref>] (we refer to our implementations of these methods as <sc>SEQ-FREQ</sc> and <sc>SEQ-NEIGHB</sc>, respectively), our previously proposed method [<xref ref-type="bibr" rid="CR15">15</xref>] (denoted as <sc>EASE</sc> here), and the method designed in this study (<sc>EASE-AA</sc>). We evaluated both classification and real-value prediction employing the S1914 data set. To achieve a fair comparison of the four methods, each method was re-trained and had the SVM parameters optimised (utilising a cross-validation on the training set) for every experiment.</p><sec id="Sec15"><title>Comparison of different evaluation schemes</title><p>Commonly, stability changes prediction methods are evaluated using a cross-validation where different mutations of the same protein can be randomly distributed across different folds. We believe that this approach leads to a considerable overestimation of the prediction performance for proteins with low sequence similarity to the training set. To illustrate this in an experiment, we divided our data set into training and independent test sets in three different ways following the <italic>unseen-mutation, unseen-residue</italic>, and <italic>unseen-protein</italic> evaluation schemes (Methods). In the <italic>unseen-mutation</italic> evaluation, different mutations are randomly distributed between the training and test sets, whereas the <italic>unseen-residue</italic> (<italic>unseen-protein</italic>) evaluation guarantees that all mutations in the same residue position (same protein) exist either in the training or the test set. Also, we performed a 10-fold cross-validation on the training set for each training/test split. In this case, the 10 folds were created by <italic>randomly</italic> dividing all mutations. This means that the cross-validation was performed in an <italic>unseen-mutation</italic> evaluation fashion regardless of the evaluation scheme used for the independent test.</p><p>Table <xref rid="Tab1" ref-type="table">1</xref> compares the cross-validation and independent test classification performance of the four assessed methods using the three different evaluation schemes. In cross-validation, <sc>EASE</sc> yielded the highest Matthews correlation coefficient (MCC) of 0.45. <sc>EASE-AA</sc> achieved an MCC of 0.43, while it was 0.41 and 0.33 for <sc>SEQ-NEIGHB</sc> and <sc>SEQ-FREQ</sc>, respectively. The area under the ROC curve (AUC) ranged from 0.75 to 0.81 for the four methods.<table-wrap id="Tab1"><label>Table 1</label><caption><p>Comparison of the four methods using the three different evaluation schemes for classification</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Method</th><th align="left">Evaluation</th><th align="left">MCC</th><th align="left">Q<sub>2</sub>
</th><th align="left">Se</th><th align="left">Sp</th><th align="left">PPV</th><th align="left">NPV</th><th align="left">AUC</th></tr></thead><tbody><tr><td align="left">
<sc>SEQ-NEIGHB</sc>
</td><td align="left">
<italic>cross-validation</italic>
<sup>&#x02217;</sup>
</td><td align="left">0.41</td><td align="left">77.65</td><td align="left">55.09</td><td align="left">85.57</td><td align="left">57.35</td><td align="left">84.45</td><td align="left">0.78</td></tr><tr><td/><td align="left">
<italic>unseen-mutation</italic>
</td><td align="left">0.36</td><td align="left">75.80</td><td align="left">51.16</td><td align="left">84.48</td><td align="left">53.74</td><td align="left">83.08</td><td align="left">0.78</td></tr><tr><td/><td align="left">
<italic>unseen-residue</italic>
</td><td align="left">0.14</td><td align="left">71.65</td><td align="left">21.28</td><td align="left">89.42</td><td align="left">41.52</td><td align="left">76.30</td><td align="left">0.67</td></tr><tr><td/><td align="left">
<italic>unseen-protein</italic>
</td><td align="left">0.14</td><td align="left">69.09</td><td align="left">29.45</td><td align="left">83.13</td><td align="left">38.21</td><td align="left">76.89</td><td align="left">0.67</td></tr><tr><td align="left">
<sc>SEQ-FREQ</sc>
</td><td align="left">
<italic>cross-validation</italic>
<sup>&#x02217;</sup>
</td><td align="left">0.33</td><td align="left">72.63</td><td align="left">57.37</td><td align="left">77.98</td><td align="left">48.00</td><td align="left">83.92</td><td align="left">0.75</td></tr><tr><td/><td align="left">
<italic>unseen-mutation</italic>
</td><td align="left">0.29</td><td align="left">69.27</td><td align="left">58.64</td><td align="left">73.02</td><td align="left">43.36</td><td align="left">83.36</td><td align="left">0.74</td></tr><tr><td/><td align="left">
<italic>unseen-residue</italic>
</td><td align="left">0.22</td><td align="left">69.30</td><td align="left">43.40</td><td align="left">78.44</td><td align="left">41.54</td><td align="left">79.70</td><td align="left">0.68</td></tr><tr><td/><td align="left">
<italic>unseen-protein</italic>
</td><td align="left">0.18</td><td align="left">65.71</td><td align="left">47.70</td><td align="left">72.09</td><td align="left">37.71</td><td align="left">79.55</td><td align="left">0.66</td></tr><tr><td align="left">
<sc>EASE</sc>
</td><td align="left">
<italic>cross-validation</italic>
<sup>&#x02217;</sup>
</td><td align="left">0.45</td><td align="left">78.54</td><td align="left">60.95</td><td align="left">84.72</td><td align="left">58.33</td><td align="left">86.08</td><td align="left">0.81</td></tr><tr><td/><td align="left">
<italic>unseen-mutation</italic>
</td><td align="left">0.41</td><td align="left">77.05</td><td align="left">57.91</td><td align="left">83.80</td><td align="left">55.74</td><td align="left">84.96</td><td align="left">0.81</td></tr><tr><td/><td align="left">
<italic>unseen-residue</italic>
</td><td align="left">0.26</td><td align="left">73.26</td><td align="left">37.63</td><td align="left">85.84</td><td align="left">48.40</td><td align="left">79.59</td><td align="left">0.72</td></tr><tr><td/><td align="left">
<italic>unseen-protein</italic>
</td><td align="left">0.23</td><td align="left">71.27</td><td align="left">39.76</td><td align="left">82.44</td><td align="left">44.50</td><td align="left">79.44</td><td align="left">0.70</td></tr><tr><td align="left">
<sc>EASE-AA</sc>
</td><td align="left">
<italic>cross-validation</italic>
<sup>&#x02217;</sup>
</td><td align="left">0.43</td><td align="left">76.69</td><td align="left">63.35</td><td align="left">81.37</td><td align="left">54.43</td><td align="left">86.35</td><td align="left">0.80</td></tr><tr><td/><td align="left">
<italic>unseen-mutation</italic>
</td><td align="left">0.38</td><td align="left">74.71</td><td align="left">60.64</td><td align="left">79.66</td><td align="left">51.23</td><td align="left">85.17</td><td align="left">0.79</td></tr><tr><td/><td align="left">
<italic>unseen-residue</italic>
</td><td align="left">0.34</td><td align="left">73.23</td><td align="left">56.11</td><td align="left">79.27</td><td align="left">48.86</td><td align="left">83.65</td><td align="left">0.76</td></tr><tr><td/><td align="left">
<italic>unseen-protein</italic>
</td><td align="left">0.35</td><td align="left">73.24</td><td align="left">58.79</td><td align="left">78.36</td><td align="left">49.04</td><td align="left">84.30</td><td align="left">0.77</td></tr></tbody></table><table-wrap-foot><p>
<sup>&#x02217;</sup> cross-validation folds were created by dividing mutations randomly (<italic>unseen-mutation</italic> cross-validation)</p></table-wrap-foot></table-wrap></p><p>For the independent test, we used three different evaluation schemes: <italic>unseen-mutation, unseen-residue</italic>, and <italic>unseen-protein</italic>. The <italic>unseen-mutation</italic> evaluation resulted only in a marginally lower performance compared to the cross-validation results (an MCC and AUC decrease of up to 0.05 and 0.01, respectively). However, if the <italic>unseen-residue</italic> or <italic>unseen-protein</italic> evaluation was employed, the performance of all four methods decreased considerably when compared to the cross-validation results. The largest decline was for <sc>SEQ-NEIGHB</sc>. In this case, the MCC decreased by 0.27 (from 0.41 to 0.14) for both <italic>unseen-residue</italic> and <italic>unseen-protein</italic> evaluations. Our new method (<sc>EASE-AA</sc>) experienced the smallest decrease in prediction performance. <sc>EASE-AA</sc>'s MCC declined by 0.09 and 0.08 (from 0.43 to 0.34 and 0.35) for predictions on unseen residues and unseen proteins, respectively.</p><p>The receiver operating characteristic (ROC) curves in Figure <xref rid="Fig1" ref-type="fig">1</xref> compare the true positive rate of <sc>EASE</sc> and <sc>EASE-AA</sc> as a function of the false positive rate for the <italic>unseen-mutation</italic> and <italic>unseen-protein</italic> evaluation. We were interested in studying the decrease in the independent test performance between the two evaluation schemes. While in the case of <sc>EASE-AA</sc>, the area under the ROC curve (AUC) declined only by 0.02 for the <italic>unseen-protein</italic> evaluation, <sc>EASE</sc> yielded an AUC decrease of 0.11. The ROC curves of <sc>EASE</sc> and <sc>EASE-AA</sc> for the <italic>unseen-residue</italic> evaluation were similar to those for the <italic>unseen-protein</italic> evaluation (not shown in the figure).<fig id="Fig1"><label>Figure 1</label><caption><p>
<bold>ROC curves performance of EASE and EASE-aa using two different evaluation schemes</bold>. The true positive rate of <sc>EASE</sc> and <sc>EASE-AA</sc> is shown as a function of the false positive rate at different prediction thresholds. These are independent test results using the <italic>unseen-mutation</italic> and <italic>unseen-protein</italic> evaluation. While for <sc>EASE-AA</sc> the area under the ROC curve (AUC) declined only by 0.02 when comparing the <italic>unseen-mutation</italic> and <italic>unseen-protein</italic> evaluation, <sc>EASE</sc> yielded a decrease of 0.11.</p></caption><graphic xlink:href="12864_2014_5677_Fig1_HTML" id="d30e1677"/></fig></p><p>The results from the real-value prediction experiment showed the same trend in the relative comparison of the four methods under the three different evaluation schemes (Table <xref rid="Tab2" ref-type="table">2</xref>). Prediction performance decreased when comparing the results from the <italic>unseen-mutation</italic> with the <italic>unseen-residue</italic> or <italic>unseen-protein</italic> evaluation. The smallest decrease in prediction performance was yielded by <sc>EASE-AA</sc>. Also, <sc>EASE-AA</sc> was the best performing method in predicting real-value stability changes in previously unseen residues and unseen proteins.<table-wrap id="Tab2"><label>Table 2</label><caption><p>Comparison of the four methods using the three different evaluation schemes for real-value prediction</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Method</th><th align="left">Evaluation</th><th align="left">r</th><th align="left">RMSE</th></tr></thead><tbody><tr><td align="left">
<sc>SEQ-NEIGHB</sc>
</td><td align="left">
<italic>cross-validation</italic>
<sup>&#x02217;</sup>
</td><td align="left">0.63</td><td align="left">1.38</td></tr><tr><td/><td align="left">
<italic>unseen-mutation</italic>
</td><td align="left">0.59</td><td align="left">1.46</td></tr><tr><td/><td align="left">
<italic>unseen-residue</italic>
</td><td align="left">0.37</td><td align="left">1.60</td></tr><tr><td/><td align="left">
<italic>unseen-protein</italic>
</td><td align="left">0.34</td><td align="left">1.62</td></tr><tr><td align="left">
<sc>SEQ-FREQ</sc>
</td><td align="left">
<italic>cross-validation</italic>
<sup>&#x02217;</sup>
</td><td align="left">0.56</td><td align="left">1.47</td></tr><tr><td/><td align="left">
<italic>unseen-mutation</italic>
</td><td align="left">0.53</td><td align="left">1.53</td></tr><tr><td/><td align="left">
<italic>unseen-residue</italic>
</td><td align="left">0.40</td><td align="left">1.60</td></tr><tr><td/><td align="left">
<italic>unseen-protein</italic>
</td><td align="left">0.33</td><td align="left">1.67</td></tr><tr><td align="left">
<sc>EASE</sc>
</td><td align="left">
<italic>cross-validation</italic>
<sup>&#x02217;</sup>
</td><td align="left">0.68</td><td align="left">1.30</td></tr><tr><td/><td align="left">
<italic>unseen-mutation</italic>
</td><td align="left">0.64</td><td align="left">1.38</td></tr><tr><td/><td align="left">
<italic>unseen-residue</italic>
</td><td align="left">0.44</td><td align="left">1.55</td></tr><tr><td/><td align="left">
<italic>unseen-protein</italic>
</td><td align="left">0.40</td><td align="left">1.60</td></tr><tr><td align="left">
<sc>EASE-AA</sc>
</td><td align="left">
<italic>cross-validation</italic>
<sup>&#x02217;</sup>
</td><td align="left">0.58</td><td align="left">1.44</td></tr><tr><td/><td align="left">
<italic>unseen-mutation</italic>
</td><td align="left">0.55</td><td align="left">1.50</td></tr><tr><td/><td align="left">
<italic>unseen-residue</italic>
</td><td align="left">0.53</td><td align="left">1.46</td></tr><tr><td/><td align="left">
<italic>unseen-protein</italic>
</td><td align="left">0.50</td><td align="left">1.50</td></tr></tbody></table><table-wrap-foot><p>
<sup><italic>*</italic></sup> cross-validation folds were created by dividing mutations randomly (<italic>unseen-mutation</italic> cross-validation)</p></table-wrap-foot></table-wrap></p></sec><sec id="Sec16"><title>Training and evaluation on previously unseen non-homologous proteins</title><p>We discovered that the <italic>unseen-mutation</italic> evaluation leads to overestimating the prediction performance for previously unseen residues as well as for previously unseen proteins (Tables <xref rid="Tab1" ref-type="table">1</xref> and <xref rid="Tab2" ref-type="table">2</xref>). Interestingly, the prediction performance on unseen residues was similar to that on unseen proteins. Therefore, we employed the <italic>unseen-protein</italic> evaluation to further analyse the prediction performance of the four methods.</p><p>One of the reasons for the suboptimal performance in predicting unseen proteins could be that we optimised the four methods employing the <italic>unseen-mutation</italic> cross-validation (different mutations of the same protein can appear in different folds). To optimise the compared methods more appropriately to predict stability changes in unseen proteins, we split the training set into 10 folds so that none of the folds shared homologous sequences (<italic>unseen-protein</italic> cross-validation).</p><p>Table <xref rid="Tab3" ref-type="table">3</xref> summarises the cross-validation and independent test results from the classification experiment employing the <italic>unseen-protein</italic> evaluation. For cross-validation, the highest Matthews correlation coefficient (MCC) of 0.37 was achieved by our new method (<sc>EASE-AA</sc>). This result represents a relative improvement of 48% (an absolute improvement of 0.12) to the second best method (<sc>SEQ-FREQ</sc>). When we evaluated the four methods on the independent test set, the prediction performance decreased for all methods only marginally. <sc>EASE-AA</sc>, the best performing method, reached an MCC of 0.36 with a relative improvement of 50% (an absolute improvement of 0.12) compared to the second best method (<sc>SEQ-FREQ</sc>).<table-wrap id="Tab3"><label>Table 3</label><caption><p>Classification performance of the four methods optimised for the unseen-protein evaluation</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Method</th><th align="left">Evaluation</th><th align="left">MCC</th><th align="left">Q<sub>2</sub>
</th><th align="left">Se</th><th align="left">Sp</th><th align="left">PPV</th><th align="left">NPV</th><th align="left">AUC</th></tr></thead><tbody><tr><td align="left">
<sc>SEQ-NEIGHB</sc>
</td><td/><td align="left">0.18</td><td align="left">65.84</td><td align="left">46.67</td><td align="left">72.55</td><td align="left">37.34</td><td align="left">79.52</td><td align="left">0.64</td></tr><tr><td align="left">
<sc>SEQ-FREQ</sc>
</td><td align="left">
<italic>unseen-protein</italic>
</td><td align="left">0.25</td><td align="left">63.33</td><td align="left">65.71</td><td align="left">62.50</td><td align="left">38.05</td><td align="left">83.87</td><td align="left">0.69</td></tr><tr><td align="left">
<sc>EASE</sc>
</td><td align="left">
<italic>cross-validation</italic>
</td><td align="left">0.24</td><td align="left">70.99</td><td align="left">42.40</td><td align="left">81.01</td><td align="left">43.91</td><td align="left">80.05</td><td align="left">0.68</td></tr><tr><td align="left">
<sc>EASE-AA</sc>
</td><td/><td align="left">0.37</td><td align="left">72.72</td><td align="left">65.35</td><td align="left">75.31</td><td align="left">48.12</td><td align="left">86.11</td><td align="left">0.76</td></tr><tr><td align="left">
<sc>SEQ-NEIGHB</sc>
</td><td/><td align="left">0.16</td><td align="left">64.77</td><td align="left">45.64</td><td align="left">71.55</td><td align="left">36.24</td><td align="left">78.79</td><td align="left">0.65</td></tr><tr><td align="left">
<sc>SEQ-FREQ</sc>
</td><td align="left">
<italic>unseen-protein</italic>
</td><td align="left">0.24</td><td align="left">61.95</td><td align="left">66.97</td><td align="left">60.18</td><td align="left">37.33</td><td align="left">83.72</td><td align="left">0.70</td></tr><tr><td align="left">
<sc>EASE</sc>
</td><td align="left">
<italic>independent test</italic>
</td><td align="left">0.22</td><td align="left">69.28</td><td align="left">43.58</td><td align="left">78.38</td><td align="left">41.66</td><td align="left">79.68</td><td align="left">0.69</td></tr><tr><td align="left">
<sc>EASE-AA</sc>
</td><td/><td align="left">0.36</td><td align="left">71.53</td><td align="left">65.76</td><td align="left">73.57</td><td align="left">46.85</td><td align="left">85.85</td><td align="left">0.78</td></tr></tbody></table></table-wrap></p><p>Positive (negative) predictive value (PPV, NPV) refers to the proportion of mutations predicted as stabilising (destabilising) that are truly stabilising (destabilising). <sc>EASE-AA</sc> yielded PPV and NPV of 46.85% and 85.85%, respectively. These results represent absolute improvements of 9.52 and 2.13 percentage points when compared to <sc>SEQ-FREQ</sc>. The respective improvements compared to <sc>EASE</sc> were 5.19 and 6.17 percentage points.</p><p>The ROC curves in Figure <xref rid="Fig2" ref-type="fig">2</xref> compare the true positive rate of the four methods as a function of the false positive rate at different prediction thresholds. The figure demonstrates the benefit in terms of the number of correctly predicted positive examples upon employing our method (<sc>EASE-AA</sc>). <sc>EASE-AA</sc> achieved an AUC of 0.78, while <sc>EASE</sc>, <sc>SEQ-FREQ</sc>, and <sc>SEQ-NEIGHB</sc> yielded an AUC of 0.69, 0.70, and 0.65, respectively.<fig id="Fig2"><label>Figure 2</label><caption><p>
<bold>ROC curves performance of the four methods using the</bold>
<bold><italic>unseen-protein</italic></bold>
<bold>evaluation</bold>. The true positive rate of the four methods is shown as a function of the false positive rate at different prediction thresholds. These are <italic>unseen-protein</italic> independent test results. <sc>EASE-AA</sc>, <sc>EASE</sc>, <sc>SEQ-FREQ</sc>, and <sc>SEQ-NEIGHB</sc> yielded the area under the ROC curve (AUC) of 0.78, 0.69, 0.70, and 0.65, respectively.</p></caption><graphic xlink:href="12864_2014_5677_Fig2_HTML" id="d30e2406"/></fig></p><p>We estimated the statistical significance of <sc>EASE-AA</sc>'s improvements in the MCC and AUC over the 10 replications of independent testing using a student <italic>t</italic>-test. The null hypothesis stated that there was no statistical difference in the MCC (AUC) for <sc>EASE-AA</sc> and each of the three compared methods. The <italic>p</italic>-values associated with this null hypothesis were all less than 0.0005.</p><p>The results from the real-value prediction experiment employing the <italic>unseen-protein</italic> evaluation are summarised in Table <xref rid="Tab4" ref-type="table">4</xref>. As in the case of classification, <sc>EASE-AA</sc> performed the best yielding a correlation coefficient (<italic>r)</italic> of 0.51 and root mean square error (RMSE) of 1.48. These results represent relative improvements of 24% for <italic>r</italic> (an absolute improvement of 0.10) and 5% for RMSE (an absolute improvement of 0.08) to the second method (<sc>EASE</sc>).<table-wrap id="Tab4"><label>Table 4</label><caption><p>Real-value prediction performance of the four methods optimised for the unseen-protein evaluation</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Method</th><th align="left">Evaluation</th><th align="left">r</th><th align="left">RMSE</th></tr></thead><tbody><tr><td align="left">
<sc>SEQ-NEIGHB</sc>
</td><td/><td align="left">0.35</td><td align="left">1.67</td></tr><tr><td align="left">
<sc>SEQ-FREQ</sc>
</td><td align="left">
<italic>unseen-protein</italic>
</td><td align="left">0.36</td><td align="left">1.67</td></tr><tr><td align="left">
<sc>EASE</sc>
</td><td align="left">
<italic>cross-validation</italic>
</td><td align="left">0.42</td><td align="left">1.62</td></tr><tr><td align="left">
<sc>EASE-AA</sc>
</td><td/><td align="left">0.51</td><td align="left">1.54</td></tr><tr><td align="left">
<sc>SEQ-NEIGHB</sc>
</td><td/><td align="left">0.34</td><td align="left">1.61</td></tr><tr><td align="left">
<sc>SEQ-FREQ</sc>
</td><td align="left">
<italic>unseen-protein</italic>
</td><td align="left">0.36</td><td align="left">1.60</td></tr><tr><td align="left">
<sc>EASE</sc>
</td><td align="left">
<italic>independent test</italic>
</td><td align="left">0.41</td><td align="left">1.56</td></tr><tr><td align="left">
<sc>EASE-AA</sc>
</td><td/><td align="left">0.51</td><td align="left">1.48</td></tr></tbody></table></table-wrap></p><p>Comparing the results when the <italic>unseen-mutation</italic> cross-validation (Tables <xref rid="Tab1" ref-type="table">1</xref> and <xref rid="Tab2" ref-type="table">2</xref>) and the <italic>unseen-protein</italic> cross-validation (Tables <xref rid="Tab3" ref-type="table">3</xref> and <xref rid="Tab4" ref-type="table">4</xref>) were used for model optimisation, there does not seem to be a considerable difference in the <italic>unseen-protein</italic> independent test performance. The only exception was <sc>SEQ-FREQ</sc> which seemed to benefit from the appropriate model optimisation. <sc>SEQ-FREQ'S</sc> correlation coefficients increased by 0.06 (MCC) and 0.03 (<italic>r)</italic> for classification and real-value prediction, respectively.</p></sec><sec id="Sec17"><title>Prediction performance for different types of mutations</title><p><sc>EASE-AA</sc> outperformed the other three methods (<sc>EASE</sc>, <sc>SEQ-FREQ</sc>, and <sc>SEQ-NEIGHB</sc>) in predicting stability changes in unseen proteins. We were interested in how this improvement varied for different types of mutations. We investigated how accurate (in terms of MCC) each of the four compared methods was in predicting mutations in residues of different secondary structure types (<italic>&#x003b1;</italic>-helix, <italic>&#x003b2;</italic>-sheet, and coil) and accessible surface area assignments (exposed and buried). Residues were defined as exposed if at least 25% of their surface was accessible to the solvent and as buried otherwise. Furthermore, we explored the accuracy of predicting mutations inducing 'small' (&#x00394;&#x00394;<italic>G</italic><sub><italic>u</italic></sub> &#x02208; [<italic>&#x02212;</italic>1, 1]) and 'large' (<italic>|</italic>&#x00394;&#x00394;<italic>G</italic><sub><italic>u</italic></sub><italic>| &#x0003e;</italic>1 kcal mol<sup><italic>&#x02212;</italic>1</sup>) stability changes.</p><p>Figure <xref rid="Fig3" ref-type="fig">3</xref> shows the Matthews correlation coefficient (MCC) of the four compared methods as a function of the different types of mutations that we investigated. Regarding different secondary structure types, <sc>EASE-AA</sc> achieved an MCC of 0.37, 0.43, 0.27 for the helical, sheet, and coil residues, respectively. The largest relative improvement to the second best method (<sc>SEQ-FREQ</sc>) of 80% (an absolute improvement of 0.12) was achieved for coil residues. Interestingly, coil residues were the most difficult to predict for all four methods. For helical and sheet residues, our new method yielded relative improvements of 37% and 39%, respectively (absolute improvements of 0.10 and 0.12). All four methods were able to predict buried mutations more reliably than the exposed ones. The MCC values achieved by <sc>EASE-AA</sc> for the exposed and buried residues were 0.27 and 0.40, respectively. The respective relative (absolute) improvements to the second best method (<sc>SEQ-FREQ</sc>) were 59% (0.10) and 38% (0.11). Regarding the performance for mutations with different magnitudes of stability changes, all methods yielded a better performance for mutations causing 'large' stability changes. For this category, <sc>EASE-AA</sc> achieved an MCC of 0.39, while it was 0.27 for the category of 'small' stability changes. The relative (absolute) improvements for the 'small' and 'large' categories were 69% (0.11) and 34% (0.10), respectively.<fig id="Fig3"><label>Figure 3</label><caption><p>
<bold>Prediction performance of the four methods for different types of mutations</bold>. Matthews correlation coefficient (MCC) of <sc>SEQ-NEIGHB, SEQ-FREQ</sc>, <sc>EASE</sc>, and <sc>EASE-AA</sc> is shown as a function of the secondary structure type of the mutated residue, accessible surface area of the mutated residue (threshold of 25% for an exposed residue), and magnitude of the stability change. These are <italic>unseen-protein</italic> independent test results.</p></caption><graphic xlink:href="12864_2014_5677_Fig3_HTML" id="d30e2727"/></fig></p><p>Overall, <sc>EASE-AA</sc> achieved improvements in every category included in the comparison. Moreover, since the absolute improvements were quite balanced among the different types of mutations (ranging from 0.10 to 0.12), <sc>EASE-AA</sc> yielded higher relative improvements for mutation types which appeared to be more difficult to predict for all of the four compared methods (coils, exposed residues, and 'small' stability changes).</p></sec><sec id="Sec18"><title>Predictive features and the improvements yielded by <sc>EASE-AA</sc></title><p>We found that <sc>EASE-AA</sc> consistently outperformed our previous work (<sc>EASE</sc>) when predicting mutations in unseen proteins. Hence, we were interested in how each design step of <sc>EASE-AA</sc> contributed towards the final improvement. Figure <xref rid="Fig4" ref-type="fig">4</xref> compares the cross-validation performance on the training set in terms of Matthews correlation coefficient (MCC) and the area under the ROC curve (AUC) for <sc>EASE</sc>, <sc>EASE-AA</sc>, and two 'intermediate' methods (<sc>D+ASA+EASE AND AAP+D+ASA+EASE</sc>).<fig id="Fig4"><label>Figure 4</label><caption><p>
<bold>Performance of different variations of our method during the design of EASE-aa</bold>. The <italic>unseen-protein</italic> cross-validation performance [Matthews correlation coefficient (MCC) and the area under the ROC curve (AUC)] is shown for four different variations of our method. The difference between <sc>AAP+D+ASA+EASE</sc> and <sc>EASE-AA</sc> is the removal of the 140 input attributes defining the identities of the deleted, introduced, and neighbouring amino acids.</p></caption><graphic xlink:href="12864_2014_5677_Fig4_HTML" id="d30e2785"/></fig></p><p>First, we extended <sc>EASE</sc> with two predicted structural features, <italic>accessible surface area</italic> (<italic>ASA</italic>) and <italic>disorder probability</italic> (<italic>D)</italic>. However, the improvement in the cross-validation performance was only marginal. Next, the seven physical <italic>amino acid parameters</italic> (<italic>AAP)</italic> were added. The inclusion of <italic>AAP</italic> yielded a relative improvement of 24% (an absolute improvement 0.06) in terms of MCC. Finally, we suspected that the 140 input attributes encoding the deleted, introduced, and neighbouring amino acids implemented in <sc>EASE</sc> may have been leading to over-fitting on residue positions encountered during training. After excluding these 140 inputs (<sc>EASE-AA</sc>), there was a relative improvement of 19% (an absolute improvement of 0.06) in terms of MCC.</p><p>It has been shown previously that structural features [<xref ref-type="bibr" rid="CR25">25</xref>] and amino acid parameters [<xref ref-type="bibr" rid="CR13">13</xref>] can be used for the prediction of stability changes. To our best knowledge, evolutionary features have been used only in our previous work [<xref ref-type="bibr" rid="CR15">15</xref>]. Therefore, we studied the relationship between the evolutionary information and experimentally measured stability changes. We plotted the <italic>median</italic> of stability changes in the S1914 data set as a function of the PSSM scores for the <italic>mutation likelihood</italic> (the same as feature <italic>M)</italic> and <italic>conservation likehood</italic> (<italic>C)</italic> (Figure <xref rid="Fig5" ref-type="fig">5</xref>). This plot reveals that as the <italic>median</italic> of stability changes increases, so does the value of <italic>M</italic>, whereas the value of <italic>C</italic> decreases. Hence, the relationship shown in Figure <xref rid="Fig5" ref-type="fig">5</xref> demonstrates that there is a higher number of destabilising mutations when the mutation likelihood is low and residue conservation high. On the contrary, stabilising mutations tend to prevail for mutations which are common in the family of related proteins.<fig id="Fig5"><label>Figure 5</label><caption><p>
<bold>Relationship between evolutionary conservation and stability changes</bold>. The <italic>median</italic> of experimentally measured stability changes in the S1914 data set is shown as a function of the PSSM scores defining <italic>mutation</italic> and <italic>conservation likehood</italic>. The plot reveals that there is a higher number of destabilising mutations when the mutation likelihood is low and residue conservation high, while stabilising mutations tend to prevail for substitutions which are common in the family of related proteins.</p></caption><graphic xlink:href="12864_2014_5677_Fig5_HTML" id="d30e2882"/></fig></p></sec></sec><sec id="Sec19" sec-type="discussion"><title>Discussion</title><p>Our main interest was to asses the prediction of stability changes in previously unseen non-homologous proteins. We found that while high prediction performance can be achieved when different mutations of the same protein and residue positions are randomly divided for training and evaluation, it is challenging to predict stability changes in previously unseen proteins. Therefore, our results provide experimental evidence that the commonly adopted <italic>unseen-mutation</italic> evaluation lead to an over-estimation of the prediction performance. To address the prediction of stability changes in unseen proteins, we extended our previous work [<xref ref-type="bibr" rid="CR15">15</xref>] and proposed a new method (<sc>EASE-AA</sc>) which was able to outperform the other three methods in our comparison (Figure <xref rid="Fig2" ref-type="fig">2</xref>). For classification, <sc>EASE-AA</sc> achieved a Matthews correlation coefficient (MCC) of 0.36 (Table <xref rid="Tab3" ref-type="table">3</xref>). For real-value prediction, Pearson correlation coefficient (<italic>r)</italic> reached the value of 0.51 (Table <xref rid="Tab4" ref-type="table">4</xref>). Although such a performance may seem relatively low, these results represent relative improvements to the second best method of 50% (MCC) and 24% (<italic>r)</italic>. We believe that one of the limiting factors in yielding more reliable predictions is the scarcity of stabilising mutations and distinct non-homologous proteins available for training. Moreover, as noted elsewhere [<xref ref-type="bibr" rid="CR5">5</xref>], the variety of available experimental data is quite unbalanced (for instance, 26% of amino acid substitutions were to alanine in our data set).</p><p>Comparing the three different evaluation schemes, all four methods achieved a considerably higher prediction performance when the <italic>unseen-mutation</italic> evaluation was used (Table <xref rid="Tab1" ref-type="table">1</xref>). This could be attributed to the correlation that exists among different mutations of the same residue in the available experimental data. Because this correlation cannot be exploited when evaluation is done solely on residues unseen during training, prediction performance of all four methods decreased considerably upon employing the <italic>unseen-residue</italic> evaluation. The <italic>unseen-protein</italic> evaluation further guarantees that all mutations of the same protein are used either for training or evaluation. Performance of all four methods changed only marginally when comparing the results from the <italic>unseen-residue</italic> and <italic>unseen-protein</italic> evaluation. This is most likely because of the absence of 'protein-wide' predictive features in the four compared methods. Hence, the <italic>unseen-residue</italic> evaluation was just as challenging as the one on unseen proteins.</p><p>When comparing performance of <sc>EASE-AA</sc> with our previously proposed method [<xref ref-type="bibr" rid="CR15">15</xref>], the reasons for the improvements are twofold. Firstly, we excluded features encoding the identities of the deleted, introduced, and neighbouring amino acids because they led to over-fitting on residues and proteins encountered during training (Figure <xref rid="Fig4" ref-type="fig">4</xref>). Secondly, we incorporated the differences in seven representative physical parameters for the deleted and introduced amino acids (feature <italic>AAP)</italic>. For instance, the difference in the physical parameter encoding the volume of an amino acid can suggest if the mutation may induce strain in the protein structure due to the large size of the introduced residue. Similarly, a change in the hydrophobicity can suggest an introduction of disturbing interactions in the hydrophobic core of the protein.</p><p>Our new method adopts the evolutionary predictive features proposed in our previous work [<xref ref-type="bibr" rid="CR15">15</xref>]. Actually, the observation that functionally important sites tend to be evolutionary conserved has been previously exploited for the prediction of deleterious mutations [<xref ref-type="bibr" rid="CR20">20</xref>]. However, there are other reasons than the location of functional sites for the existence of conserved regions. For example, conserved regions play an important part in stabilising the structure of a protein [<xref ref-type="bibr" rid="CR35">35</xref>]. We demonstrated that the relationship between evolutionary predictive features derived from PSSM and experimentally measured stability changes from our data set agree with these general assumptions about sequence conservation (Figure <xref rid="Fig5" ref-type="fig">5</xref>).</p><p>It seems that the most difficult mutations to predict are either located in coil and exposed residues or those which cause only small stability changes (within the range of <italic>&#x02212;</italic>1 and 1 kcal mol<sup><italic>&#x02212;</italic>1</sup>). Prediction performance of all four methods in these three categories was lower than for any other category of different types of mutations that we investigated (Figure <xref rid="Fig3" ref-type="fig">3</xref>). These findings are in agreement with the results reported in a study about a neural network structure-based method [<xref ref-type="bibr" rid="CR3">3</xref>]. Also, it has been shown previously that different interactions govern stability changes in exposed and buried residues [<xref ref-type="bibr" rid="CR36">36</xref>]. Regarding the prediction of 'small' stability changes, naturally, it is harder to differentiate among subtle changes. Moreover, experimental data is affected by the error of measurement which can be as large as <italic>&#x000b1;</italic>0.48 kcal mol<sup><italic>&#x02212;</italic>1</sup>[<xref ref-type="bibr" rid="CR37">37</xref>]. Hence, the strict classification of the 'small' stability changes as stabilising or destabilising can be misleading [<xref ref-type="bibr" rid="CR34">34</xref>, <xref ref-type="bibr" rid="CR13">13</xref>].</p><p>Overall, our new method, <sc>EASE-AA</sc>, achieved improvements in all categories of different types of mutations that we investigated. Moreover, <sc>EASE-AA</sc> yielded higher relative improvements for the types of mutations which were the most challenging to predict for all four compared methods. These results demonstrate the robustness of the performance of our new method in predicting stability changes in previously unseen non-homologous proteins.</p></sec><sec id="Sec20" sec-type="conclusions"><title>Conclusions</title><p>In this work, we demonstrated how performance varies depending on the evaluation scheme employed. This is most likely because the machine learning methods are prone to over-fitting on mutations in residues and proteins encountered during training. When the evaluation on previously <italic>unseen non-homologous proteins</italic> was used, currently available methods could not reliably predict stability changes. To address this problem, we designed a new method which is based on <italic>Evolutionary And Structural Encodings with Amino Acid parameters</italic> (<sc>EASE-AA</sc>). Compared to our previous work [<xref ref-type="bibr" rid="CR15">15</xref>], features leading to over-fitting were removed and the model was extended with differences in seven physical amino acid parameters.</p><p><sc>EASE-AA</sc> achieved a Matthews correlation coefficient of 0.36 and was able to classify correctly 66% of the stabilising and 74% of the destabilising mutations. For real-value prediction, <sc>EASE-AA</sc> achieved a correlation between predicted and experimentally measured stability changes of 0.51. Even though this performance may seem relatively low, <sc>EASE-AA</sc> predicts stability changes in unseen proteins more accurately than the other three methods in our comparison. This further highlights another important finding of this study that the prediction performance of currently available methods is often overestimated due to randomly dividing different mutations of the same protein, and even the same residue, for training and evaluation.</p></sec><sec id="Sec21"><title>Availability of supporting data</title><p>The data sets supporting the results of this article are included within the article and its additional files. The source code of our method is available for download from <ext-link ext-link-type="uri" xlink:href="http://www.ict.griffith.edu.au/bioinf/ease">http://www.ict.griffith.edu.au/bioinf/ease</ext-link>.</p></sec><sec sec-type="supplementary-material"><title>Electronic supplementary material</title><sec id="Sec22"><supplementary-material content-type="local-data" id="MOESM1"><media xlink:href="12864_2014_5677_MOESM1_ESM.zip"><caption><p>Additional file 1: <bold>Data set S1914</bold>. The files containing the S1914 data set, as well as training, cross-validation, and test splits are available in a white-space-delimited tabular text format. All files are compressed in a single zip archive <italic>S1914.zip</italic>. (ZIP 2 MB)</p></caption></media></supplementary-material></sec></sec></body><back><fn-group><fn><p><bold>Competing interests</bold></p><p>The authors declare that they have no competing interests.</p></fn><fn><p><bold>Authors' contributions</bold></p><p>LF designed the study, developed the methods, and conducted the data analysis under the guidance of BS. LF drafted the manuscript. BS and AS contributed to the manuscript preparation.</p></fn></fn-group><ack><title>Acknowledgements</title><p>Helpful discussion with Yaoqi Zhou is gratefully acknowledged. NICTA is funded by the Australian Government as represented by the Department of Broadband, Communications and the Digital Economy, and the Australian Research Council through the ICT Centre of Excellence program.</p><p>
<bold>Declarations</bold>
</p><p>Publication of this article was funded by the Institute for Integrated and Intelligent Systems, Griffith University.</p><p>This article has been published as part of <italic>BMC Genomics</italic> Volume 15 Supplement 1, 2014: Selected articles from the Twelfth Asia Pacific Bioinformatics Conference (APBC 2014): Genomics. The full contents of the supplement are available online at <ext-link ext-link-type="uri" xlink:href="http://www.biomedcentral.com/bmcgenomics/supplements/15/S1">http://www.biomedcentral.com/bmcgenomics/supplements/15/S1</ext-link>.</p></ack><ref-list id="Bib1"><title>References</title><ref id="CR1"><label>1.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Laskowski</surname><given-names>RA</given-names></name><name><surname>Thornton</surname><given-names>JM</given-names></name></person-group><article-title>Understanding the molecular machinery of genetics through 3D structures</article-title><source>Nature Reviews Genetics</source><year>2008</year><volume>9</volume><issue>2</issue><fpage>141</fpage><lpage>151</lpage><pub-id pub-id-type="doi">10.1038/nrg2273</pub-id><pub-id pub-id-type="pmid">18160966</pub-id></element-citation></ref><ref id="CR2"><label>2.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kumar</surname><given-names>M</given-names></name><name><surname>Bava</surname><given-names>KA</given-names></name><name><surname>Gromiha</surname><given-names>MM</given-names></name><name><surname>Prabakaran</surname><given-names>P</given-names></name><name><surname>Kitajima</surname><given-names>K</given-names></name><name><surname>Uedaira</surname><given-names>H</given-names></name><name><surname>Sarai</surname><given-names>A</given-names></name></person-group><article-title>ProTherm and ProNIT: Thermodynamic databases for proteins and protein-nucleic acid interactions</article-title><source>Nucleic Acids Research</source><year>2006</year><volume>34</volume><issue>Suppl 1</issue><fpage>204</fpage><pub-id pub-id-type="doi">10.1093/nar/gkj103</pub-id></element-citation></ref><ref id="CR3"><label>3.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Capriotti</surname><given-names>E</given-names></name><name><surname>Fariselli</surname><given-names>P</given-names></name><name><surname>Casadio</surname><given-names>R</given-names></name></person-group><article-title>A neural-network-based method for predicting protein stability changes upon single point mutations</article-title><source>Bioinformatics</source><year>2004</year><volume>20</volume><issue>Suppl 1</issue><fpage>63</fpage><pub-id pub-id-type="doi">10.1093/bioinformatics/bth928</pub-id></element-citation></ref><ref id="CR4"><label>4.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Huang</surname><given-names>LT</given-names></name><name><surname>Saraboji</surname><given-names>K</given-names></name><name><surname>Ho</surname><given-names>SY</given-names></name><name><surname>Hwang</surname><given-names>SF</given-names></name><name><surname>Ponnuswamy</surname><given-names>M</given-names></name><name><surname>Gromiha</surname><given-names>MM</given-names></name></person-group><article-title>Prediction of protein mutant stability using classification and regression tool</article-title><source>Biophysical Chemistry</source><year>2007</year><volume>125</volume><issue>2-3</issue><fpage>462</fpage><lpage>470</lpage><pub-id pub-id-type="doi">10.1016/j.bpc.2006.10.009</pub-id><pub-id pub-id-type="pmid">17113702</pub-id></element-citation></ref><ref id="CR5"><label>5.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kang</surname><given-names>S</given-names></name><name><surname>Chen</surname><given-names>G</given-names></name><name><surname>Xiao</surname><given-names>G</given-names></name></person-group><article-title>Robust prediction of mutation-induced protein stability change by property encoding of amino acids</article-title><source>Protein Engineering Design and Selection</source><year>2009</year><volume>22</volume><issue>2</issue><fpage>75</fpage><pub-id pub-id-type="doi">10.1093/protein/gzn063</pub-id></element-citation></ref><ref id="CR6"><label>6.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Masso</surname><given-names>M</given-names></name><name><surname>Vaisman</surname><given-names>II</given-names></name></person-group><article-title>Accurate prediction of stability changes in protein mutants by combining machine learning with structure based computational mutagenesis</article-title><source>Bioinformatics</source><year>2008</year><volume>24</volume><issue>18</issue><fpage>2002</fpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btn353</pub-id><pub-id pub-id-type="pmid">18632749</pub-id></element-citation></ref><ref id="CR7"><label>7.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Tian</surname><given-names>J</given-names></name><name><surname>Wu</surname><given-names>N</given-names></name><name><surname>Chu</surname><given-names>X</given-names></name><name><surname>Fan</surname><given-names>Y</given-names></name></person-group><article-title>Predicting changes in protein thermostability brought about by single- or multi-site mutations</article-title><source>BMC Bioinformatics</source><year>2010</year><volume>11</volume><issue>1</issue><fpage>370</fpage><pub-id pub-id-type="doi">10.1186/1471-2105-11-370</pub-id><pub-id pub-id-type="pmid">20598148</pub-id></element-citation></ref><ref id="CR8"><label>8.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Yang</surname><given-names>Y</given-names></name><name><surname>Chen</surname><given-names>B</given-names></name><name><surname>Tan</surname><given-names>G</given-names></name><name><surname>Vihinen</surname><given-names>M</given-names></name><name><surname>Shen</surname><given-names>B</given-names></name></person-group><article-title>Structure-based prediction of the effects of a missense variant on protein stability</article-title><source>Amino Acids</source><year>2013</year><volume>44</volume><issue>3</issue><fpage>847</fpage><lpage>855</lpage><pub-id pub-id-type="doi">10.1007/s00726-012-1407-7</pub-id><pub-id pub-id-type="pmid">23064876</pub-id></element-citation></ref><ref id="CR9"><label>9.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Capriotti</surname><given-names>E</given-names></name><name><surname>Fariselli</surname><given-names>P</given-names></name><name><surname>Casadio</surname><given-names>R</given-names></name></person-group><article-title>I-Mutant2.0: Predicting stability changes upon mutation from the protein sequence or structure</article-title><source>Nucleic Acids Research</source><year>2005</year><volume>33</volume><issue>Suppl 2</issue><fpage>306</fpage><lpage>310</lpage><pub-id pub-id-type="doi">10.1093/nar/gki375</pub-id></element-citation></ref><ref id="CR10"><label>10.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Cheng</surname><given-names>J</given-names></name><name><surname>Randall</surname><given-names>A</given-names></name><name><surname>Baldi</surname><given-names>P</given-names></name></person-group><article-title>Prediction of protein stability changes for single-site mutations using support vector machines</article-title><source>Proteins: Structure, Function, and Bioinformatics</source><year>2006</year><volume>62</volume><issue>4</issue><fpage>1125</fpage><lpage>1132</lpage><pub-id pub-id-type="doi">10.1002/prot.20810</pub-id></element-citation></ref><ref id="CR11"><label>11.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Huang</surname><given-names>LT</given-names></name><name><surname>Gromiha</surname><given-names>MM</given-names></name><name><surname>Ho</surname><given-names>SY</given-names></name></person-group><article-title>iPTREE-STAB: Interpretable decision tree based method for predicting protein stability changes upon mutations</article-title><source>Bioinformatics</source><year>2007</year><volume>23</volume><issue>10</issue><fpage>1292</fpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btm100</pub-id><pub-id pub-id-type="pmid">17379687</pub-id></element-citation></ref><ref id="CR12"><label>12.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ozen</surname><given-names>A</given-names></name><name><surname>Gonen</surname><given-names>M</given-names></name><name><surname>Alpaydin</surname><given-names>E</given-names></name><name><surname>Haliloglu</surname><given-names>T</given-names></name></person-group><article-title>Machine learning integration for predicting the effect of single amino acid substitutions on protein stability</article-title><source>BMC Structural Biology</source><year>2009</year><volume>9</volume><issue>1</issue><fpage>66</fpage><pub-id pub-id-type="doi">10.1186/1472-6807-9-66</pub-id><pub-id pub-id-type="pmid">19840377</pub-id></element-citation></ref><ref id="CR13"><label>13.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Shen</surname><given-names>B</given-names></name><name><surname>Bai</surname><given-names>J</given-names></name><name><surname>Vihinen</surname><given-names>M</given-names></name></person-group><article-title>Physicochemical feature-based classification of amino acid mutations</article-title><source>Protein Engineering Design and Selection</source><year>2008</year><volume>21</volume><issue>1</issue><fpage>37</fpage><lpage>44</lpage><pub-id pub-id-type="doi">10.1093/protein/gzm084</pub-id></element-citation></ref><ref id="CR14"><label>14.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Teng</surname><given-names>S</given-names></name><name><surname>Srivastava</surname><given-names>A</given-names></name><name><surname>Wang</surname><given-names>L</given-names></name></person-group><article-title>Sequence feature-based prediction of protein stability changes upon amino acid substitutions</article-title><source>BMC Genomics</source><year>2010</year><volume>11</volume><issue>Suppl 2</issue><fpage>5</fpage><pub-id pub-id-type="doi">10.1186/1471-2164-11-S2-S5</pub-id><pub-id pub-id-type="pmid">20047688</pub-id></element-citation></ref><ref id="CR15"><label>15.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Folkman</surname><given-names>L</given-names></name><name><surname>Stantic</surname><given-names>B</given-names></name><name><surname>Sattar</surname><given-names>A</given-names></name></person-group><article-title>Sequence-only evolutionary and predicted structural features for the prediction of stability changes in protein mutants</article-title><source>BMC Bioinformatics</source><year>2013</year><volume>14</volume><issue>Suppl 2</issue><fpage>6</fpage><pub-id pub-id-type="doi">10.1186/1471-2105-14-S2-S6</pub-id><pub-id pub-id-type="pmid">23323795</pub-id></element-citation></ref><ref id="CR16"><label>16.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Khan</surname><given-names>S</given-names></name><name><surname>Vihinen</surname><given-names>MA</given-names></name></person-group><article-title>Performance of protein stability predictors</article-title><source>Human Mutation</source><year>2010</year><volume>1</volume><issue>1</issue><fpage>675</fpage><pub-id pub-id-type="doi">10.1002/humu.21242</pub-id><pub-id pub-id-type="pmid">20232415</pub-id></element-citation></ref><ref id="CR17"><label>17.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Adzhubei</surname><given-names>IA</given-names></name><name><surname>Schmidt</surname><given-names>S</given-names></name><name><surname>Peshkin</surname><given-names>L</given-names></name><name><surname>Ramensky</surname><given-names>VE</given-names></name><name><surname>Gerasimova</surname><given-names>A</given-names></name><name><surname>Bork</surname><given-names>P</given-names></name><name><surname>Kondrashov</surname><given-names>AS</given-names></name><name><surname>Sunyaev</surname><given-names>SR</given-names></name></person-group><article-title>A method and server for predicting damaging missense mutations</article-title><source>Nature Methods</source><year>2010</year><volume>7</volume><issue>4</issue><fpage>248</fpage><lpage>249</lpage><pub-id pub-id-type="doi">10.1038/nmeth0410-248</pub-id><pub-id pub-id-type="pmid">20354512</pub-id></element-citation></ref><ref id="CR18"><label>18.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Bromberg</surname><given-names>Y</given-names></name><name><surname>Yachdav</surname><given-names>G</given-names></name><name><surname>Rost</surname><given-names>B</given-names></name></person-group><article-title>SNAP predicts effect of mutations on protein function</article-title><source>Bioinformatics</source><year>2008</year><volume>24</volume><issue>20</issue><fpage>2397</fpage><lpage>2398</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btn435</pub-id><pub-id pub-id-type="pmid">18757876</pub-id></element-citation></ref><ref id="CR19"><label>19.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Capriotti</surname><given-names>E</given-names></name><name><surname>Calabrese</surname><given-names>R</given-names></name><name><surname>Casadio</surname><given-names>R</given-names></name></person-group><article-title>Predicting the insurgence of human genetic diseases associated to single point protein mutations with support vector machines and evolutionary information</article-title><source>Bioinformatics</source><year>2006</year><volume>22</volume><issue>22</issue><fpage>2729</fpage><lpage>2734</lpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btl423</pub-id><pub-id pub-id-type="pmid">16895930</pub-id></element-citation></ref><ref id="CR20"><label>20.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ng</surname><given-names>PC</given-names></name><name><surname>Henikoff</surname><given-names>S</given-names></name></person-group><article-title>Predicting deleterious amino acid substitutions</article-title><source>Genome research</source><year>2001</year><volume>11</volume><issue>5</issue><fpage>863</fpage><lpage>874</lpage><pub-id pub-id-type="doi">10.1101/gr.176601</pub-id><pub-id pub-id-type="pmid">11337480</pub-id></element-citation></ref><ref id="CR21"><label>21.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Thomas</surname><given-names>PD</given-names></name><name><surname>Kejariwal</surname><given-names>A</given-names></name></person-group><article-title>Coding single-nucleotide polymorphisms associated with complex vs. Mendelian disease: evolutionary evidence for differences in molecular effects</article-title><source>Proceedings of the National Academy of Sciences</source><year>2004</year><volume>101</volume><issue>43</issue><fpage>15398</fpage><lpage>15403</lpage><pub-id pub-id-type="doi">10.1073/pnas.0404380101</pub-id></element-citation></ref><ref id="CR22"><label>22.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Yue</surname><given-names>P</given-names></name><name><surname>Melamud</surname><given-names>E</given-names></name><name><surname>Moult</surname><given-names>J</given-names></name></person-group><article-title>SNPs3D: candidate gene and SNP selection for association studies</article-title><source>BMC Bioinformatics</source><year>2006</year><volume>7</volume><issue>1</issue><fpage>166</fpage><pub-id pub-id-type="doi">10.1186/1471-2105-7-166</pub-id><pub-id pub-id-type="pmid">16551372</pub-id></element-citation></ref><ref id="CR23"><label>23.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhao</surname><given-names>H</given-names></name><name><surname>Yang</surname><given-names>Y</given-names></name><name><surname>Lin</surname><given-names>H</given-names></name><name><surname>Zhang</surname><given-names>X</given-names></name><name><surname>Mort</surname><given-names>M</given-names></name><name><surname>Cooper</surname><given-names>DN</given-names></name><name><surname>Liu</surname><given-names>Y</given-names></name><name><surname>Zhou</surname><given-names>Y</given-names></name></person-group><article-title>DDIG-in: discriminating between disease-associated and neutral non-frameshifting micro-indels</article-title><source>Genome Biology</source><year>2013</year><volume>14</volume><issue>3</issue><fpage>23</fpage><pub-id pub-id-type="doi">10.1186/gb-2013-14-3-r23</pub-id></element-citation></ref><ref id="CR24"><label>24.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Altschul</surname><given-names>SF</given-names></name><name><surname>Madden</surname><given-names>TL</given-names></name><name><surname>Schaffer</surname><given-names>AA</given-names></name><name><surname>Zhang</surname><given-names>J</given-names></name><name><surname>Zhang</surname><given-names>Z</given-names></name><name><surname>Miller</surname><given-names>W</given-names></name><name><surname>Lipman</surname><given-names>DJ</given-names></name></person-group><article-title>Gapped BLAST and PSI-BLAST: A new generation of protein database search programs</article-title><source>Nucleic Acids Research</source><year>1997</year><volume>25</volume><issue>17</issue><fpage>3389</fpage><pub-id pub-id-type="doi">10.1093/nar/25.17.3389</pub-id><pub-id pub-id-type="pmid">9254694</pub-id></element-citation></ref><ref id="CR25"><label>25.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Saraboji</surname><given-names>K</given-names></name><name><surname>Gromiha</surname><given-names>MM</given-names></name><name><surname>Ponnuswamy</surname><given-names>MN</given-names></name></person-group><article-title>Average assignment method for predicting the stability of protein mutants</article-title><source>Biopolymers</source><year>2006</year><volume>82</volume><issue>1</issue><fpage>80</fpage><lpage>92</lpage><pub-id pub-id-type="doi">10.1002/bip.20462</pub-id><pub-id pub-id-type="pmid">16453276</pub-id></element-citation></ref><ref id="CR26"><label>26.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Faraggi</surname><given-names>E</given-names></name><name><surname>Zhang</surname><given-names>T</given-names></name><name><surname>Yang</surname><given-names>Y</given-names></name><name><surname>Kurgan</surname><given-names>L</given-names></name><name><surname>Zhou</surname><given-names>Y</given-names></name></person-group><article-title>SPINE X: Improving protein secondary structure prediction by multistep learning coupled with prediction of solvent accessible surface area and backbone torsion angles</article-title><source>Journal of Computational Chemistry</source><year>2012</year><volume>33</volume><issue>3</issue><fpage>259</fpage><lpage>267</lpage><pub-id pub-id-type="doi">10.1002/jcc.21968</pub-id><pub-id pub-id-type="pmid">22045506</pub-id></element-citation></ref><ref id="CR27"><label>27.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhang</surname><given-names>T</given-names></name><name><surname>Faraggi</surname><given-names>E</given-names></name><name><surname>Xue</surname><given-names>B</given-names></name><name><surname>Dunker</surname><given-names>AK</given-names></name><name><surname>Uversky</surname><given-names>VN</given-names></name><name><surname>Zhou</surname><given-names>Y</given-names></name></person-group><article-title>SPINE-D: Accurate prediction of short and long disordered regions by a single neural-network based method</article-title><source>Journal of Biomolecular Structure and Dynamics</source><year>2012</year><volume>29</volume><issue>4</issue><fpage>799</fpage><lpage>813</lpage><pub-id pub-id-type="doi">10.1080/073911012010525022</pub-id><pub-id pub-id-type="pmid">22208280</pub-id></element-citation></ref><ref id="CR28"><label>28.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Meiler</surname><given-names>J</given-names></name><name><surname>Muller</surname><given-names>M</given-names></name><name><surname>Zeidler</surname><given-names>A</given-names></name><name><surname>Schmaschke</surname><given-names>F</given-names></name></person-group><article-title>Generation and evaluation of dimension-reduced amino acid parameter representations by artificial neural networks</article-title><source>Journal of Molecular Modeling</source><year>2001</year><volume>7</volume><issue>9</issue><fpage>360</fpage><lpage>369</lpage><pub-id pub-id-type="doi">10.1007/s008940100038</pub-id></element-citation></ref><ref id="CR29"><label>29.</label><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Zhou</surname><given-names>Y</given-names></name><name><surname>Faraggi</surname><given-names>E</given-names></name></person-group><person-group person-group-type="editor"><name><surname>Rangwala</surname><given-names>H</given-names></name><name><surname>Karypis</surname><given-names>H</given-names></name></person-group><article-title>Prediction of one-dimensional structural properties of proteins by integrated neural networks</article-title><source>Wiley Series on Bioinformatics</source><year>2010</year><publisher-loc>Hoboken, NJ, USA</publisher-loc><publisher-name>John Wiley &#x00026; Sons</publisher-name><fpage>45</fpage><lpage>65</lpage></element-citation></ref><ref id="CR30"><label>30.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Cortes</surname><given-names>C</given-names></name><name><surname>Vapnik</surname><given-names>V</given-names></name></person-group><article-title>Support-vector networks</article-title><source>Machine Learning</source><year>1995</year><volume>20</volume><issue>3</issue><fpage>273</fpage><lpage>297</lpage></element-citation></ref><ref id="CR31"><label>31.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Chang</surname><given-names>CC</given-names></name><name><surname>Lin</surname><given-names>CJ</given-names></name></person-group><article-title>LIBSVM: A library for support vector machines</article-title><source>ACM Transactions on Intelligent Systems and Technology</source><year>2011</year><volume>2</volume><issue>3</issue><fpage>27</fpage><lpage>12727</lpage><pub-id pub-id-type="doi">10.1145/1961189.1961199</pub-id></element-citation></ref><ref id="CR32"><label>32.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lei</surname><given-names>JB</given-names></name><name><surname>Yin</surname><given-names>JB</given-names></name><name><surname>Shen</surname><given-names>HB</given-names></name></person-group><article-title>GFO: A data driven approach for optimizing gaussian function based similarity metric in computational biology</article-title><source>Neurocomputing</source><year>2013</year><volume>99</volume><fpage>307</fpage><lpage>315</lpage><pub-id pub-id-type="doi">10.1016/j.neucom.2012.07.003</pub-id></element-citation></ref><ref id="CR33"><label>33.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Altschul</surname><given-names>SF</given-names></name><name><surname>Gish</surname><given-names>W</given-names></name><name><surname>Miller</surname><given-names>W</given-names></name><name><surname>Myers</surname><given-names>EW</given-names></name><name><surname>Lipman</surname><given-names>DJ</given-names></name></person-group><article-title>Basic local alignment search tool</article-title><source>Journal of Molecular Biology</source><year>1990</year><volume>215</volume><issue>3</issue><fpage>403</fpage><lpage>410</lpage><pub-id pub-id-type="pmid">2231712</pub-id></element-citation></ref><ref id="CR34"><label>34.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Capriotti</surname><given-names>E</given-names></name><name><surname>Fariselli</surname><given-names>P</given-names></name><name><surname>Rossi</surname><given-names>I</given-names></name><name><surname>Casadio</surname><given-names>R</given-names></name></person-group><article-title>A three-state prediction of single point mutations on protein stability changes</article-title><source>BMC Bioinformatics</source><year>2008</year><volume>9</volume><issue>Suppl 2</issue><fpage>6</fpage><pub-id pub-id-type="doi">10.1186/1471-2105-9-S2-S6</pub-id><pub-id pub-id-type="pmid">18179702</pub-id></element-citation></ref><ref id="CR35"><label>35.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mirny</surname><given-names>LA</given-names></name><name><surname>Shakhnovich</surname><given-names>EI</given-names></name></person-group><article-title>Universally conserved positions in protein folds: reading evolutionary signals about stability, folding kinetics and function</article-title><source>Journal of Molecular Biology</source><year>1999</year><volume>291</volume><issue>1</issue><fpage>177</fpage><lpage>196</lpage><pub-id pub-id-type="doi">10.1006/jmbi.1999.2911</pub-id><pub-id pub-id-type="pmid">10438614</pub-id></element-citation></ref><ref id="CR36"><label>36.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Dehouck</surname><given-names>Y</given-names></name><name><surname>Grosfils</surname><given-names>A</given-names></name><name><surname>Folch</surname><given-names>B</given-names></name><name><surname>Gilis</surname><given-names>D</given-names></name><name><surname>Bogaerts</surname><given-names>P</given-names></name><name><surname>Rooman</surname><given-names>M</given-names></name></person-group><article-title>Fast and accurate predictions of protein stability changes upon mutations using statistical potentials and neural networks: PoPMuSiC-2.0</article-title><source>Bioinformatics</source><year>2009</year><volume>25</volume><issue>19</issue><fpage>2537</fpage><pub-id pub-id-type="doi">10.1093/bioinformatics/btp445</pub-id><pub-id pub-id-type="pmid">19654118</pub-id></element-citation></ref><ref id="CR37"><label>37.</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Khatun</surname><given-names>J</given-names></name><name><surname>Khare</surname><given-names>SD</given-names></name><name><surname>Dokholyan</surname><given-names>NV</given-names></name></person-group><article-title>Can contact potentials reliably predict stability of proteins?</article-title><source>Journal of Molecular Biology</source><year>2004</year><volume>336</volume><issue>5</issue><fpage>1223</fpage><lpage>1238</lpage><pub-id pub-id-type="doi">10.1016/j.jmb.2004.01.002</pub-id><pub-id pub-id-type="pmid">15037081</pub-id></element-citation></ref></ref-list></back></article>