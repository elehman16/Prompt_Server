<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.0 20120330//EN" "JATS-archivearticle1.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:mml="http://www.w3.org/1998/Math/MathML" article-type="research-article"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">ScientificWorldJournal</journal-id><journal-id journal-id-type="iso-abbrev">ScientificWorldJournal</journal-id><journal-id journal-id-type="publisher-id">TSWJ</journal-id><journal-title-group><journal-title>The Scientific World Journal</journal-title></journal-title-group><issn pub-type="ppub">2356-6140</issn><issn pub-type="epub">1537-744X</issn><publisher><publisher-name>Hindawi Publishing Corporation</publisher-name></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">24744680</article-id><article-id pub-id-type="pmc">3972955</article-id><article-id pub-id-type="doi">10.1155/2014/219580</article-id><article-categories><subj-group subj-group-type="heading"><subject>Research Article</subject></subj-group></article-categories><title-group><article-title>A Parallel Algorithm for the Two-Dimensional Time Fractional Diffusion Equation with Implicit Difference Method</article-title></title-group><contrib-group><contrib contrib-type="author"><contrib-id contrib-id-type="orcid" authenticated="false">http://orcid.org/0000-0003-0349-1100</contrib-id><name><surname>Gong</surname><given-names>Chunye</given-names></name><xref ref-type="aff" rid="I1">
<sup>1</sup>
</xref><xref ref-type="aff" rid="I2">
<sup>2</sup>
</xref><xref ref-type="aff" rid="I3">
<sup>3</sup>
</xref><xref ref-type="corresp" rid="cor1">*</xref></contrib><contrib contrib-type="author"><name><surname>Bao</surname><given-names>Weimin</given-names></name><xref ref-type="aff" rid="I1">
<sup>1</sup>
</xref><xref ref-type="aff" rid="I2">
<sup>2</sup>
</xref></contrib><contrib contrib-type="author"><name><surname>Tang</surname><given-names>Guojian</given-names></name><xref ref-type="aff" rid="I1">
<sup>1</sup>
</xref></contrib><contrib contrib-type="author"><name><surname>Jiang</surname><given-names>Yuewen</given-names></name><xref ref-type="aff" rid="I4">
<sup>4</sup>
</xref></contrib><contrib contrib-type="author"><name><surname>Liu</surname><given-names>Jie</given-names></name><xref ref-type="aff" rid="I3">
<sup>3</sup>
</xref></contrib></contrib-group><aff id="I1"><sup>1</sup>College of Aerospace Science and Engineering, National University of Defense Technology, Changsha 410073, China</aff><aff id="I2"><sup>2</sup>Science and Technology on Space Physics Laboratory, Beijing 100076, China</aff><aff id="I3"><sup>3</sup>School of Computer Science, National University of Defense Technology, Changsha 410073, China</aff><aff id="I4"><sup>4</sup>Department of Engineering Science, University of Oxford, Oxford OX2 0ES, UK</aff><author-notes><corresp id="cor1">*Chunye Gong: <email>gongchunye@gmail.com</email></corresp><fn fn-type="other"><p>Academic Editors: F. Liu, A. Sikorskii, and S. B. Yuste</p></fn></author-notes><pub-date pub-type="collection"><year>2014</year></pub-date><pub-date pub-type="epub"><day>12</day><month>3</month><year>2014</year></pub-date><volume>2014</volume><elocation-id>219580</elocation-id><history><date date-type="received"><day>9</day><month>1</month><year>2014</year></date><date date-type="accepted"><day>6</day><month>2</month><year>2014</year></date></history><permissions><copyright-statement>Copyright &#x000a9; 2014 Chunye Gong et al.</copyright-statement><copyright-year>2014</copyright-year><license xlink:href="https://creativecommons.org/licenses/by/3.0/"><license-p>This is an open access article distributed under the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p></license></permissions><abstract><p>It is very time consuming to solve fractional differential equations. The computational complexity of two-dimensional fractional differential equation (2D-TFDE) with iterative implicit finite difference method is <italic>O</italic>(<italic>M</italic>
<sub><italic>x</italic></sub>
<italic>M</italic>
<sub><italic>y</italic></sub>
<italic>N</italic>
<sup>2</sup>). In this paper, we present a parallel algorithm for 2D-TFDE and give an in-depth discussion about this algorithm. A task distribution model and data layout with virtual boundary are designed for this parallel algorithm. The experimental results show that the parallel algorithm compares well with the exact solution. The parallel algorithm on single Intel Xeon X5540 CPU runs 3.16&#x02013;4.17 times faster than the serial algorithm on single CPU core. The parallel efficiency of 81 processes is up to 88.24% compared with 9 processes on a distributed memory cluster system. We do think that the parallel computing technology will become a very basic method for the computational intensive fractional applications in the near future.</p></abstract><funding-group><award-group><funding-source>http://dx.doi.org/10.13039/501100001809 National Natural Science Foundation of China</funding-source><award-id>11175253</award-id></award-group></funding-group></article-meta></front><body><sec id="sec1"><title>1. Introduction</title><p>Building fractional mathematical models for specific phenomenon and developing numerical or analytical solutions for these fractional mathematical models are very hot in recent years. Fractional diffusion equations have been used to represent different kinds of dynamical systems [<xref rid="B1" ref-type="bibr">1</xref>]. But the fractional applications are rare. One reason for rare fractional applications is that the computational cost of approximating for fractional equations is too much heavy. The idea of fractional derivatives dates back to the 17th century. A fractional differential equation is a kind of equation which uses fractional derivatives. Fractional equations provide a powerful instrument for the description of memory and hereditary properties of different substances.</p><p>There has been a wide variety of numerical methods proposed for fractional equations [<xref rid="B2" ref-type="bibr">2</xref>, <xref rid="B3" ref-type="bibr">3</xref>], for example, finite difference method [<xref rid="B4" ref-type="bibr">4</xref>&#x02013;<xref rid="B7" ref-type="bibr">7</xref>], finite element method [<xref rid="B8" ref-type="bibr">8</xref>, <xref rid="B9" ref-type="bibr">9</xref>], spectral method [<xref rid="B10" ref-type="bibr">10</xref>, <xref rid="B11" ref-type="bibr">11</xref>], and meshless techniques [<xref rid="B12" ref-type="bibr">12</xref>]. Zhuang and Liu [<xref rid="B4" ref-type="bibr">4</xref>] presented an implicit difference approximation for two-dimensional time fractional diffusion equation (2D-TFDE) on a finite domain and discussed the stability and convergence of the method. The numerical result of an example agrees well with their theoretical analysis. Tadjeran and Meerschaert presented a numerical method, which combines the alternating directions implicit (ADI) approach with a Crank-Nicolson discretization and a Richardson extrapolation to obtain an unconditionally stable second-order accurate finite difference method, to approximate a two-dimensional fractional diffusion equation [<xref rid="B13" ref-type="bibr">13</xref>]. Two ADI schemes based on the <italic>L</italic>
<sub>1</sub> approximation and backward Euler method are considered for the two-dimensional fractional subdiffusion equation [<xref rid="B14" ref-type="bibr">14</xref>].</p><p>It is very time consuming to numerically solve fractional differential equations for high spatial dimension or big time integration. Short memory principle [<xref rid="B15" ref-type="bibr">15</xref>] and parallel computing [<xref rid="B16" ref-type="bibr">16</xref>, <xref rid="B17" ref-type="bibr">17</xref>] can be used to overcome this difficulty. Parallel computing is used to solve computation intensive applications simultaneously [<xref rid="B18" ref-type="bibr">18</xref>&#x02013;<xref rid="B21" ref-type="bibr">21</xref>]. Large scale applications in science and engineering such as particle transport [<xref rid="B22" ref-type="bibr">22</xref>&#x02013;<xref rid="B24" ref-type="bibr">24</xref>], different linear and nonlinear systems [<xref rid="B25" ref-type="bibr">25</xref>], nonnumerical intelligent algorithm [<xref rid="B26" ref-type="bibr">26</xref>], and computational fluid dynamics [<xref rid="B27" ref-type="bibr">27</xref>] can rely on parallel computing. Diethelm [<xref rid="B17" ref-type="bibr">17</xref>] implemented the fractional version of the second-order Adams-Bashforth-Moulton method on a parallel computer and discussed the precise nature of the parallelization concept. This is the first attempt for parallel computing on fractional equations. Following that, Gong et al. [<xref rid="B16" ref-type="bibr">16</xref>] presented a parallel algorithm for one-dimensional Riesz space fractional diffusion equation with explicit finite difference method. The numerical solution of Riesz space fractional equations has global dependence on grid points, which means the approximation of a grid point will depend on the approximation of all grid points in one time step. The numerical solution of time fractional equations has global dependence on time steps, which means that the approximation of a grid point will depend on the approximation of the grid point in all time steps. Global dependence means the nonlocal property of fractional deviates on time or space. Explicit method is easy to be parallelized but is restrict by its stability condition. Implicit method is hard to be solved by Gauss elimination method and often uses the iterative scheme. Until today, the power of parallel computing for high dimensional and time fractional differential equations has not been tried.</p><p>This paper focuses on the two-dimensional time fractional diffusion equation studied by Zhuang and Liu [<xref rid="B4" ref-type="bibr">4</xref>]:
<disp-formula id="EEq1"><label>(1)</label><mml:math id="M1"><mml:mtable><mml:mtr><mml:mtd><mml:maligngroup/><mml:mfrac><mml:mrow><mml:msup><mml:mrow><mml:mo>&#x02202;</mml:mo></mml:mrow><mml:mrow><mml:mi>&#x003b1;</mml:mi></mml:mrow></mml:msup><mml:mi>u</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msup><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>&#x003b1;</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfrac><mml:malignmark/><mml:mo>=</mml:mo><mml:mi>a</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mfrac><mml:mrow><mml:msup><mml:mrow><mml:mo>&#x02202;</mml:mo></mml:mrow><mml:mrow><mml:mn mathvariant="normal">2</mml:mn></mml:mrow></mml:msup><mml:mi>u</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mn mathvariant="normal">2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfrac></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:maligngroup/><mml:malignmark/><mml:mo>&#x02003;</mml:mo><mml:mo>+</mml:mo><mml:mi>b</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mfrac><mml:mrow><mml:msup><mml:mrow><mml:mo>&#x02202;</mml:mo></mml:mrow><mml:mrow><mml:mn mathvariant="normal">2</mml:mn></mml:mrow></mml:msup><mml:mi>u</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msup><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mn mathvariant="normal">2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfrac><mml:mo>+</mml:mo><mml:mi>f</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>u</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mn mathvariant="normal">0</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>&#x003d5;</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mo>&#x02003;</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>&#x02208;</mml:mo><mml:mi>&#x003a9;</mml:mi><mml:mo>,</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mrow><mml:mi>u</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:mi>&#x003a9;</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn mathvariant="normal">0</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x02003;</mml:mo><mml:mi>t</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mn mathvariant="normal">0</mml:mn><mml:mo>,</mml:mo><mml:mi>T</mml:mi></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula>
where <italic>&#x003a9;</italic> = {(<italic>x</italic>, <italic>y</italic>) | 0 &#x02264; <italic>x</italic> &#x02264; <italic>L</italic>
<sub><italic>x</italic></sub>, 0 &#x02264; <italic>y</italic> &#x02264; <italic>L</italic>
<sub><italic>y</italic></sub>, <italic>a</italic>(<italic>x</italic>, <italic>y</italic>, <italic>t</italic>) &#x0003e; 0, <italic>b</italic>(<italic>x</italic>, <italic>y</italic>, <italic>t</italic>) &#x0003e; 0}. The fractional derivative is in the Caputo form.</p></sec><sec id="sec2"><title>2. Background: Numerical Solution</title><p>The fractional derivative of <italic>f</italic>(<italic>t</italic>) in the Caputo sense is defined as [<xref rid="B15" ref-type="bibr">15</xref>]
<disp-formula id="EEq2"><label>(2)</label><mml:math id="M2"><mml:mtable><mml:mtr><mml:mtd><mml:mfrac><mml:mrow><mml:msup><mml:mrow><mml:mo>&#x02202;</mml:mo></mml:mrow><mml:mrow><mml:mi>&#x003b1;</mml:mi></mml:mrow></mml:msup><mml:mi>f</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msup><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>&#x003b1;</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn mathvariant="normal">1</mml:mn></mml:mrow><mml:mrow><mml:mi mathvariant="normal">&#x00393;</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn mathvariant="normal">1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac><mml:mrow><mml:munderover><mml:mstyle displaystyle="true"><mml:mo stretchy="false">&#x0222b;</mml:mo></mml:mstyle><mml:mrow><mml:mn mathvariant="normal">0</mml:mn></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:munderover></mml:mrow><mml:mfrac><mml:mrow><mml:msup><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>&#x02032;</mml:mi></mml:mrow></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>&#x003be;</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003be;</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mi>&#x003b1;</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfrac><mml:mi>d</mml:mi><mml:mi>&#x003be;</mml:mi><mml:mo>&#x02003;</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn mathvariant="normal">0</mml:mn><mml:mo>&#x0003c;</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mo>&#x0003c;</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula>
</p><p>If <italic>f</italic>&#x02032;(<italic>t</italic>) is continuous bounded derivatives in [0, <italic>T</italic>] for every <italic>T</italic> &#x0003e; 0, we can get
<disp-formula id="EEq3"><label>(3)</label><mml:math id="M3"><mml:mtable><mml:mtr><mml:mtd><mml:maligngroup/><mml:mfrac><mml:mrow><mml:msup><mml:mrow><mml:mo>&#x02202;</mml:mo></mml:mrow><mml:mrow><mml:mi>&#x003b1;</mml:mi></mml:mrow></mml:msup><mml:mi>f</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msup><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>&#x003b1;</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfrac><mml:malignmark/><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:munder><mml:mrow><mml:mi>lim</mml:mi><mml:mo>&#x02061;</mml:mo></mml:mrow><mml:mrow><mml:mi>&#x003be;</mml:mi><mml:mo>&#x02192;</mml:mo><mml:mn mathvariant="normal">0</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x02009;</mml:mo><mml:mi>n</mml:mi><mml:mi>&#x003be;</mml:mi><mml:mo>=</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:munder></mml:mrow><mml:mo>&#x02061;</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mi>&#x003be;</mml:mi></mml:mrow><mml:mrow><mml:mi>&#x003b1;</mml:mi></mml:mrow></mml:msup><mml:mrow><mml:munderover><mml:mstyle displaystyle="true"><mml:mo stretchy="false">&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn mathvariant="normal">0</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:munderover><mml:mrow/></mml:mrow></mml:mrow></mml:mrow><mml:mi>&#x0200d;</mml:mi><mml:msup><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mi>&#x003b1;</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>i</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:maligngroup/><mml:malignmark/><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>f</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn mathvariant="normal">0</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:msup><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:mi mathvariant="normal">&#x00393;</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn mathvariant="normal">1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:mn mathvariant="normal">1</mml:mn></mml:mrow><mml:mrow><mml:mi mathvariant="normal">&#x00393;</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn mathvariant="normal">1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac><mml:mrow><mml:munderover><mml:mstyle displaystyle="true"><mml:mo stretchy="false">&#x0222b;</mml:mo></mml:mstyle><mml:mrow><mml:mn mathvariant="normal">0</mml:mn></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:munderover><mml:mrow/></mml:mrow><mml:mi>&#x0200d;</mml:mi><mml:mi>&#x02009;&#x02009;</mml:mi><mml:mfrac><mml:mrow><mml:msup><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>&#x02032;</mml:mi></mml:mrow></mml:msup><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>&#x003be;</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>t</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003be;</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mi>&#x003b1;</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfrac><mml:mi>d</mml:mi><mml:mi>&#x003be;</mml:mi><mml:mo>.</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula>
</p><p>Define <italic>&#x003c4;</italic> = <italic>T</italic>/<italic>N</italic>,<italic>h</italic>
<sub><italic>x</italic></sub> = <italic>L</italic>
<sub><italic>x</italic></sub>/<italic>M</italic>
<sub><italic>x</italic></sub>,<italic>h</italic>
<sub><italic>y</italic></sub> = <italic>L</italic>
<sub><italic>y</italic></sub>/<italic>M</italic>
<sub><italic>y</italic></sub>, <italic>t</italic>
<sub><italic>n</italic></sub> = <italic>n&#x003c4;</italic>, <italic>x</italic>
<sub><italic>i</italic></sub> = <italic>ih</italic>
<sub><italic>x</italic></sub>, and <italic>y</italic>
<sub><italic>j</italic></sub> = <italic>jh</italic>
<sub><italic>y</italic></sub>, for 0 &#x02264; <italic>n</italic> &#x02264; <italic>N</italic>, 0 &#x02264; <italic>i</italic> &#x02264; <italic>M</italic>
<sub><italic>x</italic></sub>, and 0 &#x02264; <italic>j</italic> &#x02264; <italic>M</italic>
<sub><italic>y</italic></sub>. Let <italic>u</italic>
<sub><italic>i</italic>,<italic>j</italic></sub>
<sup><italic>n</italic></sup>, <italic>&#x003c6;</italic>
<sub><italic>i</italic></sub>
<sup><italic>n</italic></sup>, <italic>f</italic>
<sub><italic>i</italic>,<italic>j</italic></sub>
<sup><italic>n</italic></sup>, <italic>&#x003d5;</italic>
<sub><italic>i</italic>,<italic>j</italic></sub>, <italic>a</italic>
<sub><italic>i</italic>,<italic>j</italic></sub>
<sup><italic>n</italic></sup>, and <italic>b</italic>
<sub><italic>i</italic>,<italic>j</italic></sub>
<sup><italic>n</italic></sup> be the numerical approximation to <italic>u</italic>(<italic>x</italic>
<sub><italic>i</italic></sub>, <italic>y</italic>
<sub><italic>j</italic></sub>, <italic>t</italic>
<sub><italic>n</italic></sub>), <italic>f</italic>(<italic>x</italic>
<sub><italic>i</italic></sub>, <italic>y</italic>
<sub><italic>j</italic></sub>, <italic>t</italic>
<sub><italic>n</italic></sub>), <italic>&#x003d5;</italic>(<italic>x</italic>
<sub><italic>i</italic></sub>, <italic>y</italic>
<sub><italic>j</italic></sub>), <italic>a</italic>(<italic>x</italic>
<sub><italic>i</italic></sub>, <italic>y</italic>
<sub><italic>j</italic></sub>, <italic>t</italic>
<sub><italic>n</italic></sub>), and <italic>b</italic>(<italic>x</italic>
<sub><italic>i</italic></sub>, <italic>y</italic>
<sub><italic>j</italic></sub>, <italic>t</italic>
<sub><italic>n</italic></sub>). We can get the implicit approximating scheme [<xref rid="B4" ref-type="bibr">4</xref>] for (<xref ref-type="disp-formula" rid="EEq1">1</xref>):
<disp-formula id="EEq4"><label>(4)</label><mml:math id="M4"><mml:mtable><mml:mtr><mml:mtd><mml:malignmark/><mml:msubsup><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow></mml:msubsup><mml:mo>&#x02212;</mml:mo><mml:msubsup><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:mrow><mml:munderover><mml:mstyle displaystyle="true"><mml:mo stretchy="false">&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:munderover></mml:mrow><mml:msub><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msubsup><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02212;</mml:mo><mml:msubsup><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:msubsup><mml:mo>)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:maligngroup/><mml:malignmark/><mml:mo>&#x02003;</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>&#x003bc;</mml:mi></mml:mrow><mml:mrow><mml:mn mathvariant="normal">1</mml:mn></mml:mrow></mml:msub><mml:mi mathvariant="normal">&#x00393;</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mn mathvariant="normal">2</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:msubsup><mml:mrow><mml:mi>a</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:msubsup><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">1</mml:mn><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow></mml:msubsup><mml:mo>&#x02212;</mml:mo><mml:mn mathvariant="normal">2</mml:mn><mml:msubsup><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn mathvariant="normal">1</mml:mn><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow></mml:msubsup><mml:mo>)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:maligngroup/><mml:malignmark/><mml:mo>&#x02003;</mml:mo><mml:mo>&#x02003;</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>&#x003bc;</mml:mi></mml:mrow><mml:mrow><mml:mn mathvariant="normal">2</mml:mn></mml:mrow></mml:msub><mml:mi mathvariant="normal">&#x00393;</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mn mathvariant="normal">2</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:msubsup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow></mml:msubsup><mml:mrow><mml:mo>(</mml:mo><mml:msubsup><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow></mml:msubsup><mml:mo>&#x02212;</mml:mo><mml:mn mathvariant="normal">2</mml:mn><mml:msubsup><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow></mml:msubsup><mml:mo>)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:maligngroup/><mml:malignmark/><mml:mo>&#x02003;</mml:mo><mml:mo>&#x02003;</mml:mo><mml:mo>+</mml:mo><mml:msup><mml:mrow><mml:mi>&#x003c4;</mml:mi></mml:mrow><mml:mrow><mml:mi>&#x003b1;</mml:mi></mml:mrow></mml:msup><mml:mi mathvariant="normal">&#x00393;</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn mathvariant="normal">2</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:msubsup><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow></mml:msubsup><mml:mo>,</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula>
where <italic>b</italic>
<sub><italic>s</italic></sub> = (<italic>s</italic> + 1)<sup>1&#x02212;<italic>&#x003b1;</italic></sup> &#x02212; <italic>s</italic>
<sup>1&#x02212;<italic>&#x003b1;</italic></sup>&#x02009;&#x02009;(<italic>s</italic> = 0,1, 2,&#x02026;, <italic>N</italic>), <italic>&#x003bc;</italic>
<sub>1</sub> = <italic>&#x003c4;</italic>
<sup><italic>&#x003b1;</italic></sup>/<italic>h</italic>
<sub><italic>x</italic></sub>
<sup>2</sup>, and <italic>&#x003bc;</italic>
<sub>2</sub> = <italic>&#x003c4;</italic>
<sup><italic>&#x003b1;</italic></sup>/<italic>h</italic>
<sub><italic>y</italic></sub>
<sup>2</sup>. The <italic>h</italic>
<sub><italic>x</italic></sub> and <italic>h</italic>
<sub><italic>y</italic></sub> are the step size along<italic> X</italic> and<italic> Y</italic> directions defined above.</p></sec><sec id="sec3"><title>3. Parallel Algorithm</title><sec id="sec3.1"><title>3.1. Analysis</title><p>Let <italic>c</italic>
<sub>1</sub> = <italic>c</italic>
<sub>1</sub>(<italic>i</italic>, <italic>j</italic>, <italic>k</italic>) = <italic>&#x003bc;</italic>
<sub>1</sub>&#x00393;(2 &#x02212; <italic>&#x003b1;</italic>)<italic>a</italic>
<sub><italic>i</italic>,<italic>j</italic></sub>
<sup><italic>n</italic>+1</sup>, and let <italic>c</italic>
<sub>2</sub> = <italic>c</italic>
<sub>2</sub>(<italic>i</italic>, <italic>j</italic>, <italic>k</italic>) = <italic>&#x003bc;</italic>
<sub>2</sub>&#x00393;(2 &#x02212; <italic>&#x003b1;</italic>)<italic>b</italic>
<sub><italic>i</italic>,<italic>j</italic></sub>
<sup><italic>n</italic>+1</sup>; (<xref ref-type="disp-formula" rid="EEq4">4</xref>) can be rewritten as
<disp-formula id="EEq5"><label>(5)</label><mml:math id="M5"><mml:mtable><mml:mtr><mml:mtd><mml:malignmark/><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mn mathvariant="normal">1</mml:mn></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msubsup><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">1</mml:mn><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn mathvariant="normal">1</mml:mn><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow></mml:msubsup><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mn mathvariant="normal">1</mml:mn><mml:mo>+</mml:mo><mml:mn mathvariant="normal">2</mml:mn><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mn mathvariant="normal">1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn mathvariant="normal">2</mml:mn><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mn mathvariant="normal">2</mml:mn></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:msubsup><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow></mml:msubsup></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:maligngroup/><mml:malignmark/><mml:mo>&#x02003;</mml:mo><mml:mo>&#x02003;</mml:mo><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mn mathvariant="normal">2</mml:mn></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msubsup><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow></mml:msubsup><mml:mo>)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:maligngroup/><mml:malignmark/><mml:mo>&#x02003;</mml:mo><mml:mo>=</mml:mo><mml:msubsup><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msubsup><mml:mo>&#x02212;</mml:mo><mml:mrow><mml:munderover><mml:mstyle displaystyle="true"><mml:mo stretchy="false">&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:munderover></mml:mrow><mml:msub><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:msubsup><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:mrow><mml:munderover><mml:mstyle displaystyle="true"><mml:mo stretchy="false">&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:munderover></mml:mrow><mml:msub><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:msubsup><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:msup><mml:mrow><mml:mi>&#x003c4;</mml:mi></mml:mrow><mml:mrow><mml:mi>&#x003b1;</mml:mi></mml:mrow></mml:msup><mml:mi mathvariant="normal">&#x00393;</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn mathvariant="normal">2</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:msubsup><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow></mml:msubsup><mml:mo>.</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula>
</p><p>The explicit schemes are conditionally stable and need very small <italic>&#x003c4;</italic> for high dimensional problems for both classical and fractional equations. The implicit schemes are unconditionally stable but need to get the inverse of the coefficient matrix. Sometimes the sparse coefficient matrix is too large, making a direct method too difficult to use. So, the iterative method can be used to avoid matrix inverse:
<disp-formula id="EEq6"><label>(6)</label><mml:math id="M6"><mml:mtable><mml:mtr><mml:mtd><mml:malignmark/><mml:msubsup><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">1</mml:mn><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow></mml:msubsup></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:maligngroup/><mml:malignmark/><mml:mo>&#x02003;</mml:mo><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn mathvariant="normal">1</mml:mn></mml:mrow><mml:mrow><mml:mn mathvariant="normal">1</mml:mn><mml:mo>+</mml:mo><mml:mn mathvariant="normal">2</mml:mn><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mn mathvariant="normal">1</mml:mn></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn mathvariant="normal">2</mml:mn><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mn mathvariant="normal">2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:maligngroup/><mml:malignmark/><mml:mo>&#x02003;</mml:mo><mml:mo>&#x02003;</mml:mo><mml:mo>&#x000d7;</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mn mathvariant="normal">1</mml:mn></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msubsup><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">1</mml:mn><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">1</mml:mn><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn mathvariant="normal">1</mml:mn><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">1</mml:mn><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msubsup><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>c</mml:mi></mml:mrow><mml:mrow><mml:mn mathvariant="normal">2</mml:mn></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:msubsup><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">1</mml:mn><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:msubsup><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">1</mml:mn><mml:mo>,</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msubsup><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msubsup><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:maligngroup/><mml:malignmark/><mml:mo>&#x02003;</mml:mo><mml:mo>&#x02003;</mml:mo><mml:mo>&#x02003;</mml:mo><mml:mo>&#x02003;</mml:mo><mml:mo>&#x02212;</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:munderover><mml:mstyle displaystyle="true"><mml:mo stretchy="false">&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:munderover></mml:mrow><mml:msub><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:msubsup><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">1</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:mrow><mml:munderover><mml:mstyle displaystyle="true"><mml:mo stretchy="false">&#x02211;</mml:mo></mml:mstyle><mml:mrow><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:munderover></mml:mrow><mml:msub><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub><mml:msubsup><mml:mrow><mml:mi>u</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>&#x02212;</mml:mo><mml:mi>s</mml:mi></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:msup><mml:mrow><mml:mi>&#x003c4;</mml:mi></mml:mrow><mml:mrow><mml:mi>&#x003b1;</mml:mi></mml:mrow></mml:msup><mml:mi mathvariant="normal">&#x00393;</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn mathvariant="normal">2</mml:mn><mml:mo>&#x02212;</mml:mo><mml:mi>&#x003b1;</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:msubsup><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">1</mml:mn></mml:mrow></mml:msubsup></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula>
until &#x00394;<italic>u</italic> = |<italic>u</italic>
<sub><italic>i</italic>,<italic>j</italic></sub>
<sup><italic>n</italic>+1,<italic>k</italic>+1</sup> &#x02212; <italic>u</italic>
<sub><italic>i</italic>,<italic>j</italic></sub>
<sup><italic>n</italic>+1,<italic>k</italic></sup>| is smaller than a predefined threshold <italic>&#x003f5;</italic>. <italic>u</italic>
<sub>0&#x02192;<italic>M</italic><sub><italic>x</italic></sub>,0&#x02192;<italic>M</italic><sub><italic>y</italic></sub></sub>
<sup><italic>n</italic>+1,<italic>k</italic>+1</sup> are the iterative variables. <italic>u</italic>
<sub>0&#x02192;<italic>M</italic><sub><italic>x</italic></sub>,0&#x02192;<italic>M</italic><sub><italic>y</italic></sub></sub>
<sup><italic>n</italic></sup> are the known variables for the unknown <italic>n</italic> + 1 time step.</p><p>It is very time consuming to solve the 2D-TFDE by iterative method of (<xref ref-type="disp-formula" rid="EEq6">6</xref>). For determining <italic>N</italic>, <italic>M</italic>
<sub><italic>x</italic></sub>, <italic>M</italic>
<sub><italic>y</italic></sub> and assuming if there are <italic>K</italic> iterations for each time step on average, there are about <italic>M</italic>
<sub><italic>x</italic></sub>
<italic>M</italic>
<sub><italic>y</italic></sub>(<italic>N</italic>
<sup>2</sup>/2 + 1.5<italic>N</italic> + 6<italic>KN</italic>) arithmetical logical operations ignoring the computation of the coefficients. So, the computational complexity is <italic>O</italic>(<italic>M</italic>
<sub><italic>x</italic></sub>
<italic>M</italic>
<sub><italic>y</italic></sub>
<italic>N</italic>
<sup>2</sup>), which is much more heavy than the classical integer order 2D partial differential equations <italic>O</italic>(<italic>M</italic>
<sub><italic>x</italic></sub>
<italic>M</italic>
<sub><italic>y</italic></sub>
<italic>N</italic>).</p><p>Besides the heavy computational cost, the memory space requirement is the other problem. Because each unknown time step needs to use all the values of the previous time steps, all the values of <italic>u</italic>
<sub>0&#x02192;<italic>M</italic><sub><italic>x</italic></sub>,0&#x02192;<italic>M</italic><sub><italic>y</italic></sub></sub>
<sup>0&#x02192;<italic>N</italic></sup> need to be stored into the memory space. When <italic>N</italic> is big enough, the memory complexity is <italic>O</italic>(<italic>M</italic>
<sub><italic>x</italic></sub>
<italic>M</italic>
<sub><italic>y</italic></sub>
<italic>N</italic>), which is far bigger than the classical integer order 2D partial differential equations <italic>O</italic>(<italic>M</italic>
<sub><italic>x</italic></sub>
<italic>M</italic>
<sub><italic>y</italic></sub>).</p><p>The computation of (<xref ref-type="disp-formula" rid="EEq6">6</xref>) can be divided into two parts.<list list-type="roman-lower"><list-item><p>Part1<sub><italic>i</italic>,<italic>j</italic></sub> = <italic>u</italic>
<sub><italic>i</italic>,<italic>j</italic></sub>
<sup><italic>n</italic></sup> &#x02212; &#x02211;<sub><italic>s</italic>=1</sub>
<sup><italic>n</italic></sup>
<italic>b</italic>
<sub><italic>s</italic></sub>
<italic>u</italic>
<sub><italic>i</italic>,<italic>j</italic></sub>
<sup><italic>n</italic>+1&#x02212;<italic>s</italic></sup> + &#x02211;<sub><italic>s</italic>=1</sub>
<sup><italic>n</italic></sup>
<italic>b</italic>
<sub><italic>s</italic></sub>
<italic>u</italic>
<sub><italic>i</italic>,<italic>j</italic></sub>
<sup><italic>n</italic>&#x02212;<italic>s</italic></sup> + <italic>&#x003c4;</italic>
<sup><italic>&#x003b1;</italic></sup>&#x00393;(2 &#x02212; <italic>&#x003b1;</italic>)<italic>f</italic>
<sub><italic>i</italic>,<italic>j</italic></sub>
<sup><italic>n</italic>+1</sup>. The unknown value <italic>u</italic>
<sub><italic>i</italic>,<italic>j</italic></sub>
<sup><italic>n</italic>+1,<italic>k</italic>+1</sup> of grid point <italic>P</italic>
<sub><italic>i</italic>,<italic>j</italic></sub> at the time step <italic>n</italic> + 1 relies on the value of grid point <italic>P</italic>
<sub><italic>i</italic>,<italic>j</italic></sub> at all previous time steps of Part1<sub><italic>i</italic>,<italic>j</italic></sub>.</p></list-item><list-item><p>Part2<sub><italic>i</italic>,<italic>j</italic></sub> = <italic>c</italic>
<sub>1</sub>(<italic>u</italic>
<sub><italic>i</italic>+1,<italic>j</italic></sub>
<sup><italic>n</italic>+1,<italic>k</italic></sup> + <italic>u</italic>
<sub><italic>i</italic>&#x02212;1,<italic>j</italic></sub>
<sup><italic>n</italic>+1,<italic>k</italic></sup>) + <italic>c</italic>
<sub>2</sub>(<italic>u</italic>
<sub><italic>i</italic>,<italic>j</italic>+1</sub>
<sup><italic>n</italic>+1,<italic>k</italic></sup> + <italic>u</italic>
<sub><italic>i</italic>,<italic>j</italic>&#x02212;1</sub>
<sup><italic>n</italic>+1,<italic>k</italic></sup>). The unknown value <italic>u</italic>
<sub><italic>i</italic>,<italic>j</italic></sub>
<sup><italic>n</italic>+1,<italic>k</italic>+1</sup> of grid point <italic>P</italic>
<sub><italic>i</italic>,<italic>j</italic></sub> relies on the value of <italic>P</italic>
<sub><italic>i</italic>+1,<italic>j</italic></sub>, <italic>P</italic>
<sub><italic>i</italic>&#x02212;1,<italic>j</italic></sub>, <italic>P</italic>
<sub><italic>i</italic>,<italic>j</italic>+1</sub>, <italic>P</italic>
<sub><italic>i</italic>,<italic>j</italic>&#x02212;1</sub>.</p></list-item></list> The data dependence of 2D-TFDE is shown in <xref ref-type="fig" rid="fig1">Figure 1</xref>. <italic>u</italic>
<sub><italic>i</italic>,<italic>j</italic></sub>
<sup><italic>n</italic>+1</sup> relies on the neighboring grid points at the same time step and the same position of all the previous time steps.</p></sec><sec id="sec3.2"><title>3.2. Task Distribution Model and Data Layout</title><p>The task distribution of the total computation should be designed on distributed memory systems, with the goal of making the total computations as efficient as possible. There are three main issues in choosing a task distribution model for these computations:<list list-type="roman-lower"><list-item><p>load balance: ensure splitting of the computations reasonably evenly among all computing processors/processes throughout the time stepping;</p></list-item><list-item><p>less communication: the task distribution model should keep the communication among different computing processes as less as possible;</p></list-item><list-item><p>convenient programming: the parallel algorithm based on the task distribution model should not change the serial algorithm too much.</p></list-item></list> The goal of keeping attention on these issues is achieving high execution efficiency and high scalability of the parallel algorithm on distributed memory systems for 2D-TFDE.</p><p>Refer to (<xref ref-type="disp-formula" rid="EEq6">6</xref>). Part2<sub><italic>i</italic>,<italic>j</italic></sub> computation has no data dependence. Part1<sub><italic>i</italic>,<italic>j</italic></sub> computation has data dependence among neighboring grid points. There are mainly two kinds of task distribution models. The first one is one-dimensional distribution (ODD): splitting the domain of all grid points along the<italic> X</italic> or<italic> Y</italic> direction on average. The task distribution model of the parallel algorithm [<xref rid="B16" ref-type="bibr">16</xref>] for the one-dimensional Riesz space fractional equation is ODD. The parallel algorithm based on ODD will not change the serial algorithm much and the load balance is guaranteed. If task is divided along<italic> X</italic> direction and <italic>M</italic>
<sub><italic>y</italic></sub> is very big, the communication will influence the scalability of the parallel algorithm. The second one is two-dimensional distribution (TDD): splitting the domain of all grid points along the<italic> X</italic> and<italic> Y</italic> direction on average. So, the computing processes have a two-dimensional grid layout, with process id (<italic>p</italic>
<sub><italic>i</italic></sub>, <italic>p</italic>
<sub><italic>j</italic></sub>) and 0 &#x02264; <italic>p</italic>
<sub><italic>i</italic></sub> &#x02264; <italic>P</italic>
<sub><italic>x</italic></sub>, 0 &#x02264; <italic>p</italic>
<sub><italic>j</italic></sub> &#x02264; <italic>P</italic>
<sub><italic>y</italic></sub>. <italic>P</italic>
<sub><italic>x</italic></sub>, <italic>P</italic>
<sub><italic>y</italic></sub> are the dimension size of the processes grid. The task distribution with TDD is shown in <xref ref-type="fig" rid="fig2">Figure 2</xref>.</p><p>With the TDD, the data layout is described in <xref ref-type="fig" rid="fig3">Figure 3</xref>. Each subdomain with a process may have less than four virtual boundaries to receive the boundary data from its nearest neighbors. The virtual boundary is shown with dotted lines. The process (<italic>p</italic>
<sub><italic>x</italic></sub>, <italic>P</italic>
<sub><italic>y</italic></sub> &#x02212; 1)(0 &#x02264; <italic>p</italic>
<sub><italic>x</italic></sub> &#x02264; <italic>P</italic>
<sub><italic>x</italic></sub>) has four virtual boundaries. The process (<italic>p</italic>
<sub><italic>x</italic></sub>, <italic>P</italic>
<sub><italic>y</italic></sub>) only has three virtual boundaries since there is no process that stays on its right hand. A virtual boundary may have several layer grid points, which depends on the discrete scheme on space. In this paper, there is only one layer grid point for a virtual boundary with (<xref ref-type="disp-formula" rid="EEq4">4</xref>). In every iteration of (<xref ref-type="disp-formula" rid="EEq6">6</xref>), the processes exchange the data near the virtual boundaries shown in <xref ref-type="fig" rid="fig3">Figure 3</xref>. After the exchange, every process performs its own computation according to (<xref ref-type="disp-formula" rid="EEq6">6</xref>).</p></sec><sec id="sec3.3"><title>3.3. Implementation</title><p>The parallel algorithm for 2D-TFDE uses the mechanisms of process level parallelism. The process level parallelism is a kind of task level parallelism. The parallel algorithm for (<xref ref-type="disp-formula" rid="EEq1">1</xref>) is described in <xref ref-type="fig" rid="alg1">Algorithm 1</xref>.</p><p>Each process only allocates its local memory. Assuming <italic>M</italic>
<sub><italic>x</italic></sub>, <italic>M</italic>
<sub><italic>y</italic></sub> are divisible by <italic>P</italic>
<sub><italic>x</italic></sub>, <italic>P</italic>
<sub><italic>y</italic></sub>, the process with four virtual boundaries will allocate (<italic>M</italic>
<sub><italic>x</italic></sub>/<italic>P</italic>
<sub><italic>x</italic></sub> + 2)(<italic>M</italic>
<sub><italic>y</italic></sub>/<italic>P</italic>
<sub><italic>y</italic></sub> + 2)<italic>N</italic> memory space for array <italic>u</italic>. The calculation of process id has three steps:<list list-type="simple"><list-item><label>step 1:</label><p>get the MPI global id ID;</p></list-item><list-item><label>step 2:</label><p>
<italic>p</italic>
<sub><italic>y</italic></sub> = &#x0230a;ID/<italic>P</italic>
<sub><italic>x</italic></sub>&#x0230b;;</p></list-item><list-item><label>step 3:</label><p>
<italic>p</italic>
<sub><italic>x</italic></sub> = ID &#x02212; <italic>P</italic>
<sub><italic>x</italic></sub>
<italic>p</italic>
<sub><italic>y</italic></sub>.</p></list-item></list>
</p><p>The computations of <italic>c</italic>
<sub>1</sub>(<italic>i</italic>, <italic>j</italic>), <italic>c</italic>
<sub>2</sub>(<italic>i</italic>, <italic>j</italic>), <italic>f</italic>
<sub><italic>i</italic>,<italic>j</italic></sub>, and so forth depend on the particular functions of coefficient and source terms. Performing these computations, every time step is a good choice. If these computations are performed out of the main loop (lines 9&#x02013;32), a lot of memory space is required. If these computations are performed in the &#x0201c;While" loop (lines 16&#x02013;32), it is too time consuming. The <italic>u</italic>
<sup>0</sup> stands for the zero time step <italic>u</italic>
<sub><italic>i</italic>,<italic>j</italic></sub>
<sup>0</sup> and <italic>v</italic> stands for <italic>v</italic>
<sub><italic>i</italic>,<italic>j</italic></sub>. <italic>I</italic>
<sub><italic>i</italic>,<italic>j</italic></sub> means the iteration 1 &#x02264; <italic>i</italic> &#x02264; <italic>M</italic>
<sub><italic>x</italic></sub>/<italic>P</italic>
<sub><italic>x</italic></sub>, 1 &#x02264; <italic>j</italic> &#x02264; <italic>M</italic>
<sub><italic>y</italic></sub>/<italic>P</italic>
<sub><italic>y</italic></sub>. If a process has neighbors, it should exchange the boundary data with its neighbors. The received boundary data are stored into the designed virtual boundaries. The lines 3&#x02013;7 of <xref ref-type="fig" rid="alg1">Algorithm 1</xref> are the preprocessing for the parallel algorithm. The lines 9&#x02013;32 are the main time marching loops. <italic>T</italic>
<sub>1</sub>, <italic>T</italic>
<sub>2</sub> are used to record the execution time.</p></sec></sec><sec id="sec4"><title>4. Experimental Results and Discussion</title><p>The experiment platform is a cluster with distributed memory system (DSM) architecture. One computing node consists of two Intel Xeon E5540 CPUs. The specifications of the cluster are listed in <xref ref-type="table" rid="tab1">Table 1</xref>. The code runs on double precision floating point operations and is compiled by the mpif90 compiler with level three optimization (-O3). For convenience to compare the runtime, the inner loop (lines 16&#x02013;32) of <xref ref-type="fig" rid="alg1">Algorithm 1</xref> is fixed as 3.</p><sec id="sec4.1"><title>4.1. Numerical Example and Convergence of the Parallel Algorithm</title><p>The following time fractional (<italic>&#x003b1;</italic> = 0.4) differential equation [<xref rid="B4" ref-type="bibr">4</xref>] was considered:
<disp-formula id="EEq7"><label>(7)</label><mml:math id="M7"><mml:mtable><mml:mtr><mml:mtd><mml:maligngroup/><mml:mfrac><mml:mrow><mml:msup><mml:mrow><mml:mo>&#x02202;</mml:mo></mml:mrow><mml:mrow><mml:mn mathvariant="normal">0.4</mml:mn></mml:mrow></mml:msup><mml:mi>u</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msup><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mn mathvariant="normal">0.4</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfrac><mml:malignmark/><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn mathvariant="normal">2</mml:mn><mml:msup><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mn mathvariant="normal">1.6</mml:mn></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:mi>&#x003c0;</mml:mi><mml:mi mathvariant="normal">&#x00393;</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn mathvariant="normal">0.6</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac><mml:mfrac><mml:mrow><mml:msup><mml:mrow><mml:mo>&#x02202;</mml:mo></mml:mrow><mml:mrow><mml:mn mathvariant="normal">2</mml:mn></mml:mrow></mml:msup><mml:mi>u</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mn mathvariant="normal">2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfrac></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:maligngroup/><mml:malignmark/><mml:mo>&#x02003;</mml:mo><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:msup><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mn mathvariant="normal">1.6</mml:mn></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:mn mathvariant="normal">12</mml:mn><mml:mi>&#x003c0;</mml:mi><mml:mi mathvariant="normal">&#x00393;</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn mathvariant="normal">0.6</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mfrac><mml:mfrac><mml:mrow><mml:msup><mml:mrow><mml:mo>&#x02202;</mml:mo></mml:mrow><mml:mrow><mml:mn mathvariant="normal">2</mml:mn></mml:mrow></mml:msup><mml:mi>u</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:msup><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mn mathvariant="normal">2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfrac><mml:mo>+</mml:mo><mml:mi>f</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>u</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mn mathvariant="normal">0</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>sin</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>&#x003c0;</mml:mi><mml:mi>x</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mi>sin</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>&#x003c0;</mml:mi><mml:mi>y</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mo>&#x02003;</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>&#x02208;</mml:mo><mml:mi>&#x003a9;</mml:mi><mml:mo>,</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mrow><mml:mi>u</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mo>&#x02202;</mml:mo><mml:mi>&#x003a9;</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn mathvariant="normal">0</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x02003;</mml:mo><mml:mi>t</mml:mi><mml:mo>&#x02208;</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mn mathvariant="normal">0</mml:mn><mml:mo>,</mml:mo><mml:mi>T</mml:mi></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula>
where <italic>f</italic>(<italic>x</italic>, <italic>y</italic>, <italic>t</italic>) = (25<italic>t</italic>
<sup>1.6</sup>/12&#x00393;(0.6))(<italic>t</italic>
<sup>2</sup> + 2)sin(<italic>&#x003c0;x</italic>)sin(<italic>&#x003c0;y</italic>), <italic>&#x003a9;</italic> = {(<italic>x</italic>, <italic>y</italic>) | 0 &#x0003c; <italic>x</italic> &#x0003c; 1,0 &#x0003c; <italic>y</italic> &#x0003c; 1}, and &#x02202;<italic>&#x003a9;</italic> is the boundary of <italic>&#x003a9;</italic>. The exact solution of the above equation is <italic>u</italic>(<italic>x</italic>, <italic>y</italic>, <italic>t</italic>) = (<italic>t</italic>
<sup>2</sup> + 1)sin(<italic>&#x003c0;x</italic>)sin(<italic>&#x003c0;y</italic>).</p><p>The computational results for different <italic>&#x003b1;</italic> at <italic>t</italic> = 1.0 and <italic>y</italic> = 0.5 are shown in <xref ref-type="fig" rid="fig4">Figure 4</xref>. <xref ref-type="fig" rid="fig4">Figure 4</xref> shows that the order of the fractional time derivative <italic>&#x003b1;</italic> governs the value of unknown <italic>u</italic>. With the increase of <italic>&#x003b1;</italic> to 1, (<xref ref-type="disp-formula" rid="EEq1">1</xref>) approaches the classical PDE. <xref ref-type="fig" rid="fig5"> Figure 5</xref> shows the numerical solutions with <italic>&#x003b1;</italic> = 0.4, <italic>t</italic> = 1.0.</p><p>The parallel algorithm compares well with the exact analytic solution to the fractional partial differential equation in this test case of (<xref ref-type="disp-formula" rid="EEq7">7</xref>) with <italic>&#x003b1;</italic> = 0.4, shown in <xref ref-type="fig" rid="fig6">Figure 6</xref>. The &#x00394;<italic>t</italic> and <italic>h</italic> are 1.0/100 and 1.0/10. The maximum absolute error is 8.36 &#x000d7; 10<sup>&#x02212;3</sup>.</p></sec><sec id="sec4.2"><title>4.2. Performance Improvement</title><p>For fixed <italic>N</italic> = 10, the performance comparison between single process and four processes (single CPU) is shown in <xref ref-type="fig" rid="fig7">Figure 7</xref>. The<italic> X</italic> step number in (<xref ref-type="disp-formula" rid="EEq6">6</xref>) is <italic>M</italic>, which is the<italic> x</italic>-coordinate of <xref ref-type="fig" rid="fig7">Figure 7</xref>. <italic>M</italic> = <italic>M</italic>
<sub><italic>x</italic></sub> = <italic>M</italic>
<sub><italic>y</italic></sub> ranges from 2048 to 10240. With <italic>M</italic> = 2028, the runtime of one process is 23.45 seconds and the runtime of four processes is 6.64 seconds. The speedup is 3.53. With <italic>M</italic> = 10240, the runtime of one process is 803.88 seconds and the runtime of four processes is 192.76 seconds. The speedup is 4.17. From <xref ref-type="fig" rid="fig7">Figure 7</xref>, the parallel algorithm with fixed <italic>N</italic> = 10 is more than 4 times faster than the serial algorithm.</p><p>For fixed <italic>M</italic> = 2560 = <italic>M</italic>
<sub><italic>x</italic></sub> = <italic>M</italic>
<sub><italic>y</italic></sub>, the performance comparison between single process and four processes is shown in <xref ref-type="fig" rid="fig8">Figure 8</xref>. For single process, the<italic> X</italic>,<italic> Y</italic> step number is 2560. For four processes, the<italic> X</italic>,<italic> Y</italic> step number is 1280 with <italic>P</italic>
<sub><italic>x</italic></sub> = 2, <italic>P</italic>
<sub><italic>y</italic></sub> = 2. <italic>N</italic> ranges from 16 to 512. With <italic>N</italic> = 16, the runtime of one process is 17.63 seconds and the runtime of four processes is 4.65 seconds. The speedup is 3.79. With <italic>N</italic> = 512, the runtime of one process is 4415.78 seconds and the runtime of four processes is 1394.99 seconds. The speedup is 3.16. The performance of four processes is about 3.2 times higher than the performance of single process with <italic>M</italic> = 2560.</p></sec><sec id="sec4.3"><title>4.3. Scalability</title><p>The scalability of the parallel algorithm on the large scale cluster system is shown in <xref ref-type="fig" rid="fig9">Figure 9</xref>. The technical specifications of the cluster system are listed in <xref ref-type="table" rid="tab1">Table 1</xref>. <italic>N</italic> is fixed with 10 for all conditions. Each process has the same (<italic>M</italic>
<sub><italic>x</italic></sub>/<italic>P</italic>
<sub><italic>x</italic></sub>, <italic>M</italic>
<sub><italic>y</italic></sub>/<italic>P</italic>
<sub><italic>y</italic></sub>) with <italic>M</italic> = <italic>M</italic>
<sub><italic>x</italic></sub> = <italic>M</italic>
<sub><italic>y</italic></sub> and <italic>P</italic>
<sub><italic>x</italic></sub> = <italic>P</italic>
<sub><italic>y</italic></sub>. <italic>M</italic> varies from 16650, 33300, and 49950 for 9, 36, and 81 processes. The runtime of 9 processes is 83.02 seconds and the runtime of 81 processes is 94.08 seconds. The parallel efficiency of 81 processes is 88.24% compared with 9 processes. Here, the parallel efficiency is defined as the ratio of the runtime of different number of processes with the same work load on each process.</p></sec><sec id="sec4.4"><title>4.4. Discussion</title><p>The parallel <xref ref-type="fig" rid="alg1">Algorithm 1</xref> will have good parallel scalability on distributed memory system. From <xref ref-type="fig" rid="fig3">Figure 3</xref>, we can see that each subdomain has only virtual boundary at every direction (top, bottom, left, and right). Assuming that the size of the subdomain is <italic>M</italic>
<sub><italic>a</italic></sub>, <italic>M</italic>
<sub><italic>b</italic></sub>(<italic>M</italic>
<sub><italic>a</italic></sub> &#x0003e; 0, <italic>M</italic>
<sub><italic>b</italic></sub> &#x0003e; 0), the inner iteration of line 16 in <xref ref-type="fig" rid="alg1">Algorithm 1</xref> has about 8<italic>M</italic>
<sub><italic>a</italic></sub>
<italic>M</italic>
<sub><italic>b</italic></sub> arithmetic operations with 1/(1 + 2<italic>c</italic>
<sub>1</sub> + 2<italic>c</italic>
<sub>2</sub>) precomputed. It needs to establish 8 communications for neighbors except the global communication for <italic>&#x003f5;</italic>. The arithmetic operation of each time step besides the inner iteration is constant as <italic>KM</italic>
<sub><italic>a</italic></sub>
<italic>M</italic>
<sub><italic>b</italic></sub>. <italic>K</italic> is bigger than 4<italic>nM</italic>
<sub><italic>a</italic></sub>
<italic>M</italic>
<sub><italic>b</italic></sub>. The communication data is 4<italic>M</italic>
<sub><italic>a</italic></sub> + 4<italic>M</italic>
<sub><italic>b</italic></sub> + 1 grid point. Assuming that finishing one arithmetic operation needs time <italic>t</italic>
<sub><italic>a</italic></sub> and there are <italic>L</italic> inner iterations, the computing time of each time step is (<italic>K</italic> + 8<italic>L</italic>)<italic>M</italic>
<sub><italic>a</italic></sub>
<italic>M</italic>
<sub><italic>b</italic></sub>. Assume that <italic>t</italic>
<sub><italic>b</italic></sub> is the time to establish the communication, <italic>t</italic>
<sub><italic>c</italic></sub> is the transform time for a grid point, and <italic>t</italic>
<sub><italic>d</italic></sub> is the global communication time. So, the total communication time for a time step is <italic>L</italic>(9<italic>t</italic>
<sub><italic>b</italic></sub> + 4<italic>M</italic>
<sub><italic>a</italic></sub>
<italic>t</italic>
<sub><italic>c</italic></sub> + 4<italic>M</italic>
<sub><italic>b</italic></sub>
<italic>t</italic>
<sub><italic>c</italic></sub> + <italic>t</italic>
<sub><italic>d</italic></sub>). The communication/computation ratio <italic>&#x003b2;</italic> is as follows:
<disp-formula id="EEq8"><label>(8)</label><mml:math id="M8"><mml:mtable><mml:mtr><mml:mtd><mml:mi>&#x003b2;</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>L</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mn mathvariant="normal">9</mml:mn><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn mathvariant="normal">4</mml:mn><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>c</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn mathvariant="normal">4</mml:mn><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>c</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>d</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>K</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">8</mml:mn><mml:mi>L</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>b</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo>.</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula>
The computation time is determined with the multiplication of <italic>M</italic>
<sub><italic>a</italic></sub>
<italic>M</italic>
<sub><italic>b</italic></sub> and the communication time is determined with the addition of <italic>M</italic>
<sub><italic>a</italic></sub> and <italic>M</italic>
<sub><italic>b</italic></sub>. The extreme of <italic>&#x003b2;</italic> is as follows:
<disp-formula id="EEq9"><label>(9)</label><mml:math id="M9"><mml:mtable><mml:mtr><mml:mtd><mml:malignmark/><mml:munder><mml:mrow><mml:mi>lim</mml:mi><mml:mo>&#x02061;</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02192;</mml:mo><mml:mi>&#x0221e;</mml:mi></mml:mrow></mml:munder><mml:mfrac><mml:mrow><mml:mi>L</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mn mathvariant="normal">9</mml:mn><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn mathvariant="normal">4</mml:mn><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>c</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn mathvariant="normal">4</mml:mn><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>c</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>d</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>K</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">8</mml:mn><mml:mi>L</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>b</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:maligngroup/><mml:malignmark/><mml:mo>&#x02003;</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mi>lim</mml:mi><mml:mo>&#x02061;</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02192;</mml:mo><mml:mi>&#x0221e;</mml:mi></mml:mrow></mml:munder><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:munder><mml:mrow><mml:mi>lim</mml:mi><mml:mo>&#x02061;</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02192;</mml:mo><mml:mi>&#x0221e;</mml:mi></mml:mrow></mml:munder><mml:mfrac><mml:mrow><mml:mi>L</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn mathvariant="normal">9</mml:mn><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn mathvariant="normal">4</mml:mn><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>c</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn mathvariant="normal">4</mml:mn><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>c</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>d</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>K</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">8</mml:mn><mml:mi>L</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>b</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:maligngroup/><mml:malignmark/><mml:mo>&#x02003;</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mi>lim</mml:mi><mml:mo>&#x02061;</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:mo>&#x02192;</mml:mo><mml:mi>&#x0221e;</mml:mi></mml:mrow></mml:munder><mml:mfrac><mml:mrow><mml:mi>L</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn mathvariant="normal">4</mml:mn><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>c</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>K</mml:mi><mml:mo>+</mml:mo><mml:mn mathvariant="normal">8</mml:mn><mml:mi>L</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mn mathvariant="normal">0</mml:mn><mml:mo>.</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula>
That means we can enhance the parallel efficiency by enlarging the size of subdomain.</p><p>The time <italic>t</italic> and number of grid points will affect the convergence property. The exact solution of (<xref ref-type="disp-formula" rid="EEq7">7</xref>) shows that <italic>u</italic>(0.5,0.5, <italic>t</italic>) = <italic>t</italic>
<sup>2</sup> + 1.<list list-type="order"><list-item><p>The bigger <italic>t</italic> becomes, the more inner iterations are needed. With <italic>M</italic> = <italic>M</italic>
<sub><italic>x</italic></sub> = <italic>M</italic>
<sub><italic>y</italic></sub> = 5, <italic>N</italic> = <italic>M</italic>
<sup>2</sup>, the first inner time step <italic>t</italic>
<sub>1</sub> needs 5 Jacobi iterations and the last inner time step <italic>t</italic>
<sub><italic>N</italic></sub> needs 31 iterations for <italic>T</italic> = 1.0. For <italic>T</italic> = 2.0, <italic>t</italic>
<sub>1</sub> becomes 7 and <italic>t</italic>
<sub><italic>N</italic></sub> becomes 61.</p></list-item><list-item><p>The bigger <italic>M</italic> becomes, the more inner iterations are needed. The <italic>T</italic> is fixed as 1.0. For <italic>M</italic> = 10, <italic>t</italic>
<sub>1</sub> becomes 6 and <italic>t</italic>
<sub><italic>N</italic></sub> becomes 66. For <italic>M</italic> = 10, <italic>t</italic>
<sub>1</sub> becomes 3 and <italic>t</italic>
<sub><italic>N</italic></sub> becomes 136.</p></list-item></list> The reason for the phenomenon above is that &#x00394;<italic>u</italic> (<italic>u</italic>
<sup><italic>n</italic>+1</sup> &#x02212; <italic>u</italic>
<sup><italic>n</italic></sup>) changes dramatically if the source term <italic>f</italic>(<italic>x</italic>, <italic>y</italic>, <italic>t</italic>) is big. The iteration times with <italic>L</italic> = 1.0, <italic>M</italic> = 15, <italic>N</italic> = <italic>M</italic>
<sup>2</sup> are shown in <xref ref-type="table" rid="tab2">Table 2</xref>.</p><p>The parallel algorithm is compatible with short memory principle [<xref rid="B15" ref-type="bibr">15</xref>]. The computing time (<italic>K</italic> + 8<italic>L</italic>)<italic>M</italic>
<sub><italic>a</italic></sub>
<italic>M</italic>
<sub><italic>b</italic></sub> will become small with a smaller <italic>K</italic>, which is determined by <italic>n</italic>. The Gauss-Seidel iteration method will have better convergent speed than Jacobi iteration method, but it is hard to parallelize the Gauss-Seidel method.</p><p>As analyzed in <xref ref-type="sec" rid="sec3.1">Section 3.1</xref>, the computational complexity is <italic>O</italic>(<italic>M</italic>
<sub><italic>x</italic></sub>
<italic>M</italic>
<sub><italic>y</italic></sub>
<italic>N</italic>
<sup>2</sup>). Define the following function:
<disp-formula id="EEq10"><label>(10)</label><mml:math id="M10"><mml:mtable><mml:mtr><mml:mtd><mml:mtable><mml:mtr><mml:mtd><mml:mi>w</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>log</mml:mi><mml:mo>&#x02061;</mml:mo></mml:mrow><mml:mrow><mml:mn mathvariant="normal">2</mml:mn></mml:mrow></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msqrt><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mn mathvariant="normal">2</mml:mn></mml:mrow></mml:msub><mml:mo>&#x02212;</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mn mathvariant="normal">1</mml:mn></mml:mrow></mml:msub></mml:msqrt></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula>
<italic>w</italic> varies almost linearly, as shown in <xref ref-type="fig" rid="fig10">Figure 10</xref>. <xref ref-type="fig" rid="fig10">Figure 10</xref> shows that the heavy computation is a real challenge from the point of view of computer science.</p><p>The heavy memory usage is the other challenge besides the heavy computation. Ignoring the memory usage of the coefficients and the source term <italic>f</italic>
<sub><italic>i</italic>,<italic>j</italic></sub>
<sup><italic>n</italic></sup>, <italic>u</italic>
<sub><italic>i</italic>,<italic>j</italic></sub>
<sup><italic>n</italic></sup> needs 8<italic>M</italic>
<sub><italic>x</italic></sub>
<italic>M</italic>
<sub><italic>y</italic></sub>
<italic>N</italic> bytes memory space. It needs 100&#x02009;GB memory with <italic>M</italic>
<sub><italic>x</italic></sub> = 10240,<italic>M</italic>
<sub><italic>y</italic></sub> = 10240, and <italic>N</italic> = 1024. As discussed above, the bigger the <italic>M</italic>
<sub><italic>x</italic></sub>, <italic>M</italic>
<sub><italic>y</italic></sub> are, the smaller the <italic>&#x003b2;</italic> (communication/computation ratio) is. So, the heavy memory usage will limit the parallel efficiency of the parallel algorithm. This kind of contradictions exists in many places. One contradiction is the easy parallelization with bad convergence of the Jacobi iterative method. Another contradiction is the hard parallelization and good convergence of the Gauss-Seidel iterative method.</p></sec></sec><sec id="sec5"><title>5. Conclusions and Future Work</title><p>In this paper, we present a parallel algorithm for 2D-TFDE with implicit differential method. The parallel solution is analyzed and implemented with MPI programming model. The experimental results show that the parallel algorithm compares well with the exact solution and can scale well on large scale distributed memory cluster system. So, the power of parallel computing for the time consuming fractional differential equations should be recognized.</p><p>The numerical solution for fractional equations is very computationally intensive. As a part of the future work, first, the numerical solution of high dimensional space fractional equations has global reliance on almost whole grid points, which is very challenging for real applications. Second, the Krylov subspace method with preconditioner will enhance the convergence for (<xref ref-type="disp-formula" rid="EEq4">4</xref>) and should be paid attention to. Third, accelerating the parallel algorithm on heterogeneous system [<xref rid="B28" ref-type="bibr">28</xref>] should be paid attention to.</p></sec></body><back><ack><title>Acknowledgments</title><p>This research work is supported by the National Natural Science Foundation of China under Grant no. 11175253, also by 973 Program of China under Grant no. 61312701001. The authors would like to thank the anonymous reviewers for their helpful comments also.</p></ack><sec sec-type="conflict"><title>Conflict of Interests</title><p>The authors declare that there is no conflict of interests regarding the publication of this paper.</p></sec><ref-list><ref id="B1"><label>1</label><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Magin</surname><given-names>RL</given-names></name></person-group><source><italic>Fractional Calculus in Bioengineering</italic></source><year>2006</year><publisher-loc>Redding, Calif, USA</publisher-loc><publisher-name>Begell House</publisher-name></element-citation></ref><ref id="B2"><label>2</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Liu</surname><given-names>F</given-names></name><name><surname>Turner</surname><given-names>I</given-names></name><name><surname>Anh</surname><given-names>V</given-names></name><name><surname>Yang</surname><given-names>Q</given-names></name><name><surname>Burrage</surname><given-names>K</given-names></name></person-group><article-title>A numerical method for the fractional Fitzhugh-Nagumo monodomain model</article-title><source><italic>ANZIAM Journal</italic></source><year>2013</year><volume>54</volume><fpage>C608</fpage><lpage>C629</lpage></element-citation></ref><ref id="B3"><label>3</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ding</surname><given-names>H</given-names></name><name><surname>Li</surname><given-names>C</given-names></name></person-group><article-title>Mixed spline function method for reaction-diffusion equations</article-title><source><italic>Journal of Computational Physics</italic></source><year>2013</year><volume>242</volume><fpage>103</fpage><lpage>123</lpage></element-citation></ref><ref id="B4"><label>4</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhuang</surname><given-names>P</given-names></name><name><surname>Liu</surname><given-names>F</given-names></name></person-group><article-title>Finite difference approximation for two-dimensional time fractional diffusion equation</article-title><source><italic>Journal of Algorithms &#x00026; Computational Technology</italic></source><year>2007</year><volume>1</volume><issue>1</issue><fpage>1</fpage><lpage>15</lpage></element-citation></ref><ref id="B5"><label>5</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Yuste</surname><given-names>SB</given-names></name><name><surname>Acedo</surname><given-names>L</given-names></name></person-group><article-title>An explicit finite difference method and a new von Neumann-type stability analysis for fractional diffusion equations</article-title><source><italic>SIAM Journal on Numerical Analysis</italic></source><year>2005</year><volume>42</volume><issue>5</issue><fpage>1862</fpage><lpage>1874</lpage><pub-id pub-id-type="other">2-s2.0-25444472344</pub-id></element-citation></ref><ref id="B6"><label>6</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Liu</surname><given-names>F</given-names></name><name><surname>Zhuang</surname><given-names>P</given-names></name><name><surname>Anh</surname><given-names>V</given-names></name><name><surname>Turner</surname><given-names>I</given-names></name><name><surname>Burrage</surname><given-names>K</given-names></name></person-group><article-title>Stability and convergence of the difference methods for the space-time fractional advection-diffusion equation</article-title><source><italic>Applied Mathematics and Computation</italic></source><year>2007</year><volume>191</volume><issue>1</issue><fpage>12</fpage><lpage>20</lpage><pub-id pub-id-type="other">2-s2.0-34547673244</pub-id></element-citation></ref><ref id="B7"><label>7</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Yuste</surname><given-names>SB</given-names></name><name><surname>Quintana-Murillo</surname><given-names>J</given-names></name></person-group><article-title>A finite difference method with non-uniform timesteps for fractional diffusion equations</article-title><source><italic>Computer Physics Communications</italic></source><year>2012</year><volume>183</volume><issue>12</issue><fpage>2594</fpage><lpage>2600</lpage></element-citation></ref><ref id="B8"><label>8</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhang</surname><given-names>X</given-names></name><name><surname>Huang</surname><given-names>P</given-names></name><name><surname>Feng</surname><given-names>X</given-names></name><name><surname>Wei</surname><given-names>L</given-names></name></person-group><article-title>Finite element method for two-dimensional time-fractional tricomi-type equations</article-title><source><italic>Numerical Methods for Partial Differential Equations</italic></source><year>2013</year><volume>29</volume><issue>4</issue><fpage>1081</fpage><lpage>1096</lpage></element-citation></ref><ref id="B9"><label>9</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Agrawal</surname><given-names>OP</given-names></name></person-group><article-title>A general finite element formulation for fractional variational problems</article-title><source><italic>Journal of Mathematical Analysis and Applications</italic></source><year>2008</year><volume>337</volume><issue>1</issue><fpage>1</fpage><lpage>12</lpage><pub-id pub-id-type="other">2-s2.0-34548226960</pub-id></element-citation></ref><ref id="B10"><label>10</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Li</surname><given-names>C</given-names></name><name><surname>Zeng</surname><given-names>F</given-names></name><name><surname>Liu</surname><given-names>F</given-names></name></person-group><article-title>Spectral approximations to the fractional integral and derivative</article-title><source><italic>Fractional Calculus and Applied Analysis</italic></source><year>2012</year><volume>15</volume><issue>3</issue><fpage>383</fpage><lpage>406</lpage></element-citation></ref><ref id="B11"><label>11</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Leonenko</surname><given-names>NN</given-names></name><name><surname>Meerschaert</surname><given-names>MM</given-names></name><name><surname>Sikorskii</surname><given-names>A</given-names></name></person-group><article-title>Fractional pearson diffusions</article-title><source><italic>Journal of Mathematical Analysis and Applications</italic></source><year>2013</year><volume>403</volume><issue>2</issue><fpage>532</fpage><lpage>546</lpage><pub-id pub-id-type="pmid">23626377</pub-id></element-citation></ref><ref id="B12"><label>12</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhuang</surname><given-names>P</given-names></name><name><surname>Gu</surname><given-names>YT</given-names></name><name><surname>Liu</surname><given-names>F</given-names></name><name><surname>Turner</surname><given-names>I</given-names></name><name><surname>Yarlagadda</surname><given-names>PKDV</given-names></name></person-group><article-title>Time-dependent fractional advection-diffusion equations by an implicit MLS meshless method</article-title><source><italic>International Journal for Numerical Methods in Engineering</italic></source><year>2011</year><volume>88</volume><issue>13</issue><fpage>1346</fpage><lpage>1362</lpage><pub-id pub-id-type="other">2-s2.0-81955168106</pub-id></element-citation></ref><ref id="B13"><label>13</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Tadjeran</surname><given-names>C</given-names></name><name><surname>Meerschaert</surname><given-names>MM</given-names></name></person-group><article-title>A second-order accurate numerical method for the two-dimensional fractional diffusion equation</article-title><source><italic>Journal of Computational Physics</italic></source><year>2007</year><volume>220</volume><issue>2</issue><fpage>813</fpage><lpage>823</lpage><pub-id pub-id-type="other">2-s2.0-33845628108</pub-id></element-citation></ref><ref id="B14"><label>14</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhang</surname><given-names>Y-N</given-names></name><name><surname>Sun</surname><given-names>Z-Z</given-names></name></person-group><article-title>Alternating direction implicit schemes for the two-dimensional fractional sub-diffusion equation</article-title><source><italic>Journal of Computational Physics</italic></source><year>2011</year><volume>230</volume><issue>24</issue><fpage>8713</fpage><lpage>8728</lpage><pub-id pub-id-type="other">2-s2.0-80053633596</pub-id></element-citation></ref><ref id="B15"><label>15</label><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Podlubny</surname><given-names>I</given-names></name></person-group><source><italic>Fractional Differential Equations</italic></source><year>1999</year><publisher-loc>San Diego, Calif, USA</publisher-loc><publisher-name>Academic Press</publisher-name></element-citation></ref><ref id="B16"><label>16</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gong</surname><given-names>C</given-names></name><name><surname>Bao</surname><given-names>W</given-names></name><name><surname>Tang</surname><given-names>G</given-names></name></person-group><article-title>A parallel algorithm for the Riesz fractional reaction-diffusion equation with explicit finite difference method</article-title><source><italic>Fractional Calculus and Applied Analysis</italic></source><year>2013</year><volume>16</volume><issue>3</issue><fpage>654</fpage><lpage>669</lpage></element-citation></ref><ref id="B17"><label>17</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Diethelm</surname><given-names>K</given-names></name></person-group><article-title>An efficient parallel algorithm for the numerical solution of fractional differential equations</article-title><source><italic>Fractional Calculus and Applied Analysis</italic></source><year>2011</year><volume>14</volume><issue>3</issue><fpage>475</fpage><lpage>490</lpage><pub-id pub-id-type="other">2-s2.0-80051704994</pub-id></element-citation></ref><ref id="B18"><label>18</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Yan</surname><given-names>J</given-names></name><name><surname>Tan</surname><given-names>G-M</given-names></name><name><surname>Sun</surname><given-names>N-H</given-names></name></person-group><article-title>Optimizing parallel <italic>S</italic>
<sub><italic>n</italic></sub> sweeps on unstructured grids for multi-core clusters</article-title><source><italic>Journal of Computer Science and Technology</italic></source><year>2013</year><volume>28</volume><issue>4</issue><fpage>657</fpage><lpage>670</lpage></element-citation></ref><ref id="B19"><label>19</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mo</surname><given-names>Z</given-names></name><name><surname>Zhang</surname><given-names>A</given-names></name><name><surname>Cao</surname><given-names>X</given-names></name><etal/></person-group><article-title>JASMIN: a parallel software infrastructure for scientific computing</article-title><source><italic>Frontiers of Computer Science in China</italic></source><year>2010</year><volume>4</volume><issue>4</issue><fpage>480</fpage><lpage>488</lpage><pub-id pub-id-type="other">2-s2.0-78650483559</pub-id></element-citation></ref><ref id="B20"><label>20</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Chen</surname><given-names>F</given-names></name><name><surname>Shen</surname><given-names>J</given-names></name></person-group><article-title>A GPU parallelized spectral method for elliptic equations in rectangular domains</article-title><source><italic>Journal of Computational Physics</italic></source><year>2013</year><volume>250</volume><fpage>555</fpage><lpage>564</lpage></element-citation></ref><ref id="B21"><label>21</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Haga</surname><given-names>JB</given-names></name><name><surname>Osnes</surname><given-names>H</given-names></name><name><surname>Langtangen</surname><given-names>HP</given-names></name></person-group><article-title>A parallel block preconditioner for large-scale poroelasticity with highly heterogeneous material parameters</article-title><source><italic>Computational Geosciences</italic></source><year>2012</year><volume>16</volume><issue>3</issue><fpage>723</fpage><lpage>734</lpage><pub-id pub-id-type="other">2-s2.0-84860586160</pub-id></element-citation></ref><ref id="B22"><label>22</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gong</surname><given-names>C</given-names></name><name><surname>Liu</surname><given-names>J</given-names></name><name><surname>Chi</surname><given-names>L</given-names></name><name><surname>Huang</surname><given-names>H</given-names></name><name><surname>Fang</surname><given-names>J</given-names></name><name><surname>Gong</surname><given-names>Z</given-names></name></person-group><article-title>GPU accelerated simulations of 3D deterministic particle transport using discrete ordinates method</article-title><source><italic>Journal of Computational Physics</italic></source><year>2011</year><volume>230</volume><issue>15</issue><fpage>6010</fpage><lpage>6022</lpage><pub-id pub-id-type="other">2-s2.0-79956143384</pub-id></element-citation></ref><ref id="B23"><label>23</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Talamo</surname><given-names>A</given-names></name></person-group><article-title>Numerical solution of the time dependent neutron transport equation by the method of the characteristics</article-title><source><italic>Journal of Computational Physics</italic></source><year>2013</year><volume>240</volume><fpage>248</fpage><lpage>267</lpage></element-citation></ref><ref id="B24"><label>24</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gong</surname><given-names>C</given-names></name><name><surname>Liu</surname><given-names>J</given-names></name><name><surname>Huang</surname><given-names>H</given-names></name><name><surname>Gong</surname><given-names>Z</given-names></name></person-group><article-title>Particle transport with unstructured grid on GPU</article-title><source><italic>Computer Physics Communications</italic></source><year>2012</year><volume>183</volume><issue>3</issue><fpage>588</fpage><lpage>593</lpage><pub-id pub-id-type="other">2-s2.0-84855469169</pub-id></element-citation></ref><ref id="B25"><label>25</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pennycook</surname><given-names>S</given-names></name><name><surname>Hammond</surname><given-names>S</given-names></name><name><surname>Wright</surname><given-names>S</given-names></name><name><surname>Herdman</surname><given-names>J</given-names></name><name><surname>Miller</surname><given-names>I</given-names></name><name><surname>Jarvis</surname><given-names>S</given-names></name></person-group><article-title>An investigation of the performance portability of OpenCL</article-title><source><italic>Journal of Parallel and Distributed Computing</italic></source><year>2012</year><volume>73</volume><issue>11</issue><fpage>1439</fpage><lpage>1450</lpage></element-citation></ref><ref id="B26"><label>26</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gu</surname><given-names>J</given-names></name><name><surname>Gu</surname><given-names>X</given-names></name><name><surname>Gu</surname><given-names>M</given-names></name></person-group><article-title>A novel parallel quantum genetic algorithm for stochastic job shop scheduling</article-title><source><italic>Journal of Mathematical Analysis and Applications</italic></source><year>2009</year><volume>355</volume><issue>1</issue><fpage>63</fpage><lpage>81</lpage><pub-id pub-id-type="other">2-s2.0-60749118275</pub-id></element-citation></ref><ref id="B27"><label>27</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Salvadore</surname><given-names>F</given-names></name><name><surname>Bernardini</surname><given-names>M</given-names></name><name><surname>Botti</surname><given-names>M</given-names></name></person-group><article-title>GPU accelerated flow solver for direct numerical simulation of turbulent flows</article-title><source><italic>Journal of Computational Physics</italic></source><year>2013</year><volume>235</volume><fpage>129</fpage><lpage>142</lpage></element-citation></ref><ref id="B28"><label>28</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Yang</surname><given-names>X-J</given-names></name><name><surname>Liao</surname><given-names>X-K</given-names></name><name><surname>Lu</surname><given-names>K</given-names></name><name><surname>Hu</surname><given-names>Q-F</given-names></name><name><surname>Song</surname><given-names>J-Q</given-names></name><name><surname>Su</surname><given-names>J-S</given-names></name></person-group><article-title>The TianHe-1A supercomputer: its hardware and software</article-title><source><italic>Journal of Computer Science and Technology</italic></source><year>2011</year><volume>26</volume><issue>3</issue><fpage>344</fpage><lpage>351</lpage></element-citation></ref></ref-list></back><floats-group><fig id="fig1" orientation="portrait" position="float"><label>Figure 1</label><caption><p>The data dependence of 2D-TFDE of grid point <italic>P</italic>
<sub><italic>i</italic>,<italic>j</italic></sub> of time step <italic>t</italic>
<sub><italic>n</italic>+1</sub>.</p></caption><graphic xlink:href="TSWJ2014-219580.001"/></fig><fig id="fig2" orientation="portrait" position="float"><label>Figure 2</label><caption><p>The two-dimensional task distribution model for 2D-TFDE.</p></caption><graphic xlink:href="TSWJ2014-219580.002"/></fig><fig id="fig3" orientation="portrait" position="float"><label>Figure 3</label><caption><p>Data layout for 2D-TFDE.</p></caption><graphic xlink:href="TSWJ2014-219580.003"/></fig><fig id="fig4" orientation="portrait" position="float"><label>Figure 4</label><caption><p>The numerical approximation whose transport is governed by the TFDE (<xref ref-type="disp-formula" rid="EEq7">7</xref>) for various <italic>&#x003b1;</italic> = 0.2, 0.4, 0.6, 0.8 when <italic>y</italic> = 0.5, <italic>t</italic> = 1.0.</p></caption><graphic xlink:href="TSWJ2014-219580.004"/></fig><fig id="fig5" orientation="portrait" position="float"><label>Figure 5</label><caption><p>The approximation solution of (<xref ref-type="disp-formula" rid="EEq7">7</xref>) when <italic>&#x003b1;</italic> = 0.4 and <italic>t</italic> = 1.0.</p></caption><graphic xlink:href="TSWJ2014-219580.005"/></fig><fig id="fig6" orientation="portrait" position="float"><label>Figure 6</label><caption><p>Comparison of exact solution to the solution of the parallel algorithm at time <italic>t</italic> = 1.0.</p></caption><graphic xlink:href="TSWJ2014-219580.006"/></fig><fig id="fig7" orientation="portrait" position="float"><label>Figure 7</label><caption><p>Performance comparison between one process and four processes on E5540 with fixed <italic>N</italic> = 10.</p></caption><graphic xlink:href="TSWJ2014-219580.007"/></fig><fig id="fig8" orientation="portrait" position="float"><label>Figure 8</label><caption><p>Performance comparison between one process and four processes on E5540 with fixed <italic>M</italic>.</p></caption><graphic xlink:href="TSWJ2014-219580.008"/></fig><fig id="fig9" orientation="portrait" position="float"><label>Figure 9</label><caption><p>Scalability of the parallel algorithm on the cluster system.</p></caption><graphic xlink:href="TSWJ2014-219580.009"/></fig><fig id="fig10" orientation="portrait" position="float"><label>Figure 10</label><caption><p>The linear variation of <italic>w</italic>.</p></caption><graphic xlink:href="TSWJ2014-219580.010"/></fig><fig id="alg1" orientation="portrait" position="float"><label>Algorithm 1</label><caption><p>Parallel algorithm for 2D-TFDE.</p></caption><graphic xlink:href="TSWJ2014-219580.alg.001"/></fig><table-wrap id="tab1" orientation="portrait" position="float"><label>Table 1</label><caption><p>Technical specifications of the experiment platform.</p></caption><table frame="hsides" rules="groups"><tbody><tr><td align="left" rowspan="1" colspan="1">CPU</td><td align="center" rowspan="1" colspan="1">Intel Xeon E5540, 4 cores, 2.53&#x02009;GHz</td></tr><tr><td align="left" rowspan="1" colspan="1">Operating system</td><td align="center" rowspan="1" colspan="1">Kylin server version 3.1</td></tr><tr><td align="left" rowspan="1" colspan="1">Compiler</td><td align="center" rowspan="1" colspan="1">mpif90, Intel Fortran, version 11.1</td></tr><tr><td align="left" rowspan="1" colspan="1">Communication</td><td align="center" rowspan="1" colspan="1">MPICH2, version 1.3rc2</td></tr></tbody></table></table-wrap><table-wrap id="tab2" orientation="portrait" position="float"><label>Table 2</label><caption><p>Impact of the source term on iteration times.</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" rowspan="1" colspan="1">
<italic>f</italic>(<italic>x</italic>, <italic>y</italic>, <italic>t</italic>)</th><th align="center" rowspan="1" colspan="1">
<italic>T</italic> = 2.0</th><th align="center" rowspan="1" colspan="1">
<italic>T</italic> = 3.0</th></tr></thead><tbody><tr><td align="left" rowspan="1" colspan="1">
<inline-formula><mml:math id="M11"><mml:mfrac><mml:mrow><mml:mn mathvariant="normal">25</mml:mn><mml:msup><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mn mathvariant="normal">1.6</mml:mn></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:mn mathvariant="normal">12</mml:mn><mml:mi mathvariant="normal">&#x00393;</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn mathvariant="normal">0.6</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mn mathvariant="normal">2</mml:mn></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:mn mathvariant="normal">2</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mrow><mml:mi>sin</mml:mi><mml:mo>&#x02061;</mml:mo></mml:mrow><mml:mo>&#x02061;</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="normal">&#x003c0;</mml:mi><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mrow><mml:mi>sin</mml:mi><mml:mo>&#x02061;</mml:mo></mml:mrow><mml:mo>&#x02061;</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="normal">&#x003c0;</mml:mi><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>
</td><td align="center" rowspan="1" colspan="1">284</td><td align="center" rowspan="1" colspan="1">444</td></tr><tr><td align="left" rowspan="1" colspan="1">
<inline-formula><mml:math id="M12"><mml:mfrac><mml:mrow><mml:mn mathvariant="normal">25</mml:mn></mml:mrow><mml:mrow><mml:mn mathvariant="normal">12</mml:mn><mml:mi mathvariant="normal">&#x00393;</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn mathvariant="normal">0.6</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac><mml:mn mathvariant="normal">2</mml:mn><mml:mrow><mml:mrow><mml:mi>sin</mml:mi><mml:mo>&#x02061;</mml:mo></mml:mrow><mml:mo>&#x02061;</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="normal">&#x003c0;</mml:mi><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mrow><mml:mi>sin</mml:mi><mml:mo>&#x02061;</mml:mo></mml:mrow><mml:mo>&#x02061;</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="normal">&#x003c0;</mml:mi><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>
</td><td align="center" rowspan="1" colspan="1">253</td><td align="center" rowspan="1" colspan="1">361</td></tr><tr><td align="left" rowspan="1" colspan="1">
<inline-formula><mml:math id="M13"><mml:mfrac><mml:mrow><mml:mn mathvariant="normal">25</mml:mn></mml:mrow><mml:mrow><mml:mn mathvariant="normal">12</mml:mn><mml:mi mathvariant="normal">&#x00393;</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn mathvariant="normal">0.6</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac><mml:mrow><mml:mrow><mml:mi>sin</mml:mi><mml:mo>&#x02061;</mml:mo></mml:mrow><mml:mo>&#x02061;</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="normal">&#x003c0;</mml:mi><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mrow><mml:mi>sin</mml:mi><mml:mo>&#x02061;</mml:mo></mml:mrow><mml:mo>&#x02061;</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="normal">&#x003c0;</mml:mi><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>
</td><td align="center" rowspan="1" colspan="1">245</td><td align="center" rowspan="1" colspan="1">348</td></tr><tr><td align="left" rowspan="1" colspan="1">
<inline-formula><mml:math id="M14"><mml:mfrac><mml:mrow><mml:mn mathvariant="normal">1.0</mml:mn></mml:mrow><mml:mrow><mml:mi mathvariant="normal">&#x00393;</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn mathvariant="normal">0.6</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac><mml:mrow><mml:mrow><mml:mi>sin</mml:mi><mml:mo>&#x02061;</mml:mo></mml:mrow><mml:mo>&#x02061;</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="normal">&#x003c0;</mml:mi><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mrow><mml:mi>sin</mml:mi><mml:mo>&#x02061;</mml:mo></mml:mrow><mml:mo>&#x02061;</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="normal">&#x003c0;</mml:mi><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>
</td><td align="center" rowspan="1" colspan="1">238</td><td align="center" rowspan="1" colspan="1">336</td></tr></tbody></table></table-wrap></floats-group></article>