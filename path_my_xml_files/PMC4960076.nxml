<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.0 20120330//EN" "JATS-archivearticle1.dtd">
<article xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">Springerplus</journal-id><journal-id journal-id-type="iso-abbrev">Springerplus</journal-id><journal-title-group><journal-title>SpringerPlus</journal-title></journal-title-group><issn pub-type="epub">2193-1801</issn><publisher><publisher-name>Springer International Publishing</publisher-name><publisher-loc>Cham</publisher-loc></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">27512635</article-id><article-id pub-id-type="pmc">4960076</article-id><article-id pub-id-type="publisher-id">2838</article-id><article-id pub-id-type="doi">10.1186/s40064-016-2838-5</article-id><article-categories><subj-group subj-group-type="heading"><subject>Research</subject></subj-group></article-categories><title-group><article-title>Covariance and crossover matrix guided differential evolution for global numerical optimization</article-title></title-group><contrib-group><contrib contrib-type="author" corresp="yes"><name><surname>Li</surname><given-names>YongLi</given-names></name><address><phone>+86-029-84787514</phone><email>672719405@qq.com</email></address><xref ref-type="aff" rid="Aff1">1</xref><xref ref-type="aff" rid="Aff2">2</xref></contrib><contrib contrib-type="author"><name><surname>Feng</surname><given-names>JinFu</given-names></name><address><email>wcsfjf@163.com</email></address><xref ref-type="aff" rid="Aff1">1</xref></contrib><contrib contrib-type="author"><name><surname>Hu</surname><given-names>JunHua</given-names></name><address><email>hjh_air@163.com</email></address><xref ref-type="aff" rid="Aff1">1</xref></contrib><aff id="Aff1"><label>1</label>Institute of Aeronautics and Astronautics Engineering, Air Force Engineering University, Room 1, BaLing Road, Baqiao District, Xi&#x02019;an City, 710038 China </aff><aff id="Aff2"><label>2</label>Institute of Equipment Engineering, Armed Police Force Engineering University, Xi&#x02019;an, 710086 China </aff></contrib-group><pub-date pub-type="epub"><day>26</day><month>7</month><year>2016</year></pub-date><pub-date pub-type="pmc-release"><day>26</day><month>7</month><year>2016</year></pub-date><pub-date pub-type="collection"><year>2016</year></pub-date><volume>5</volume><issue>1</issue><elocation-id>1176</elocation-id><history><date date-type="received"><day>25</day><month>4</month><year>2016</year></date><date date-type="accepted"><day>14</day><month>7</month><year>2016</year></date></history><permissions><copyright-statement>&#x000a9; The Author(s) 2016</copyright-statement><license license-type="OpenAccess"><license-p>
<bold>Open Access</bold>This article is distributed under the terms of the Creative Commons Attribution 4.0 International License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made.</license-p></license></permissions><abstract id="Abs1"><p>Differential evolution (DE) is an efficient and robust evolutionary algorithm and has wide application in various science and engineering fields. DE is sensitive to the selection of mutation and crossover strategies and their associated control parameters. However, the structure and implementation of DEs are becoming more complex because of the diverse mutation and crossover strategies that use distinct parameter settings during the different stages of the evolution. A novel strategy is used in this study to improve the crossover and mutation operations. The crossover matrix, instead of a crossover operator and its control parameter CR, is proposed to implement the function of the crossover operation. Meanwhile, Gaussian distribution centers the best individuals found in each generation based on the proposed covariance matrix, which is generated between the best individual and several better individuals. Improved mutation operator based on the crossover matrix is randomly selected to generate the trial population. This operator is used to generate high-quality solutions to improve the capability of exploitation and enhance the preference of exploration. In addition, the memory population is randomly chosen from previous generation and used to control the search direction in the novel mutation strategy. Accordingly, the diversity of the population is improved. Thus, CCDE, which is a novel efficient and simple DE variant, is presented in this paper. CCDE has been tested on 30 benchmarks and 5 real-world optimization problems from the IEEE Congress on Evolutionary Computation (CEC) 2014 and CEC 2011, respectively. Experimental and statistical results demonstrate the effectiveness of CCDE for global numerical and engineering optimization. CCDE can solve the test benchmark functions and engineering problems more successfully than the other DE variants and algorithms from CEC 2014.</p></abstract><kwd-group xml:lang="en"><title>Keywords</title><kwd>Differential evolution</kwd><kwd>Numerical and engineering optimization</kwd><kwd>Crossover matrix</kwd><kwd>Covariance matrix</kwd><kwd>Memory population</kwd></kwd-group><funding-group><award-group><funding-source><institution-wrap><institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100001809</institution-id><institution>National Natural Science Foundation of China</institution></institution-wrap></funding-source><award-id>51541905</award-id><principal-award-recipient><name><surname>Hu</surname><given-names>JunHua</given-names></name></principal-award-recipient></award-group></funding-group><custom-meta-group><custom-meta><meta-name>issue-copyright-statement</meta-name><meta-value>&#x000a9; The Author(s) 2016</meta-value></custom-meta></custom-meta-group></article-meta></front><body><sec id="Sec1"><title>Background</title><p>Global optimization has been extensively applied in various science and engineering fields. Unconstrained global optimization is important in optimization. Thus, numerous studies on global optimization have been conducted using various strategies to achieve unconstrained global optimization (Deep et al. <xref ref-type="bibr" rid="CR5">2009</xref>; Fan and Yan <xref ref-type="bibr" rid="CR9">2015</xref>; Gwizda&#x00142;&#x00142;a <xref ref-type="bibr" rid="CR14">2012</xref>). However, serious challenges in global optimization remain, such as non-linear, non-convex, and non-differential problems.</p><p>Differential evolution (DE) is one of the most efficient evolutionary algorithms (EAs) and has wide application in numerous numerical optimization problems in diverse fields (dos Santos Coelho et al. <xref ref-type="bibr" rid="CR7">2014</xref>). ED was first introduced by Storn and Price (<xref ref-type="bibr" rid="CR23">1995</xref>). DE is a population-based optimization algorithm similar to other EAs. This algorithm primarily consists of a mutation operator and a crossover operator (Storn and Price <xref ref-type="bibr" rid="CR24">1997</xref>). Each individual in the population in DE is called a target vector. First, a mutant vector is produced by the mutation operator. Then, a trial vector is confirmed by the crossover operator applied to the target and mutant vectors. Finally, the better solution is selected between the trial vector and its target vector according to their objective function values. DE has been successfully demonstrated in various continuous optimization problems in many science and engineering fields because of its simple structure, easy operation, convergence property, quality of solution, and robustness. DE has also been used in robot control (Wang and Li <xref ref-type="bibr" rid="CR26">2011</xref>), sensor array interrogation (Venu et al. <xref ref-type="bibr" rid="CR25">2008</xref>), cluster analysis (Maulik and Saha <xref ref-type="bibr" rid="CR19">2009</xref>), and other applications (Dong et al. <xref ref-type="bibr" rid="CR6">2014</xref>; Gundry et al. <xref ref-type="bibr" rid="CR13">2015</xref>; Zhang and Duan <xref ref-type="bibr" rid="CR31">2015</xref>; Zhang et al. <xref ref-type="bibr" rid="CR33">2015</xref>).</p><p>DE is sensitive to the choice of the mutation and crossover operators and their two associated control parameters, namely, the crossover control parameter <italic>CR</italic> and scaling factor <italic>F</italic> (Qin et al. <xref ref-type="bibr" rid="CR21">2009</xref>). The influence of these factors has been paid much attention, and a series of different DEs has been proposed to improve the optimization performance. Brest et al. (<xref ref-type="bibr" rid="CR2">2006</xref>) proposed the JDE algorithm, which is a DE with self-adaptive parameter control. In this algorithm, <italic>CR</italic> and <italic>F</italic> are encoded into the chromosome and participate in the evolution. Zhang and Sanderson (<xref ref-type="bibr" rid="CR32">2009</xref>) improved <italic>F</italic> by Cauchy distribution and <italic>CR</italic> by normal distribution in the parameter-adaptive DE algorithm called JADE. Moreover, self-adaptive equations for <italic>CR</italic> and <italic>F</italic> have been proposed to control their values with increased generation. Qin et al. (<xref ref-type="bibr" rid="CR21">2009</xref>) proposed another self-adaptive DE called SaDE with a strategy pool as well as different parameter settings. Mallipeddi et al. (<xref ref-type="bibr" rid="CR18">2011</xref>) proposed the EPSDE algorithm, which is a DE with an ensemble of control parameter and mutation strategies. EPSDE has a distinct trial vector generation strategy pool and controls parameter pool to self-adjust its search strategy along with the iteration process. Wang et al. (<xref ref-type="bibr" rid="CR27">2014</xref>) introduced the CoBiDE algorithm, which uses a covariance matrix learning strategy based on the current population distribution to initialize the population of DE and a bimodal distribution strategy to control the value of the two control parameters. These DE-based algorithms and other improved DEs have enhanced the optimization performance of DE to some extent. However, the simple structure of standard DE has been considerably changed, resulting in the apparent difficulty in balancing between exploration (searching for better individuals) and exploitation (using the existing material in the population to obtain the best effect) (Fraa et al. <xref ref-type="bibr" rid="CR10">2015</xref>).</p><p>Thus, we propose a covariance and crossover matrix-guided DE (CCDE) based on several studies (Ghosh et al. <xref ref-type="bibr" rid="CR12">2012</xref>; Santucci and Milani <xref ref-type="bibr" rid="CR22">2011</xref>; Zhabitsky and Zhabitskaya <xref ref-type="bibr" rid="CR30">2013</xref>) to solve these problems. The covariance matrix between the current best individual and several better individuals can reflect the rotation information of the function to some extent. Thus, the covariance matrix is used to guide the generation of new individuals. We introduce the Gaussian distribution that centers the best individuals found in each generation based on the proposed covariance matrix. The crossover operator and its parameter <italic>CR</italic> are simplified and replaced by the crossover matrix, which is a random binary integer-valued matrix composed of 0 and 1. In addition, the memory population <italic>M</italic> is introduced to enhance the exploration of the CCDE and is used to control the search direction of the generation. CCDE has been tested on 30 benchmarks chosen from the IEEE Congress on Evolutionary Computation (CEC) 2014 (Liang et al. <xref ref-type="bibr" rid="CR16">2013</xref>) and 5 real-world engineering problems selected from CEC 2011 (Das and Suganthan <xref ref-type="bibr" rid="CR4">2010</xref>). The performance of CCDE is compared with those of JADE, SaDE, EPSDE, and CoBiDE, as well as five algorithms from CEC 2014. The experimental and statistical results suggest that the performance of CCDE is better than those of other compared algorithms.</p><p>The rest of this paper is organized as follows. Section &#x0201c;<xref rid="Sec2" ref-type="sec">DEA</xref>&#x0201d; introduces DE briefly. CCDE is presented in section &#x0201c;<xref rid="Sec7" ref-type="sec">CCDE</xref>&#x0201d;. The experimental results are presented in section &#x0201c;<xref rid="Sec15" ref-type="sec">Experimental study</xref>&#x0201d;. Finally, section &#x0201c;<xref rid="Sec20" ref-type="sec">Conclusion</xref>&#x0201d; elaborates the conclusion and future work.</p></sec><sec id="Sec2"><title>DEA</title><p>DE is a population-based heuristic search algorithm and has four basic processes: initialization, mutation, crossover, and selection.</p><sec id="Sec3"><title>Initialization</title><p>DE performs an initialization by selecting several points from the search space randomly using Eq.&#x000a0;(<xref rid="Equ1" ref-type="">1</xref>), as follows:<disp-formula id="Equ1"><label>1</label><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$P_{0} = \{ x_{i,0} = (x_{i,1,0} ,x_{i,2,0} ,x_{i,3,0} , \ldots ,x_{i,D,0} ),\quad i = 1,2,3, \ldots ,N\}$$\end{document}</tex-math><mml:math id="M2" display="block"><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>&#x02026;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mspace width="1em"/><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x02026;</mml:mo><mml:mo>,</mml:mo><mml:mi>N</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><graphic xlink:href="40064_2016_2838_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula>where <italic>D</italic> denotes the dimension of the population and <italic>N</italic> denotes the population size. The vector element of <italic>x</italic><sub><italic>i</italic>,0</sub> is a random number uniformly distributed in the range [<italic>low</italic>, <italic>up</italic>], where <italic>low</italic> and <italic>up</italic> are the boundaries of the search space.</p></sec><sec id="Sec4"><title>Mutation</title><p>The standard mutation strategy used in DE is &#x0201c;DE/rand/1&#x0201d; and can be illustrated using Eq.&#x000a0;(<xref rid="Equ2" ref-type="">2</xref>), as follows:<disp-formula id="Equ2"><label>2</label><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v_{i,G} = x_{r1,G} + F \cdot (x_{r2,G} - x_{r3,G} )$$\end{document}</tex-math><mml:math id="M4" display="block"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>G</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>G</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mi>F</mml:mi><mml:mo>&#x000b7;</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mi>G</mml:mi></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mi>G</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><graphic xlink:href="40064_2016_2838_Article_Equ2.gif" position="anchor"/></alternatives></disp-formula>where <italic>F</italic> is the scaling factor varied from 0.4 to 1; and <italic>r</italic><sub>1</sub>, <italic>r</italic><sub>2</sub>, and <italic>r</italic><sub>3</sub> are randomly chosen from [1, <italic>N</italic>]. <italic>i</italic>, <italic>r</italic><sub>1</sub>, <italic>r</italic><sub>2</sub>, and <italic>r</italic><sub>3</sub> are mutually different. <italic>G</italic> (<italic>G</italic>&#x000a0;=&#x000a0;1, 2, 3, &#x02026;, <italic>Maxgen</italic>) is the current generation. Control parameter <italic>F</italic> is a random value for each individual. A larger <italic>F</italic> is effective for global search, while a smaller <italic>F</italic> is useful for local search.</p></sec><sec id="Sec5"><title>Crossover</title><p>After mutation, the crossover operator is used by Eq.&#x000a0;(<xref rid="Equ3" ref-type="">3</xref>), as follows:<disp-formula id="Equ3"><label>3</label><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u_{i,j,G} = \left\{ \begin{array}{ll} v_{i,j,G} , &#x00026;\quad if\,rand(0,1) \le CR \, or \, j = j_{rand} \\ x_{i,j,G} , &#x00026;\quad otherwise \end{array} \right.$$\end{document}</tex-math><mml:math id="M6" display="block"><mml:mrow><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>G</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfenced close="" open="{" separators=""><mml:mrow><mml:mtable columnspacing="0.5ex"><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>G</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="1em"/><mml:mi>i</mml:mi><mml:mi>f</mml:mi><mml:mspace width="0.166667em"/><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:mi>d</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>&#x02264;</mml:mo><mml:mi>C</mml:mi><mml:mi>R</mml:mi><mml:mspace width="0.166667em"/><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:mspace width="0.166667em"/><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mi>j</mml:mi><mml:mrow><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:mi>d</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>G</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="1em"/><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>h</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>w</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi><mml:mi>e</mml:mi></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:math><graphic xlink:href="40064_2016_2838_Article_Equ3.gif" position="anchor"/></alternatives></disp-formula>where <italic>CR</italic> is a crossover control parameter or a factor selected from the range [0,1), <italic>i</italic>&#x000a0;=&#x000a0;1, 2, &#x02026;, <italic>N</italic> and <italic>j</italic>&#x000a0;=&#x000a0;1, 2, &#x02026;, <italic>D</italic>. <italic>j</italic><sub><italic>rand</italic></sub> is an integer value randomly chosen from [1, <italic>N</italic>]. The trial vector <italic>u</italic><sub><italic>i,G</italic></sub> is generated in the process. <italic>CR</italic> controls the mutation probability. The larger <italic>CR</italic> inherits more elements from the mutant vector.</p></sec><sec id="Sec6"><title>Selection</title><p>In the selection process, DE chooses the better one between the target vector <italic>x</italic><sub><italic>i,G</italic></sub> and trial vector <italic>u</italic><sub><italic>i,G</italic></sub> according to their fitness value using Eq.&#x000a0;(<xref rid="Equ4" ref-type="">4</xref>), as follows:<disp-formula id="Equ4"><label>4</label><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_{i,G + 1} = \left\{ {\begin{array}{ll} {v_{i,G} ,} \hfill &#x00026;\quad {if\;F(v_{i,G} ) \le F(x_{i,G} )} \hfill \\ {x_{i,G} ,} \hfill &#x00026;\quad {otherwise} \hfill \\ \end{array} } \right.$$\end{document}</tex-math><mml:math id="M8" display="block"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfenced close="" open="{" separators=""><mml:mrow><mml:mtable columnspacing="0.5ex"><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>G</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="1em"/><mml:mrow><mml:mi>i</mml:mi><mml:mi>f</mml:mi><mml:mspace width="0.277778em"/><mml:mi>F</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>G</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>&#x02264;</mml:mo><mml:mi>F</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>G</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>G</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="1em"/><mml:mrow><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>h</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>w</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi><mml:mi>e</mml:mi></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:math><graphic xlink:href="40064_2016_2838_Article_Equ4.gif" position="anchor"/></alternatives></disp-formula>where <italic>F</italic>(<italic>x</italic>) is the fitness value of vector <italic>x</italic>.</p></sec></sec><sec id="Sec7"><title>CCDE</title><p>CCDE is a novel DE variant designed to be a global minimizer. Unlike the standard DE, CCDE can be explained by dividing its functions into four steps: initialization, selection-I, trial population generation, and selection-II. The trial population is generated by the crossover and covariance matrices. Algorithm 1 shows the general structure of CCDE.<graphic position="anchor" xlink:href="40064_2016_2838_Figa_HTML" id="MO5"/></p><p>The detailed description of CCDE is presented as follows.</p><sec id="Sec8"><title>Initialization</title><p>The initialization population <italic>P</italic><sub>0</sub> of CCDE is the same as those of other DEs using Eq.&#x000a0;(<xref rid="Equ1" ref-type="">1</xref>). Contrary to the other DE variants, <italic>M</italic> in CCDE is used to store the individuals of <italic>P</italic> with rearranged order. Moreover, <italic>M</italic> is used to control the search direction and thus enhance the capability of exploration. Given that <italic>P</italic><sub>0</sub> is definite, <italic>M</italic><sub>0</sub> is initialized by Eq.&#x000a0;(<xref rid="Equ5" ref-type="">5</xref>), as follows:<disp-formula id="Equ5"><label>5</label><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$M_{0} = \{ y_{i,0} = (y_{i,1,0} ,y_{i,2,0} ,y_{i,3,0} , \ldots ,y_{i,D,0} ),\quad i = 1,2,3, \ldots ,N\}$$\end{document}</tex-math><mml:math id="M10" display="block"><mml:mrow><mml:msub><mml:mi>M</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>&#x02026;</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>D</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mspace width="1em"/><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mo>&#x02026;</mml:mo><mml:mo>,</mml:mo><mml:mi>N</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><graphic xlink:href="40064_2016_2838_Article_Equ5.gif" position="anchor"/></alternatives></disp-formula></p></sec><sec id="Sec9"><title>Selection-I</title><p>The fitness values of initialized population <italic>P</italic><sub>0</sub> are calculated, and the best individual is stored.</p></sec><sec id="Sec10"><title>Generation of trial population</title><sec id="Sec11"><title>Generation of the crossover matrix</title><p>This step is the most important process in the CCDE. <italic>M</italic> is adjusted prior to the generation of the trial population to store the previous generation randomly using Eq.&#x000a0;(<xref rid="Equ6" ref-type="">6</xref>), as follows:<disp-formula id="Equ6"><label>6</label><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$M = \left\{ \begin{array}{ll} P, &#x00026;\quad if\,a &#x0003c; b \\ permuting(M), &#x00026;\quad otherwise \end{array} \right.$$\end{document}</tex-math><mml:math id="M12" display="block"><mml:mrow><mml:mi>M</mml:mi><mml:mo>=</mml:mo><mml:mfenced close="" open="{" separators=""><mml:mrow><mml:mtable columnspacing="0.5ex"><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mi>P</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="1em"/><mml:mi>i</mml:mi><mml:mi>f</mml:mi><mml:mspace width="0.166667em"/><mml:mi>a</mml:mi><mml:mo>&#x0003c;</mml:mo><mml:mi>b</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mi>p</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>m</mml:mi><mml:mi>u</mml:mi><mml:mi>t</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>g</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>M</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="1em"/><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>h</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>w</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi><mml:mi>e</mml:mi></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:math><graphic xlink:href="40064_2016_2838_Article_Equ6.gif" position="anchor"/></alternatives></disp-formula>where <italic>a</italic> and <italic>b</italic> are random numbers with uniform distribution in the range (0,1). <italic>Permuting</italic> is a function to change the order of individuals in <italic>M</italic> and thus improve its diversity. As a result, the population has a memory capability and is mainly used to improve the performance of exploration.</p><p>Then, the crossover matrix (<italic>Cr</italic>) is generated randomly instead of the crossover operator. This matrix is used to determine whether the individuals of <italic>P</italic> must be updated or not. <italic>Cr</italic><sub><italic>G</italic></sub> is composed of the integer 0 and 1, and initialized by <italic>Cr</italic><sub>0</sub>&#x000a0;=&#x000a0;0 before the iteration. When <italic>Cr</italic><sub><italic>i,j</italic></sub> (<italic>i</italic>&#x000a0;=&#x000a0;1, 2, 3, &#x02026;, <italic>N</italic>; <italic>j</italic>&#x000a0;=&#x000a0;1, 2, 3, &#x02026;, <italic>D</italic>) is equal to 0, <italic>x</italic><sub><italic>i,j,G</italic></sub> remains unchanged. Otherwise, <italic>x</italic><sub><italic>i,j,G</italic></sub> is updated and generated using Eq.&#x000a0;(<xref rid="Equ7" ref-type="">7</xref>), as follows:<disp-formula id="Equ7"><label>7</label><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left\{ \begin{array}{ll} Cr_{{i,u_{{(i:randi\{ D\} )}} } = 1|u = permuting\{ 1,2,3 \ldots ,D\} ,} &#x00026;\quad if\,rand_{a} &#x0003c; rand_{b} \\ Cr_{i,u} = 1|u = randi\{ D\} , &#x00026;\quad otherwise \end{array} \right.$$\end{document}</tex-math><mml:math id="M14" display="block"><mml:mfenced close="" open="{" separators=""><mml:mrow><mml:mtable columnspacing="0.5ex"><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mi>C</mml:mi><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>u</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>:</mml:mo><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:mi>d</mml:mi><mml:mi>i</mml:mi><mml:mo stretchy="false">{</mml:mo><mml:mi>D</mml:mi><mml:mo stretchy="false">}</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">|</mml:mo><mml:mi>u</mml:mi><mml:mo>=</mml:mo><mml:mi>p</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>m</mml:mi><mml:mi>u</mml:mi><mml:mi>t</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>g</mml:mi><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>&#x02026;</mml:mo><mml:mo>,</mml:mo><mml:mi>D</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="1em"/><mml:mi>i</mml:mi><mml:mi>f</mml:mi><mml:mspace width="0.166667em"/><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:msub><mml:mi>d</mml:mi><mml:mi>a</mml:mi></mml:msub><mml:mo>&#x0003c;</mml:mo><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:msub><mml:mi>d</mml:mi><mml:mi>b</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mi>C</mml:mi><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">|</mml:mo><mml:mi>u</mml:mi><mml:mo>=</mml:mo><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:mi>d</mml:mi><mml:mi>i</mml:mi><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mi>D</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="1em"/><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>h</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>w</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi><mml:mi>e</mml:mi></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:math><graphic xlink:href="40064_2016_2838_Article_Equ7.gif" position="anchor"/></alternatives></disp-formula>where <italic>rand</italic><sub><italic>a</italic></sub> and <italic>rand</italic><sub><italic>b</italic></sub> are random values selected from the uniform distribution in the range (0,1). <italic>randi</italic>{<italic>D</italic>} is a function to randomly generate the integer value from 1 to <italic>D</italic>. <italic>u</italic><sub>(<italic>i</italic>:<italic>randi</italic>{<italic>D</italic>})</sub> represents the vector elements chosen from the vector <italic>u</italic> from the order number <italic>i</italic> to <italic>randi</italic>{<italic>D</italic>}. The elements of <italic>u</italic> are generated by permuting function about the integer numbers {1, 2, 3, &#x02026; <italic>D</italic>}. In Eq.&#x000a0;(<xref rid="Equ7" ref-type="">7</xref>), when <italic>rand</italic><sub><italic>a</italic></sub> is less than <italic>rand</italic><sub><italic>b</italic></sub>, several vector elements of individual <italic>i</italic> is updated, while the others remain unchanged. Otherwise, only one vector element of individual <italic>i</italic> is changed.</p><p>The crossover matrix in this step is mainly used to balance the performance of the exploration and exploitation. The crossover matrix of CCDE is more complex and efficient without <italic>CR</italic> than the crossover operator of other DEs because the diversity of its population is firmly enhanced.</p></sec><sec id="Sec12"><title>Generation of covariance matrix</title><p>The best individual found during evolution is used as the leader to guide the search and thus improve the capability of exploitation. The newly generated individual must center the best individuals. The region around the best individual may be considered the potential region to find the next better individual. Therefore, this method is used to generate the covariance matrix. However, considering the avoidance of local optimum and based on the covariance matrix adaptation evolution strategy (CMA-ES) in Hansen and Ostermeier (<xref ref-type="bibr" rid="CR15">2001</xref>), covariance matrix learning in CoBiDE in Wang et al. (<xref ref-type="bibr" rid="CR27">2014</xref>), and differential covariance matrix adaptation EA in Ghosh et al. (<xref ref-type="bibr" rid="CR12">2012</xref>), a novel covariance matrix strategy is proposed by learning from the previous best individual and present population. With the use of this strategy, the covariance matrix inherits the information accumulated during evolution and learns new information from the present population. The covariance matrix is generated by Eq.&#x000a0;(<xref rid="Equ8" ref-type="">8</xref>), as follows:<disp-formula id="Equ8"><label>8</label><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Co_{G + 1} = rand \cdot Co_{G} + (1 - rand) \cdot \text{cov} (xbest_{1,G} ,xbest_{2,G} , \ldots ,xbest_{\lambda ,G} )$$\end{document}</tex-math><mml:math id="M16" display="block"><mml:mrow><mml:mi>C</mml:mi><mml:msub><mml:mi>o</mml:mi><mml:mrow><mml:mi>G</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:mi>d</mml:mi><mml:mo>&#x000b7;</mml:mo><mml:mi>C</mml:mi><mml:msub><mml:mi>o</mml:mi><mml:mi>G</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:mi>d</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>&#x000b7;</mml:mo><mml:mtext>cov</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mi>b</mml:mi><mml:mi>e</mml:mi><mml:mi>s</mml:mi><mml:msub><mml:mi>t</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>G</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>x</mml:mi><mml:mi>b</mml:mi><mml:mi>e</mml:mi><mml:mi>s</mml:mi><mml:msub><mml:mi>t</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mi>G</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>&#x02026;</mml:mo><mml:mo>,</mml:mo><mml:mi>x</mml:mi><mml:mi>b</mml:mi><mml:mi>e</mml:mi><mml:mi>s</mml:mi><mml:msub><mml:mi>t</mml:mi><mml:mrow><mml:mi mathvariant="italic">&#x003bb;</mml:mi><mml:mo>,</mml:mo><mml:mi>G</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><graphic xlink:href="40064_2016_2838_Article_Equ8.gif" position="anchor"/></alternatives></disp-formula>where cov(<italic>x</italic><sub><italic>best</italic>1,<italic>G</italic></sub>, <italic>x</italic><sub><italic>best</italic>2,<italic>G</italic></sub>, <italic>x</italic><sub><italic>best&#x003bb;</italic>,<italic>G</italic>,</sub>) calculates the covariance matrix of the <italic>&#x003bb;</italic> best individuals in the current generation and <inline-formula id="IEq1"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\lambda = \left\lfloor {N/4} \right\rfloor$$\end{document}</tex-math><mml:math id="M18"><mml:mrow><mml:mi mathvariant="italic">&#x003bb;</mml:mi><mml:mo>=</mml:mo><mml:mfenced close="&#x0230b;" open="&#x0230a;" separators=""><mml:mrow><mml:mi>N</mml:mi><mml:mo stretchy="false">/</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="40064_2016_2838_Article_IEq1.gif"/></alternatives></inline-formula>. The covariance matrix, as indicated by CMA-ES and CoBiDE, is used to guide the generation of trial population and fully utilizes the information of the individuals to improve the convergence speed. However, contrary to CMA-ES and CoBiDE, the information of the <italic>&#x003bb;</italic> best individuals is considered in the covariance matrix of CCDE.</p></sec><sec id="Sec13"><title>Generation of trial population</title><p>The trial population is generated in this step. The covariance matrix is used as a guide to search the region around the best individual by Gaussian distribution and thus improve the exploitation. The exploration is enhanced using the form of &#x0201c;DE/rand/1&#x0201d; with the improved search direction confirmed by memory and target populations. As a result, we choose one of the two strategies randomly to balance the exploration and exploitation, which can be formulated as follows:<disp-formula id="Equ9"><label>9</label><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$V_{G + 1} = \left\{ {\begin{array}{ll} {P_{G} + Cr_{G} \cdot F \cdot (P_{G} - M_{G} ),} \hfill &#x00026; {if\;rand_{a} &#x0003c; rand_{b} } \hfill \\ {X_{best,G} + r \cdot {\text{N}}(0,Co_{G} ),} \hfill &#x00026; {otherwise} \hfill \\ \end{array} } \right.$$\end{document}</tex-math><mml:math id="M20" display="block"><mml:mrow><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mi>G</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfenced close="" open="{" separators=""><mml:mrow><mml:mtable columnspacing="0.5ex"><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mi>P</mml:mi><mml:mi>G</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mi>C</mml:mi><mml:msub><mml:mi>r</mml:mi><mml:mi>G</mml:mi></mml:msub><mml:mo>&#x000b7;</mml:mo><mml:mi>F</mml:mi><mml:mo>&#x000b7;</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mi>G</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>M</mml:mi><mml:mi>G</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mi>i</mml:mi><mml:mi>f</mml:mi><mml:mspace width="0.277778em"/><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:msub><mml:mi>d</mml:mi><mml:mi>a</mml:mi></mml:msub><mml:mo>&#x0003c;</mml:mo><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:msub><mml:mi>d</mml:mi><mml:mi>b</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>b</mml:mi><mml:mi>e</mml:mi><mml:mi>s</mml:mi><mml:mi>t</mml:mi><mml:mo>,</mml:mo><mml:mi>G</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mi>r</mml:mi><mml:mo>&#x000b7;</mml:mo><mml:mtext>N</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mi>C</mml:mi><mml:msub><mml:mi>o</mml:mi><mml:mi>G</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>h</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>w</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi><mml:mi>e</mml:mi></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:math><graphic xlink:href="40064_2016_2838_Article_Equ9.gif" position="anchor"/></alternatives></disp-formula>where <italic>M</italic><sub><italic>G</italic></sub> is a memory population and <italic>P</italic><sub arrange="stack"><italic>G</italic></sub><sup arrange="stack"><italic>&#x02019;</italic></sup> is a random-ordered individual of population <italic>P</italic><sub><italic>G</italic></sub>. <italic>F</italic> is the scale control parameter of DE as illustrated by Eq.&#x000a0;(<xref rid="Equ2" ref-type="">2</xref>). <italic>F</italic>&#x000a0;=&#x000a0;<italic>R</italic> [<italic>R</italic>&#x02013;C(1, 0.1), where C(1, 0.1) is the Cauchy distribution with local parameter 1 and scale parameter 0.1] (Wang, Lib, and Huang <xref ref-type="bibr" rid="CR27">2014</xref>). <italic>X</italic><sub><italic>best,G</italic></sub> is the current best population consisting of the current best individual. N(0, <italic>Co</italic><sub><italic>G</italic></sub>) is the Gaussian distribution with mean value 0 and variance value <italic>Co</italic><sub><italic>G</italic></sub>. <inline-formula id="IEq2"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$r = rand_{1} \left( {1 - rand_{2}^{{\left( {1 - \frac{G}{Maxgen}} \right)^{0.7} }} } \right)$$\end{document}</tex-math><mml:math id="M22"><mml:mrow><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:msub><mml:mi>d</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:msubsup><mml:mi>d</mml:mi><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:msup><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mfrac><mml:mi>G</mml:mi><mml:mrow><mml:mi>M</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi><mml:mi>g</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:mfenced><mml:mrow><mml:mn>0.7</mml:mn></mml:mrow></mml:msup></mml:msubsup></mml:mrow></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="40064_2016_2838_Article_IEq2.gif"/></alternatives></inline-formula> is the adaptive step size, which is similar to that in simulated annealing algorithm (Edmonds <xref ref-type="bibr" rid="CR8">1971</xref>). This step size gradually decreases the search range, and <italic>rand</italic> is a random value in [0, 1].</p><p>From Eq.&#x000a0;(<xref rid="Equ9" ref-type="">9</xref>), the search range around the current best individual narrowed with <italic>r</italic> tends to 0 and <italic>G</italic> tends to <italic>Maxgen</italic> to exploit the individual. Meanwhile, falling into local optimum is avoided via the improved mutation operator based on the crossover matrix using a random selection strategy as indicated by Eq.&#x000a0;(<xref rid="Equ9" ref-type="">9</xref>). Figure&#x000a0;<xref rid="Fig1" ref-type="fig">1</xref> illustrates the generation of the trial vector defined by Eq.&#x000a0;(<xref rid="Equ9" ref-type="">9</xref>).<fig id="Fig1"><label>Fig.&#x000a0;1</label><caption><p>Two dimensional example of an objective function showing its contour lines and the process for generating trial vector in scheme Eq.&#x000a0;(<xref rid="Equ9" ref-type="">9</xref>)</p></caption><graphic xlink:href="40064_2016_2838_Fig1_HTML" id="MO11"/></fig></p><p>If the <italic>kth</italic> component <italic>v</italic><sub><italic>i</italic>,<italic>k</italic>,<italic>G</italic>+1</sub> of <italic>v</italic><sub><italic>i</italic>,k,<italic>G</italic>+1</sub> is out of the allowed search space, then it is regenerated by Eq.&#x000a0;(<xref rid="Equ10" ref-type="">10</xref>), as follows:<disp-formula id="Equ10"><label>10</label><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v_{i,k,G + 1} = \left\{ \begin{array}{ll} {up + 0.5 \cdot rand \cdot (v_{i,k,G + 1} - up)}, \hfill &#x00026;\quad {if\;v_{i,k,G + 1} &#x0003e; up} \\ {low + 0.5 \cdot rand \cdot (low - v_{i,k,G + 1} ),} &#x00026;\quad {if\;v_{i,k,G + 1} &#x0003c; low} \\ \end{array} \right.$$\end{document}</tex-math><mml:math id="M24" display="block"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfenced close="" open="{" separators=""><mml:mrow><mml:mtable columnspacing="0.5ex"><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow><mml:mi>u</mml:mi><mml:mi>p</mml:mi><mml:mo>+</mml:mo><mml:mn>0.5</mml:mn><mml:mo>&#x000b7;</mml:mo><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:mi>d</mml:mi><mml:mo>&#x000b7;</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:mi>u</mml:mi><mml:mi>p</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="1em"/><mml:mrow><mml:mi>i</mml:mi><mml:mi>f</mml:mi><mml:mspace width="0.277778em"/><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>&#x0003e;</mml:mo><mml:mi>u</mml:mi><mml:mi>p</mml:mi></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mrow><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>0.5</mml:mn><mml:mo>&#x000b7;</mml:mo><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>n</mml:mi><mml:mi>d</mml:mi><mml:mo>&#x000b7;</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>w</mml:mi><mml:mo>-</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="1em"/><mml:mrow><mml:mi>i</mml:mi><mml:mi>f</mml:mi><mml:mspace width="0.277778em"/><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>&#x0003c;</mml:mo><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>w</mml:mi></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:math><graphic xlink:href="40064_2016_2838_Article_Equ10.gif" position="anchor"/></alternatives></disp-formula>where <italic>low</italic> and <italic>up</italic> are the boundaries of the search space.</p></sec></sec><sec id="Sec14"><title>Pseudo code for CCDE</title><p>The pseudo code can be presented in Algorithm 2 according to the description of CCDE in the previous subsections.<graphic position="anchor" xlink:href="40064_2016_2838_Figb_HTML" id="MO13"/></p><p>CCDE has a very simple structure as indicated by Algorithm 2. Combining the crossover matrix, covariance matrix, and <italic>M</italic> can achieve a good tradeoff between exploration and exploitation.</p></sec></sec><sec id="Sec15"><title>Experimental study</title><p>We analyze the performance of our CCDE by conducting a set of experiments as well as a statistical analysis of the experimental results. We use MALLBA 2013a to develop the CCDE algorithm. Non-parametric statistical tests are used in the experimental comparisons because numerical distributions of results sometimes do not follow the conditions of normality and homoscedasticity (Garc&#x000ed;a et al. <xref ref-type="bibr" rid="CR11">2009</xref>). Therefore, our analyses are mainly focused on the mean errors of 30 or 51 independent runs. Statistical tests are accomplished using the KEEL software, including multi-problem Wilcoxon&#x02019;s test and Friedman&#x02019;s test (Alcal&#x000e1; et al. <xref ref-type="bibr" rid="CR1">2009</xref>).</p><p>We also conduct a series of comparisons with the canonical versions of DE as well as five algorithms from CEC 2014 to clarify the competitiveness of CCDE. All experiments are performed on a computer with 2.9&#x000a0;GHz Intel(R) Core(TM) i5-2310 processor and 4.0&#x000a0;GB of RAM in Windows XP. The set of benchmarks and the parameter settings are described in detail.</p><sec id="Sec16"><title>Benchmark functions</title><p>A total of 30 benchmark functions developed for IEEE CEC 2014 (Liang et al. <xref ref-type="bibr" rid="CR16">2013</xref>) are used, as well as 5 real-world engineering optimization problems selected from IEEE CEC 2011 (Das and Suganthan <xref ref-type="bibr" rid="CR4">2010</xref>). The 30 benchmarks are first presented and then the 5 real-world engineering optimization problems are expressed in the following section. The 30 benchmarks can be divided into 4 classes:<list list-type="order"><list-item><p>Unimodal Functions: F1&#x02013;F3;</p></list-item><list-item><p>Multimodal Functions: F4&#x02013;F16;</p></list-item><list-item><p>Hybrid Function: F17&#x02013;F22; and</p></list-item><list-item><p>Composition Functions: F23&#x02013;F30.</p></list-item></list></p><p>Each function of the above test functions has shift data. F8 and F10 are separable functions, while the rest are non-separable. Some test functions are rotated using different rotation matrices to determine the correlation among variables. The global optima of some test functions are shifted to avoid being at the center of the search space. Contrary to other test functions in previous IEEE CEC, the rotation matrix for each subcomponent is generated from standard normally distributed entries by Gram&#x02013;Schmidt orthonormalization. The variables in the hybrid functions are randomly divided into subcomponents, and then different basic functions are used for different subcomponents. A local optimum with the smallest bias value is the global optimum in the composition functions, and is set to the origin as a trap for each composition function included in this benchmark suite. Table&#x000a0;<xref rid="Tab1" ref-type="table">1</xref> shows the set of the 30 test functions, which are described in detail in Liang et al. (<xref ref-type="bibr" rid="CR16">2013</xref>).<table-wrap id="Tab1"><label>Table&#x000a0;1</label><caption><p>IEEE CEC2014 functions with functions&#x02019; features: unimodal (U), multimodal (M), separable (Sep.) and non-separable, rotated (Rot.) and non-rotated, asymmetrical (Asy.) and symmetrical</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Function</th><th align="left">Name</th><th align="left">U/M</th><th align="left">Asy.</th><th align="left">Sep.</th><th align="left">Optimal</th></tr></thead><tbody><tr><td align="left">F1</td><td align="left">Rot. high conditioned elliptic function</td><td align="left">U</td><td align="left">N</td><td align="left">N</td><td char="." align="char">100</td></tr><tr><td align="left">F2</td><td align="left">Rot. bent cigar function</td><td align="left">U</td><td align="left">N</td><td align="left">N</td><td char="." align="char">200</td></tr><tr><td align="left">F3</td><td align="left">Rot. discus function</td><td align="left">U</td><td align="left">N</td><td align="left">N</td><td char="." align="char">300</td></tr><tr><td align="left">F4</td><td align="left">Shif. Rot. Rosenbrock&#x02019;s function</td><td align="left">M</td><td align="left">N</td><td align="left">N</td><td char="." align="char">400</td></tr><tr><td align="left">F5</td><td align="left">Shif. Rot. Ackley&#x02019;s function</td><td align="left">M</td><td align="left">N</td><td align="left">N</td><td char="." align="char">500</td></tr><tr><td align="left">F6</td><td align="left">Shif. Rot. Weierstrass function</td><td align="left">M</td><td align="left">N</td><td align="left">N</td><td char="." align="char">600</td></tr><tr><td align="left">F7</td><td align="left">Shif. Rot. Griewank&#x02019;s function</td><td align="left">M</td><td align="left">N</td><td align="left">N</td><td char="." align="char">700</td></tr><tr><td align="left">F8</td><td align="left">Shif. Rastrigin&#x02019;s function</td><td align="left">M</td><td align="left">N</td><td align="left">S</td><td char="." align="char">800</td></tr><tr><td align="left">F9</td><td align="left">Shif. Rot. Rastrigin&#x02019;s function</td><td align="left">M</td><td align="left">N</td><td align="left">N</td><td char="." align="char">900</td></tr><tr><td align="left">F10</td><td align="left">Shif. Schwefel&#x02019;s function</td><td align="left">M</td><td align="left">N</td><td align="left">S</td><td char="." align="char">1000</td></tr><tr><td align="left">F11</td><td align="left">Shif. Rot. Schwefel&#x02019;s function</td><td align="left">M</td><td align="left">N</td><td align="left">N</td><td char="." align="char">1100</td></tr><tr><td align="left">F12</td><td align="left">Shif. Rot. Katsuura function</td><td align="left">M</td><td align="left">N</td><td align="left">N</td><td char="." align="char">1200</td></tr><tr><td align="left">F13</td><td align="left">Shif. Rot. HappyCat function</td><td align="left">M</td><td align="left">N</td><td align="left">N</td><td char="." align="char">1300</td></tr><tr><td align="left">F14</td><td align="left">Shif. Rot. HGBat function</td><td align="left">M</td><td align="left">N</td><td align="left">N</td><td char="." align="char">1400</td></tr><tr><td align="left">F15</td><td align="left">Shif. Rot. Exp. Griewank&#x02019;s&#x000a0;+&#x000a0;Rosenbrock&#x02019;s function</td><td align="left">M</td><td align="left">N</td><td align="left">N</td><td char="." align="char">1500</td></tr><tr><td align="left">F16</td><td align="left">Shif. Rot. Exp. Scaffer&#x02019;s F6 function</td><td align="left">M</td><td align="left">N</td><td align="left">N</td><td char="." align="char">1600</td></tr><tr><td align="left">F17</td><td align="left">Hybrid function 1 (N&#x000a0;=&#x000a0;3)</td><td align="left">M</td><td align="left">N</td><td align="left">N</td><td char="." align="char">1700</td></tr><tr><td align="left">F18</td><td align="left">Hybrid function 2 (N&#x000a0;=&#x000a0;3)</td><td align="left">M</td><td align="left">N</td><td align="left">N</td><td char="." align="char">1800</td></tr><tr><td align="left">F19</td><td align="left">Hybrid function 3 (N&#x000a0;=&#x000a0;4)</td><td align="left">M</td><td align="left">N</td><td align="left">N</td><td char="." align="char">1900</td></tr><tr><td align="left">F20</td><td align="left">Hybrid function 4 (N&#x000a0;=&#x000a0;4)</td><td align="left">M</td><td align="left">N</td><td align="left">N</td><td char="." align="char">2000</td></tr><tr><td align="left">F21</td><td align="left">Hybrid function 5 (N&#x000a0;=&#x000a0;5)</td><td align="left">M</td><td align="left">N</td><td align="left">N</td><td char="." align="char">2100</td></tr><tr><td align="left">F22</td><td align="left">Hybrid function 6 (N&#x000a0;=&#x000a0;5)</td><td align="left">M</td><td align="left">N</td><td align="left">N</td><td char="." align="char">2200</td></tr><tr><td align="left">F23</td><td align="left">Composition function 1 (N&#x000a0;=&#x000a0;5)</td><td align="left">M</td><td align="left">A</td><td align="left">N</td><td char="." align="char">2300</td></tr><tr><td align="left">F24</td><td align="left">Composition function 2 (N&#x000a0;=&#x000a0;3)</td><td align="left">M</td><td align="left">N</td><td align="left">N</td><td char="." align="char">2400</td></tr><tr><td align="left">F25</td><td align="left">Composition function 3 (N&#x000a0;=&#x000a0;3)</td><td align="left">M</td><td align="left">A</td><td align="left">N</td><td char="." align="char">2500</td></tr><tr><td align="left">F26</td><td align="left">Composition function 4 (N&#x000a0;=&#x000a0;5)</td><td align="left">M</td><td align="left">A</td><td align="left">N</td><td char="." align="char">2600</td></tr><tr><td align="left">F27</td><td align="left">Composition Function 5 (N&#x000a0;=&#x000a0;5)</td><td align="left">M</td><td align="left">A</td><td align="left">N</td><td char="." align="char">2700</td></tr><tr><td align="left">F28</td><td align="left">Composition Function 6 (N&#x000a0;=&#x000a0;5)</td><td align="left">M</td><td align="left">A</td><td align="left">N</td><td char="." align="char">2800</td></tr><tr><td align="left">F29</td><td align="left">Composition Function 7 (N&#x000a0;=&#x000a0;3)</td><td align="left">M</td><td align="left">A</td><td align="left">N</td><td char="." align="char">2900</td></tr><tr><td align="left">F30</td><td align="left">Composition function 8 (N&#x000a0;=&#x000a0;3)</td><td align="left">M</td><td align="left">A</td><td align="left">N</td><td char="." align="char">3000</td></tr><tr><td align="left"/><td align="left">Search range: [&#x02212;100, 100]</td><td align="left" colspan="3">Dimension: <italic>Dim</italic>&#x000a0;=&#x000a0;10 and 30</td><td align="left"/></tr></tbody></table><table-wrap-foot><p>Optimal stands for global optimal value</p></table-wrap-foot></table-wrap></p><p>In this section, the mean errors and standard deviations of the function error value [<italic>f</italic>(<italic>x</italic>)&#x000a0;&#x02212;&#x000a0;<italic>f</italic>(<italic>x</italic>&#x02032;)] are calculated over 30 or 51 independent runs for each test function; <italic>x</italic> is the best solution in the population when the algorithm terminates, and <italic>x</italic>&#x02032; is the global optimal value. Multi-problem Wilcoxon&#x02019;s test and Friedman&#x02019;s test at a 0.05 significance level are performed to test the statistical significance of the experimental results among the compared algorithms. The parameter <italic>N</italic> in this section is set to 100.</p></sec><sec id="Sec17"><title>Comparison with other DEs</title><p>CCDE is compared with four other DE variants, namely, JADE (Zhang and Sanderson <xref ref-type="bibr" rid="CR32">2009</xref>), SaDE (Qin et al. <xref ref-type="bibr" rid="CR21">2009</xref>), EPSDE (Mallipeddi et al. <xref ref-type="bibr" rid="CR18">2011</xref>), and CoBiDE (Wang et al. <xref ref-type="bibr" rid="CR27">2014</xref>). The covariance matrix used in CoBiDE is also based on CMA-ES, and its performance is superior to that of CMA-ES (Wang et al. <xref ref-type="bibr" rid="CR27">2014</xref>). Thus, we only choose the CoBiDE, instead of CMA-ES, as the competitor for comparison. The parameter settings for the four algorithms are the same as those in the original papers. JADE adopts self-adaptive parameter setting with <italic>F</italic><sub><italic>initial</italic></sub>&#x000a0;=&#x000a0;0.5 and <italic>CR</italic><sub><italic>initial</italic></sub>&#x000a0;=&#x000a0;0.9. SaDE uses the normal distribution <italic>N</italic> (0.5, 0.3) to produce <italic>F</italic> and the normal distribution <italic>N</italic> (<italic>CR</italic><sub><italic>m</italic></sub>, 0.1) to adjust <italic>CR</italic> self-adaptively. EPSDE sets <italic>F</italic>&#x000a0;=&#x000a0;0.9 and <italic>CR</italic>&#x000a0;=&#x000a0;0.1. CoBiDE sets <italic>pb</italic>&#x000a0;=&#x000a0;0.4 and <italic>ps</italic>&#x000a0;=&#x000a0;0.5. In this experiment, <italic>D</italic> of the 30 test functions is set to 10, and each test function independently runs 30 times with 300,000 function evaluations (<italic>FEs</italic>) and error value <italic>Error</italic>&#x000a0;=&#x000a0;10<sup>&#x02212;8</sup> as the termination criterion.</p><p>The experimental results of CCDE and four other algorithms are summarized in Table&#x000a0;<xref rid="Tab2" ref-type="table">2</xref>.&#x000a0;The portions in italic in Table <xref rid="Tab2" ref-type="table">2</xref> represent the best results among the algorithms in terms of the optimization of the test functions. CCDE, JADE, SaDE, and CoBiDE exhibit the best performance on the three unimodal functions F1&#x02013;F3. However, the performance of EPSDE on the three functions is not better than those of the four other algorithms. For the simple multimodal functions F4&#x02013;F16, CCDE exhibits the best performance on F4&#x02013;F9 and F11&#x02013;F14 compared with the four other algorithms. In particular, CCDE can reach the global best value on F4 and F6&#x02013;F8. CoBiDE shows the best performance on F10 and F15 among all algorithms. EPSDE outperforms the four other algorithms in F16. The outstanding performance of CCDE can be attributed to its proposed strategies that can balance exploration and exploitation. The five algorithms cannot find the global best values for the hybrid functions F17&#x02013;F22. However, Table&#x000a0;<xref rid="Tab2" ref-type="table">2</xref> shows that the performance of CCDE outperforms the other algorithms on the majority of the test functions, except F18 in which CoBiDE performs better than CCDE. The results of the five algorithms for the composition functions F23&#x02013;F30, which are the most difficult test functions among the 30 benchmarks, are far from the global optima. Table&#x000a0;<xref rid="Tab2" ref-type="table">2</xref> shows that CCDE is statistically better than the other algorithms on F23&#x02013;F26 and F28&#x02013;F30. CoBiDE exhibits the best performance on F27.<table-wrap id="Tab2"><label>Table&#x000a0;2</label><caption><p>Mean and SD obtained by JADE, SaDE, EPSDE, CoBiDE and CCDE through 30 independent runs on 30 test functions in 10 dimension with 300,000 <italic>FEs</italic>
</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Function</th><th align="left">JADE mean&#x000a0;&#x000b1;&#x000a0;SD</th><th align="left">SaDE mean&#x000a0;&#x000b1;&#x000a0;SD</th><th align="left">EPSDE mean&#x000a0;&#x000b1;&#x000a0;SD</th><th align="left">CoBiDE mean&#x000a0;&#x000b1;&#x000a0;SD</th><th align="left">CCDE mean&#x000a0;&#x000b1;&#x000a0;SD</th></tr></thead><tbody><tr><td align="left">
<italic>Unimodal functions</italic>
</td><td align="left"/><td align="left"/><td align="left"/><td align="left"/><td align="left"/></tr><tr><td align="left">F1</td><td char="&#x000b1;" align="char">
<italic>0.00E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td><td char="&#x000b1;" align="char">
<italic>0.00E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td><td char="&#x000b1;" align="char">1.57E+04&#x000a0;&#x000b1;&#x000a0;3.88E+04</td><td char="&#x000b1;" align="char">
<italic>0.00E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td><td char="&#x000b1;" align="char">
<italic>0.00E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td></tr><tr><td align="left">F2</td><td char="&#x000b1;" align="char">
<italic>0.00E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td><td char="&#x000b1;" align="char">
<italic>0.00E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td><td char="&#x000b1;" align="char">2.22E+03&#x000a0;&#x000b1;&#x000a0;3.24E+03</td><td char="&#x000b1;" align="char">
<italic>0.00E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td><td char="&#x000b1;" align="char">
<italic>0.00E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td></tr><tr><td align="left">F3</td><td char="&#x000b1;" align="char">
<italic>0.00E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td><td char="&#x000b1;" align="char">
<italic>0.00E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td><td char="&#x000b1;" align="char">7.65E&#x02212;04&#x000a0;&#x000b1;&#x000a0;2.30E&#x02212;03</td><td char="&#x000b1;" align="char">
<italic>0.00E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td><td char="&#x000b1;" align="char">
<italic>0.00E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td></tr><tr><td align="left">
<italic>Multimodal functions</italic>
</td><td align="left"/><td align="left"/><td align="left"/><td align="left"/><td align="left"/></tr><tr><td align="left">F4</td><td char="&#x000b1;" align="char">1.01E+00&#x000a0;&#x000b1;&#x000a0;1.87E+00</td><td char="&#x000b1;" align="char">1.69E+01&#x000a0;&#x000b1;&#x000a0;1.71E+01</td><td char="&#x000b1;" align="char">2.64E+01&#x000a0;&#x000b1;&#x000a0;1.42E+01</td><td char="&#x000b1;" align="char">3.13E+01&#x000a0;&#x000b1;&#x000a0;1.06E+01</td><td char="&#x000b1;" align="char">
<italic>0.00E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td></tr><tr><td align="left">F5</td><td char="&#x000b1;" align="char">2.01E+02&#x000a0;&#x000b1;&#x000a0;5.60E&#x02212;03</td><td char="&#x000b1;" align="char">2.03E+01&#x000a0;&#x000b1;&#x000a0;9.91E&#x02212;02</td><td char="&#x000b1;" align="char">1.99E+01&#x000a0;&#x000b1;&#x000a0;9.07E&#x02212;01</td><td char="&#x000b1;" align="char">1.95E+01&#x000a0;&#x000b1;&#x000a0;2.25E+00</td><td char="&#x000b1;" align="char">
<italic>1.91E+01</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>3.88E+00</italic>
</td></tr><tr><td align="left">F6</td><td char="&#x000b1;" align="char">3.02E&#x02212;02&#x000a0;&#x000b1;&#x000a0;1.65E+00</td><td char="&#x000b1;" align="char">3.76E+01&#x000a0;&#x000b1;&#x000a0;1.55E+00</td><td char="&#x000b1;" align="char">9.85E&#x02212;01&#x000a0;&#x000b1;&#x000a0;7.78E&#x02212;01</td><td char="&#x000b1;" align="char">1.31E&#x02212;01&#x000a0;&#x000b1;&#x000a0;3.30E&#x02212;01</td><td char="&#x000b1;" align="char">
<italic>0.00E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td></tr><tr><td align="left">F7</td><td char="&#x000b1;" align="char">3.73E&#x02212;02&#x000a0;&#x000b1;&#x000a0;3.83E&#x02212;02</td><td char="&#x000b1;" align="char">2.11E&#x02212;01&#x000a0;&#x000b1;&#x000a0;1.57E&#x02212;01</td><td char="&#x000b1;" align="char">1.47E&#x02212;01&#x000a0;&#x000b1;&#x000a0;1.19E&#x02212;01</td><td char="&#x000b1;" align="char">3.20E&#x02212;03&#x000a0;&#x000b1;&#x000a0;4.00E&#x02212;03</td><td char="&#x000b1;" align="char">
<italic>0.00E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td></tr><tr><td align="left">F8</td><td char="&#x000b1;" align="char">7.01E&#x02212;01&#x000a0;&#x000b1;&#x000a0;9.48E&#x02212;01</td><td char="&#x000b1;" align="char">1.58E+01&#x000a0;&#x000b1;&#x000a0;5.93E+00</td><td char="&#x000b1;" align="char">7.24E+00&#x000a0;&#x000b1;&#x000a0;3.64E+00</td><td char="&#x000b1;" align="char">
<italic>0.00E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td><td char="&#x000b1;" align="char">
<italic>0.00E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td></tr><tr><td align="left">F9</td><td char="&#x000b1;" align="char">8.46E+00&#x000a0;&#x000b1;&#x000a0;3.79E+00</td><td char="&#x000b1;" align="char">
<italic>2.04E+01</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>6.50E+00</italic>
</td><td char="&#x000b1;" align="char">7.22E+00&#x000a0;&#x000b1;&#x000a0;3.79E+00</td><td char="&#x000b1;" align="char">3.47E+00&#x000a0;&#x000b1;&#x000a0;1.03E+00</td><td char="&#x000b1;" align="char">2.49E+00&#x000a0;&#x000b1;&#x000a0;1.92E+00</td></tr><tr><td align="left">F10</td><td char="&#x000b1;" align="char">6.21E+01&#x000a0;&#x000b1;&#x000a0;6.82E+01</td><td char="&#x000b1;" align="char">3.09E+02&#x000a0;&#x000b1;&#x000a0;2.02E+02</td><td char="&#x000b1;" align="char">1.67E+02&#x000a0;&#x000b1;&#x000a0;1.13E+02</td><td char="&#x000b1;" align="char">
<italic>1.52E&#x02212;01</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>7.16E&#x02212;02</italic>
</td><td char="&#x000b1;" align="char">7.29E+00&#x000a0;&#x000b1;&#x000a0;1.25E+00</td></tr><tr><td align="left">F11</td><td char="&#x000b1;" align="char">2.93E+02&#x000a0;&#x000b1;&#x000a0;1.86E+02</td><td char="&#x000b1;" align="char">6.71E+02&#x000a0;&#x000b1;&#x000a0;3.37E+02</td><td char="&#x000b1;" align="char">2.08E+02&#x000a0;&#x000b1;&#x000a0;1.61E+02</td><td char="&#x000b1;" align="char">1.91E+02&#x000a0;&#x000b1;&#x000a0;9.64E+01</td><td char="&#x000b1;" align="char">
<italic>1.73E+02</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>1.51E+02</italic>
</td></tr><tr><td align="left">F12</td><td char="&#x000b1;" align="char">2.17E&#x02212;01&#x000a0;&#x000b1;&#x000a0;1.36E&#x02212;01</td><td char="&#x000b1;" align="char">7.19E&#x02212;01&#x000a0;&#x000b1;&#x000a0;3.48E&#x02212;01</td><td char="&#x000b1;" align="char">2.78E&#x02212;01&#x000a0;&#x000b1;&#x000a0;6.29E&#x02212;02</td><td char="&#x000b1;" align="char">1.31E&#x02212;01&#x000a0;&#x000b1;&#x000a0;3.91E&#x02212;02</td><td char="&#x000b1;" align="char">
<italic>1.50E&#x02212;03</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>5.90E&#x02212;03</italic>
</td></tr><tr><td align="left">F13</td><td char="&#x000b1;" align="char">1.33E&#x02212;01&#x000a0;&#x000b1;&#x000a0;2.81E&#x02212;02</td><td char="&#x000b1;" align="char">3.67E&#x02212;01&#x000a0;&#x000b1;&#x000a0;1.94E&#x02212;01</td><td char="&#x000b1;" align="char">1.14E&#x02212;01&#x000a0;&#x000b1;&#x000a0;3.88E&#x02212;02</td><td char="&#x000b1;" align="char">5.92E&#x02212;02&#x000a0;&#x000b1;&#x000a0;1.60E&#x02212;02</td><td char="&#x000b1;" align="char">
<italic>8.91E&#x02212;03</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>7.13E&#x02212;03</italic>
</td></tr><tr><td align="left">F14</td><td char="&#x000b1;" align="char">1.26E&#x02212;01&#x000a0;&#x000b1;&#x000a0;4.70E&#x02212;02</td><td char="&#x000b1;" align="char">3.49E&#x02212;01&#x000a0;&#x000b1;&#x000a0;2.02E&#x02212;01</td><td char="&#x000b1;" align="char">2.84E&#x02212;01&#x000a0;&#x000b1;&#x000a0;1.29E&#x02212;01</td><td char="&#x000b1;" align="char">9.18E&#x02212;02&#x000a0;&#x000b1;&#x000a0;3.22E&#x02212;02</td><td char="&#x000b1;" align="char">
<italic>7.91E&#x02212;02</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>2.83E&#x02212;02</italic>
</td></tr><tr><td align="left">F15</td><td char="&#x000b1;" align="char">9.79E&#x02212;01&#x000a0;&#x000b1;&#x000a0;3.29E&#x02212;01</td><td char="&#x000b1;" align="char">1.48E+00&#x000a0;&#x000b1;&#x000a0;8.25E&#x02212;01</td><td char="&#x000b1;" align="char">7.28E&#x02212;01&#x000a0;&#x000b1;&#x000a0;2.76E&#x02212;01</td><td char="&#x000b1;" align="char">
<italic>6.15E&#x02212;01</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>9.45E&#x02212;02</italic>
</td><td char="&#x000b1;" align="char">6.69E&#x02212;01&#x000a0;&#x000b1;&#x000a0;1.82E&#x02212;01</td></tr><tr><td align="left">F16</td><td char="&#x000b1;" align="char">2.31E+00&#x000a0;&#x000b1;&#x000a0;4.25E&#x02212;01</td><td char="&#x000b1;" align="char">3.25E+01&#x000a0;&#x000b1;&#x000a0;2.38E&#x02212;01</td><td char="&#x000b1;" align="char">
<italic>1.52E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>5.31E&#x02212;01</italic>
</td><td char="&#x000b1;" align="char">2.02E+00&#x000a0;&#x000b1;&#x000a0;2.67E&#x02212;01</td><td char="&#x000b1;" align="char">1.62E+01&#x000a0;&#x000b1;&#x000a0;6.23E&#x02212;01</td></tr><tr><td align="left">
<italic>Hybrid function</italic>
</td><td align="left"/><td align="left"/><td align="left"/><td align="left"/><td align="left"/></tr><tr><td align="left">F17</td><td char="&#x000b1;" align="char">5.19E+01&#x000a0;&#x000b1;&#x000a0;6.23E+01</td><td char="&#x000b1;" align="char">2.96E+02&#x000a0;&#x000b1;&#x000a0;1.79E+02</td><td char="&#x000b1;" align="char">2.48E+02&#x000a0;&#x000b1;&#x000a0;1.76E+02</td><td char="&#x000b1;" align="char">1.04E+01&#x000a0;&#x000b1;&#x000a0;5.86E+00</td><td char="&#x000b1;" align="char">
<italic>1.58E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>2.57E+00</italic>
</td></tr><tr><td align="left">F18</td><td char="&#x000b1;" align="char">1.96E+01&#x000a0;&#x000b1;&#x000a0;8.62E&#x02212;01</td><td char="&#x000b1;" align="char">2.36E+01&#x000a0;&#x000b1;&#x000a0;1.74E+01</td><td char="&#x000b1;" align="char">2.51E+01&#x000a0;&#x000b1;&#x000a0;2.13E+01</td><td char="&#x000b1;" align="char">
<italic>2.37E&#x02212;01</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>2.08E&#x02212;01</italic>
</td><td char="&#x000b1;" align="char">7.63E&#x02212;01&#x000a0;&#x000b1;&#x000a0;8.13E&#x02212;01</td></tr><tr><td align="left">F19</td><td char="&#x000b1;" align="char">9.48E&#x02212;01&#x000a0;&#x000b1;&#x000a0;3.38E&#x02212;01</td><td char="&#x000b1;" align="char">2.75E+00&#x000a0;&#x000b1;&#x000a0;1.73E+00</td><td char="&#x000b1;" align="char">1.97E+00&#x000a0;&#x000b1;&#x000a0;1.18E+00</td><td char="&#x000b1;" align="char">2.61E&#x02212;01&#x000a0;&#x000b1;&#x000a0;1.18E&#x02212;01</td><td char="&#x000b1;" align="char">
<italic>2.32E&#x02212;01</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>3.51E&#x02212;01</italic>
</td></tr><tr><td align="left">F20</td><td char="&#x000b1;" align="char">6.78E&#x02212;01&#x000a0;&#x000b1;&#x000a0;5.25E&#x02212;01</td><td char="&#x000b1;" align="char">1.66E+01&#x000a0;&#x000b1;&#x000a0;1.13E+01</td><td char="&#x000b1;" align="char">1.39E+01&#x000a0;&#x000b1;&#x000a0;1.29E+01</td><td char="&#x000b1;" align="char">4.26E&#x02212;01&#x000a0;&#x000b1;&#x000a0;1.64E&#x02212;01</td><td char="&#x000b1;" align="char">
<italic>3.62E&#x02212;01</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>4.69E&#x02212;01</italic>
</td></tr><tr><td align="left">F21</td><td char="&#x000b1;" align="char">1.33E+00&#x000a0;&#x000b1;&#x000a0;4.16E+00</td><td char="&#x000b1;" align="char">1.27E+02&#x000a0;&#x000b1;&#x000a0;1.29E+02</td><td char="&#x000b1;" align="char">9.97E+01&#x000a0;&#x000b1;&#x000a0;1.18E+02</td><td char="&#x000b1;" align="char">4.98E&#x02212;01&#x000a0;&#x000b1;&#x000a0;2.25E&#x02212;01</td><td char="&#x000b1;" align="char">
<italic>4.09E&#x02212;01</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>4.06E&#x02212;01</italic>
</td></tr><tr><td align="left">F22</td><td char="&#x000b1;" align="char">1.07E+01&#x000a0;&#x000b1;&#x000a0;9.64E+00</td><td char="&#x000b1;" align="char">2.78E+01&#x000a0;&#x000b1;&#x000a0;1.42E+01</td><td char="&#x000b1;" align="char">3.27E+01&#x000a0;&#x000b1;&#x000a0;3.48E+01</td><td char="&#x000b1;" align="char">3.18E+00&#x000a0;&#x000b1;&#x000a0;8.64E&#x02212;01</td><td char="&#x000b1;" align="char">
<italic>2.72E&#x02212;01</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>2.15E&#x02212;0</italic>1</td></tr><tr><td align="left">
<italic>Composition functions</italic>
</td><td align="left"/><td align="left"/><td align="left"/><td align="left"/><td align="left"/></tr><tr><td align="left">F23</td><td char="&#x000b1;" align="char">
<italic>3.29E+02</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td><td char="&#x000b1;" align="char">
<italic>3.29E+02</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td><td char="&#x000b1;" align="char">3.29E+02&#x000a0;&#x000b1;&#x000a0;3.28E&#x02212;04</td><td char="&#x000b1;" align="char">
<italic>3.29E+02</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td><td char="&#x000b1;" align="char">
<italic>3.29E+02</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td></tr><tr><td align="left">F24</td><td char="&#x000b1;" align="char">1.20E+02&#x000a0;&#x000b1;&#x000a0;7.47E+00</td><td char="&#x000b1;" align="char">1.37E+02&#x000a0;&#x000b1;&#x000a0;1.06E+01</td><td char="&#x000b1;" align="char">1.24E+02&#x000a0;&#x000b1;&#x000a0;2.65E+01</td><td char="&#x000b1;" align="char">1.09E+02&#x000a0;&#x000b1;&#x000a0;1.83E+00</td><td char="&#x000b1;" align="char">
<italic>1.08E+02</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>2.25E+00</italic>
</td></tr><tr><td align="left">F25</td><td char="&#x000b1;" align="char">1.28E+02&#x000a0;&#x000b1;&#x000a0;1.56E+01</td><td char="&#x000b1;" align="char">1.86E+02&#x000a0;&#x000b1;&#x000a0;2.52E+01</td><td char="&#x000b1;" align="char">1.85E+02&#x000a0;&#x000b1;&#x000a0;2.79E+02</td><td char="&#x000b1;" align="char">1.65E+02&#x000a0;&#x000b1;&#x000a0;4.19E+01</td><td char="&#x000b1;" align="char">
<italic>1.20E+02</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>1.79E+01</italic>
</td></tr><tr><td align="left">F26</td><td char="&#x000b1;" align="char">
<italic>1.00E+02</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>3.75E&#x02212;02</italic>
</td><td char="&#x000b1;" align="char">
<italic>1.00E+02</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>1.69E&#x02212;01</italic>
</td><td char="&#x000b1;" align="char">
<italic>1.00E+02</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>2.79E&#x02212;02</italic>
</td><td char="&#x000b1;" align="char">
<italic>1.00E+02</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>1.27E&#x02212;02</italic>
</td><td char="&#x000b1;" align="char">
<italic>1.00E+02</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>7.71E&#x02212;03</italic>
</td></tr><tr><td align="left">F27</td><td char="&#x000b1;" align="char">9.39E+01&#x000a0;&#x000b1;&#x000a0;1.43E+02</td><td char="&#x000b1;" align="char">4.79E+01&#x000a0;&#x000b1;&#x000a0;1.16E+02</td><td char="&#x000b1;" align="char">2.47E+02&#x000a0;&#x000b1;&#x000a0;1.78E+02</td><td char="&#x000b1;" align="char">1.15E+02&#x000a0;&#x000b1;&#x000a0;1.77E+02</td><td char="&#x000b1;" align="char">
<italic>3.82E+01</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>1.12E+02</italic>
</td></tr><tr><td align="left">F28</td><td char="&#x000b1;" align="char">3.88E+02&#x000a0;&#x000b1;&#x000a0;5.38E+01</td><td char="&#x000b1;" align="char">4.57E+02&#x000a0;&#x000b1;&#x000a0;7.84E+01</td><td char="&#x000b1;" align="char">4.16E+02&#x000a0;&#x000b1;&#x000a0;5.57E+01</td><td char="&#x000b1;" align="char">3.91E+02&#x000a0;&#x000b1;&#x000a0;3.93E+01</td><td char="&#x000b1;" align="char">
<italic>3.25E+02</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>3.38E+01</italic>
</td></tr><tr><td align="left">F29</td><td char="&#x000b1;" align="char">2.13E+02&#x000a0;&#x000b1;&#x000a0;2.63E+01</td><td char="&#x000b1;" align="char">5.77E+04&#x000a0;&#x000b1;&#x000a0;3.15E+05</td><td char="&#x000b1;" align="char">4.25E+05&#x000a0;&#x000b1;&#x000a0;1.02E+06</td><td char="&#x000b1;" align="char">2.22E+02&#x000a0;&#x000b1;&#x000a0;6.66E&#x02212;01</td><td char="&#x000b1;" align="char">
<italic>1.95E+02</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>2.08E+01</italic>
</td></tr><tr><td align="left">F30</td><td char="&#x000b1;" align="char">5.06E+02&#x000a0;&#x000b1;&#x000a0;1.25E+02</td><td char="&#x000b1;" align="char">8.67E+02&#x000a0;&#x000b1;&#x000a0;3.98E+02</td><td char="&#x000b1;" align="char">6.33E+02&#x000a0;&#x000b1;&#x000a0;1.39E+02</td><td char="&#x000b1;" align="char">4.66E+02&#x000a0;&#x000b1;&#x000a0;1.72E+01</td><td char="&#x000b1;" align="char">
<italic>2.40E+02</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>4.41E+01</italic>
</td></tr></tbody></table><table-wrap-foot><p>&#x0201c;Mean&#x0201d; and &#x0201c;SD&#x0201d; indicate the average and standard deviation of the function error values obtained in 30 runs, respectively</p></table-wrap-foot></table-wrap></p><p>We also perform the multi-problem Wilcoxon&#x02019;s test, which is accomplished using the KEEL software, to check the behavior of the algorithms (Alcal&#x000e1; et al. <xref ref-type="bibr" rid="CR1">2009</xref>). Tables&#x000a0;<xref rid="Tab3" ref-type="table">3</xref> and <xref rid="Tab4" ref-type="table">4</xref> summarize the results of the Wilcoxon&#x02019;s and Friedman&#x02019;s tests. &#x000a0;The portions in italic in Tables <xref rid="Tab3" ref-type="table">3</xref> and <xref rid="Tab4" ref-type="table">4</xref> represent the best results among the algorithms in terms of the optimization of the test functions. Table&#x000a0;<xref rid="Tab3" ref-type="table">3</xref> shows that CCDE provides higher R+ values than R&#x02212; values in all cases. Wilcoxon&#x02019;s test at <italic>&#x003b1;</italic>&#x000a0;=&#x000a0;0.05 shows significant differences among CCDE and the competitors. This result indicates that CCDE is significantly better than JADE, SaDE, EPSDE, and CoBiDE on the 30 test functions at <italic>&#x003b1;</italic>&#x000a0;=&#x000a0;0.05.<table-wrap id="Tab3"><label>Table&#x000a0;3</label><caption><p>Results of the multiple-problem Wilcoxon&#x02019;s test for JADE, SaDE, EPSDE, CoBiDE and CCDE at a 0.05 significance level</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Algorithm</th><th align="left">R+</th><th align="left">R&#x02212;</th><th align="left">
<italic>p</italic> value</th><th align="left">
<italic>&#x003b1;</italic>&#x000a0;=&#x000a0;0.05</th></tr></thead><tbody><tr><td align="left">CCDE vs JADE</td><td char="." align="char">
<italic>410.0</italic>
</td><td char="." align="char">25.0</td><td char="." align="char">3.368E&#x02212;06</td><td align="left">Yes</td></tr><tr><td align="left">CCDE vs SaDE</td><td char="." align="char">
<italic>430.0</italic>
</td><td char="." align="char">5.0</td><td char="." align="char">3.726E&#x02212;08</td><td align="left">Yes</td></tr><tr><td align="left">CCDE vs EPSDE</td><td char="." align="char">
<italic>448.5</italic>
</td><td char="." align="char">16.5</td><td char="." align="char">3.502E&#x02212;07</td><td align="left">Yes</td></tr><tr><td align="left">CCDE vs CoBiDE</td><td char="." align="char">
<italic>382.5</italic>
</td><td char="." align="char">82.5</td><td char="." align="char">1.399E&#x02212;03</td><td align="left">Yes</td></tr></tbody></table></table-wrap><table-wrap id="Tab4"><label>Table&#x000a0;4</label><caption><p>Ranking of JADE, SaDE, EPSDE, CoBiDE and CCDE according to the statistical test of the Friedman test</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Algorithms</th><th align="left">JADE</th><th align="left">SaDE</th><th align="left">EPSDE</th><th align="left">CoBiDE</th><th align="left">CCDE</th></tr></thead><tbody><tr><td align="left">Uni. Func.</td><td char="." align="char">
<italic>2.625</italic>
</td><td char="." align="char">
<italic>2.625</italic>
</td><td char="." align="char">4.5</td><td char="." align="char">
<italic>2.625</italic>
</td><td char="." align="char">
<italic>2.625</italic>
</td></tr><tr><td align="left">Multim. Func.</td><td char="." align="char">3.3077</td><td char="." align="char">4.7692</td><td char="." align="char">3.3846</td><td char="." align="char">2.1154</td><td char="." align="char">
<italic>1.4231</italic>
</td></tr><tr><td align="left">Hyb. Func.</td><td char="." align="char">3</td><td char="." align="char">4.6667</td><td char="." align="char">4.3333</td><td char="." align="char">1.8333</td><td char="." align="char">
<italic>1.1667</italic>
</td></tr><tr><td align="left">Compos. Func.</td><td char="." align="char">2.625</td><td char="." align="char">4</td><td char="." align="char">4</td><td char="." align="char">2.875</td><td char="." align="char">
<italic>1.5</italic>
</td></tr><tr><td align="left">Total</td><td char="." align="char">2.9833</td><td char="." align="char">4.3167</td><td char="." align="char">3.9</td><td char="." align="char">2.3</td><td char="." align="char">
<italic>1.5</italic>
</td></tr></tbody></table></table-wrap></p><p>Friedman&#x02019;s test based on the KEEL software is performed to further detect the significant difference among CCDE and the four compared algorithms (Alcal&#x000e1; et al. <xref ref-type="bibr" rid="CR1">2009</xref>). Iman&#x02013;Davenport&#x02019;s procedure is used as the post hoc procedure. Table&#x000a0;<xref rid="Tab4" ref-type="table">4</xref> summarizes the ranking results of the five algorithms obtained by Friedman&#x02019;s test. CCDE ranks comparable with JADE, SaDE, and CoBiDE on the unimodal functions and ranks best on the multimodal, hybrid, and composition functions. Thus, CCDE ranks the best on the 30 benchmarks of 10 dimensions compared with JADE, SaDE, EPSDE, and CoBiDE.</p><p>Figures&#x000a0;<xref rid="Fig2" ref-type="fig">2</xref> and <xref rid="Fig3" ref-type="fig">3</xref> illustrate the mean function error values for the 5 algorithms with 30 independent runs for the 24 typical benchmark functions. Figure&#x000a0;<xref rid="Fig2" ref-type="fig">2</xref> shows that CCDE can provide better convergence trends for F1, F4&#x02013;F9, and F11&#x02013;F12 than the other algorithms. JADE shows the best convergence trends for F2 and F3. CoBiDE presents the best convergence trends for F10. Figure&#x000a0;<xref rid="Fig3" ref-type="fig">3</xref> shows that CCDE performs better than the other algorithms on the convergence trends for F13&#x02013;F15, F20&#x02013;F22, F25, F27, and F30. EPSDE shows the best convergence preference on F16, whereas CoBiDE performs better on F18. The five algorithms show comparable convergence trends on F23.<fig id="Fig2"><label>Fig.&#x000a0;2</label><caption><p>Evolution of the mean function error values derived from JADE, SaDE, EPSDE, CoBiDE and CCDE versus the number of <italic>FEs</italic> from F1 to F12 with <italic>D</italic>&#x000a0;=&#x000a0;10</p></caption><graphic xlink:href="40064_2016_2838_Fig2_HTML" id="MO14"/></fig><fig id="Fig3"><label>Fig.&#x000a0;3</label><caption><p>Evolution of the mean function error values derived from JADE, SaDE, EPSDE, CoBiDE and CCDE versus the number of <italic>FEs</italic> on F13-F16, F18, F20-F23, F25, F27 and F30 with D&#x000a0;=&#x000a0;10</p></caption><graphic xlink:href="40064_2016_2838_Fig3_HTML" id="MO15"/></fig></p></sec><sec id="Sec18"><title>Comparision with CEC 2014 algorithms</title><p>CCDE is compared with five algorithms from CEC 2014 in terms of the single-objective real-parameter numerical optimization. These algorithms are all participant algorithms in such special session. They consist of modern real-coded optimizers, hybridizing with local search or using convergence matrix methods. Some of these algorithms follow evolutionary computation or swarm intelligence variants. The five algorithms are convergence matrix learning and search preference algorithm (CMLSP) (Chen et al. <xref ref-type="bibr" rid="CR3">2014</xref>); non-uniform mapping in real-coded genetic algorithm (NRGA) (Yashesh et al. <xref ref-type="bibr" rid="CR28">2014</xref>); simultaneous optimistic optimization (SOO) (Preux et al. <xref ref-type="bibr" rid="CR20">2014</xref>); fireworks algorithm with DE (FWA-DE) (Yu et al. <xref ref-type="bibr" rid="CR29">2014</xref>); and OptBees, which is inspired by the collective decision-making of bee colonies (Maia et al. <xref ref-type="bibr" rid="CR17">2014</xref>). The experimental results of the compared algorithms are directly taken from (Chen et al. <xref ref-type="bibr" rid="CR3">2014</xref>; Yashesh et al. <xref ref-type="bibr" rid="CR28">2014</xref>; Preux et al. <xref ref-type="bibr" rid="CR20">2014</xref>; Yu et al. <xref ref-type="bibr" rid="CR29">2014</xref>; Maia et al. <xref ref-type="bibr" rid="CR17">2014</xref>) to ensure fair comparison.</p><p>In this experiment, <italic>D</italic> of the 30 test functions is set to 30. Each test function independently runs 51 times with 300,000 <italic>FEs</italic> and error value <italic>Error</italic>&#x000a0;=&#x000a0;10<sup>&#x02212;8</sup> as the termination criterion for fair comparison. The parameter <italic>N</italic> in CCDE is set to 100.</p><p>Table&#x000a0;<xref rid="Tab5" ref-type="table">5</xref> summarizes the experimental results among CCDE and other algorithms in terms of mean errors and standard deviations of 51 independent runs. The portions in italic in Table&#x000a0;<xref rid="Tab5" ref-type="table">5</xref> represent the best results among the algorithms in terms of the optimization of the test functions. CCDE performs better for the majority of the test functions than the five other algorithms.<table-wrap id="Tab5"><label>Table&#x000a0;5</label><caption><p>Mean and SD obtained by CMLSP, NRGA, SOO, FWA-DE, OptBees and CCDE through 51 independent runs on 30 test functions in 30 dimension with 300,000 <italic>FEs</italic>
</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Function</th><th align="left">CMLSP mean&#x000a0;&#x000b1;&#x000a0;SD</th><th align="left">NRGA mean&#x000a0;&#x000b1;&#x000a0;SD</th><th align="left">SOO mean&#x000a0;&#x000b1;&#x000a0;SD</th><th align="left">FWA-DE mean&#x000a0;&#x000b1;&#x000a0;SD</th><th align="left">OptBees mean&#x000a0;&#x000b1;&#x000a0;SD</th><th align="left">CCDE mean&#x000a0;&#x000b1;&#x000a0;SD</th></tr></thead><tbody><tr><td align="left">
<italic>A</italic>
</td><td align="left"/><td align="left"/><td align="left"/><td align="left"/><td align="left"/><td align="left"/></tr><tr><td align="left">F1</td><td char="&#x000b1;" align="char">
<italic>0.00E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td><td char="&#x000b1;" align="char">5.74E+05&#x000a0;&#x000b1;&#x000a0;2.89E+05</td><td char="&#x000b1;" align="char">2.15E+09&#x000a0;&#x000b1;&#x000a0;0.00E+00</td><td char="&#x000b1;" align="char">2.76E+05&#x000a0;&#x000b1;&#x000a0;1.84E+05</td><td char="&#x000b1;" align="char">8.57E+04&#x000a0;&#x000b1;&#x000a0;3.04E+05</td><td char="&#x000b1;" align="char">
<italic>0.00E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td></tr><tr><td align="left">F2</td><td char="&#x000b1;" align="char">
<italic>0.00E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td><td char="&#x000b1;" align="char">9.28E+03&#x000a0;&#x000b1;&#x000a0;3.95E+03</td><td char="&#x000b1;" align="char">3.14E+04&#x000a0;&#x000b1;&#x000a0;0.00E+00</td><td char="&#x000b1;" align="char">
<italic>0.00E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td><td char="&#x000b1;" align="char">
<italic>0.00E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td><td char="&#x000b1;" align="char">
<italic>0.00E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td></tr><tr><td align="left">F3</td><td char="&#x000b1;" align="char">1.23E&#x02212;08&#x000a0;&#x000b1;&#x000a0;2.14E&#x02212;08</td><td char="&#x000b1;" align="char">4.58E+03&#x000a0;&#x000b1;&#x000a0;3.81E+03</td><td char="&#x000b1;" align="char">1.08E+04&#x000a0;&#x000b1;&#x000a0;5.51E&#x02212;08</td><td char="&#x000b1;" align="char">
<italic>0.00E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td><td char="&#x000b1;" align="char">8.40E&#x02212;03&#x000a0;&#x000b1;&#x000a0;3.77E&#x02212;02</td><td char="&#x000b1;" align="char">
<italic>0.00E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td></tr><tr><td align="left">
<italic>B</italic>
</td><td align="left"/><td align="left"/><td align="left"/><td align="left"/><td align="left"/><td align="left"/></tr><tr><td align="left">F4</td><td char="&#x000b1;" align="char">1.10E&#x02212;03&#x000a0;&#x000b1;&#x000a0;7.60E&#x02212;03</td><td char="&#x000b1;" align="char">8.06E+02&#x000a0;&#x000b1;&#x000a0;3.13E+01</td><td char="&#x000b1;" align="char">1.09E+02&#x000a0;&#x000b1;&#x000a0;1.01E&#x02212;07</td><td char="&#x000b1;" align="char">2.04E+01&#x000a0;&#x000b1;&#x000a0;1.93E+01</td><td char="&#x000b1;" align="char">1.26E+01&#x000a0;&#x000b1;&#x000a0;1.37E+01</td><td char="&#x000b1;" align="char">
<italic>2.17E&#x02212;06</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>2.61E&#x02212;06</italic>
</td></tr><tr><td align="left">F5</td><td char="&#x000b1;" align="char">1.99E+02&#x000a0;&#x000b1;&#x000a0;4.93E&#x02212;05</td><td char="&#x000b1;" align="char">2.01E+01&#x000a0;&#x000b1;&#x000a0;1.11E&#x02212;04</td><td char="&#x000b1;" align="char">
<italic>2.00E+01</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td><td char="&#x000b1;" align="char">2.05E+01&#x000a0;&#x000b1;&#x000a0;5.41E&#x02212;02</td><td char="&#x000b1;" align="char">2.01E+01&#x000a0;&#x000b1;&#x000a0;1.02E&#x02212;05</td><td char="&#x000b1;" align="char">2.02E+01&#x000a0;&#x000b1;&#x000a0;1.59E&#x02212;01</td></tr><tr><td align="left">F6</td><td char="&#x000b1;" align="char">3.09E&#x02212;02&#x000a0;&#x000b1;&#x000a0;2.21E&#x02212;01</td><td char="&#x000b1;" align="char">1.78E+01&#x000a0;&#x000b1;&#x000a0;2.20E+00</td><td char="&#x000b1;" align="char">1.89E+00&#x000a0;&#x000b1;&#x000a0;1.56E&#x02212;07</td><td char="&#x000b1;" align="char">1.29E+01&#x000a0;&#x000b1;&#x000a0;8.33E+00</td><td char="&#x000b1;" align="char">1.64E+01&#x000a0;&#x000b1;&#x000a0;3.44E+00</td><td char="&#x000b1;" align="char">
<italic>0.00E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td></tr><tr><td align="left">F7</td><td char="&#x000b1;" align="char">0.00E+00&#x000a0;&#x000b1;&#x000a0;0.00E+00</td><td char="&#x000b1;" align="char">1.59E&#x02212;02&#x000a0;&#x000b1;&#x000a0;1.61E&#x02212;02</td><td char="&#x000b1;" align="char">9.96E&#x02212;01&#x000a0;&#x000b1;&#x000a0;0.00E+00</td><td char="&#x000b1;" align="char">8.51E&#x02212;03&#x000a0;&#x000b1;&#x000a0;9.92E&#x02212;03</td><td char="&#x000b1;" align="char">3.75E&#x02212;02&#x000a0;&#x000b1;&#x000a0;3.82E&#x02212;02</td><td char="&#x000b1;" align="char">
<italic>0.00E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td></tr><tr><td align="left">F8</td><td char="&#x000b1;" align="char">9.84E+00&#x000a0;&#x000b1;&#x000a0;2.96E+01</td><td char="&#x000b1;" align="char">2.66E+01&#x000a0;&#x000b1;&#x000a0;7.79E+00</td><td char="&#x000b1;" align="char">9.25E+01&#x000a0;&#x000b1;&#x000a0;2.87E&#x02212;07</td><td char="&#x000b1;" align="char">1.89E+00&#x000a0;&#x000b1;&#x000a0;1.57E+00</td><td char="&#x000b1;" align="char">0.00E+00&#x000a0;&#x000b1;&#x000a0;0.00E+00</td><td char="&#x000b1;" align="char">
<italic>0.00E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td></tr><tr><td align="left">F9</td><td char="&#x000b1;" align="char">8.39E+00&#x000a0;&#x000b1;&#x000a0;2.39E+00</td><td char="&#x000b1;" align="char">4.57E+01&#x000a0;&#x000b1;&#x000a0;1.35E+01</td><td char="&#x000b1;" align="char">5.97E+01&#x000a0;&#x000b1;&#x000a0;1.44E&#x02212;08</td><td char="&#x000b1;" align="char">5.66E+01&#x000a0;&#x000b1;&#x000a0;1.09E+01</td><td char="&#x000b1;" align="char">1.37E+02&#x000a0;&#x000b1;&#x000a0;3.24E+01</td><td char="&#x000b1;" align="char">
<italic>2.19E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>2.37E+00</italic>
</td></tr><tr><td align="left">F10</td><td char="&#x000b1;" align="char">1.47E+03&#x000a0;&#x000b1;&#x000a0;4.78E+02</td><td char="&#x000b1;" align="char">1.07E+03&#x000a0;&#x000b1;&#x000a0;4.61E+02</td><td char="&#x000b1;" align="char">2.31E+03&#x000a0;&#x000b1;&#x000a0;1.38E&#x02212;08</td><td char="&#x000b1;" align="char">
<italic>8.53E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>2.45E+00</italic>
</td><td char="&#x000b1;" align="char">1.04E+03&#x000a0;&#x000b1;&#x000a0;2.52E+02</td><td char="&#x000b1;" align="char">2.24E+01&#x000a0;&#x000b1;&#x000a0;3.85E+01</td></tr><tr><td align="left">F11</td><td char="&#x000b1;" align="char">1.82E+03&#x000a0;&#x000b1;&#x000a0;7.56E+02</td><td char="&#x000b1;" align="char">3.41E+03&#x000a0;&#x000b1;&#x000a0;6.49E+02</td><td char="&#x000b1;" align="char">2.15E+03&#x000a0;&#x000b1;&#x000a0;0.00E+00</td><td char="&#x000b1;" align="char">2.63E+03&#x000a0;&#x000b1;&#x000a0;2.51E+02</td><td char="&#x000b1;" align="char">2.72E+03&#x000a0;&#x000b1;&#x000a0;5.68E+02</td><td char="&#x000b1;" align="char">
<italic>2.02E+03</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>7.91E+02</italic>
</td></tr><tr><td align="left">F12</td><td char="&#x000b1;" align="char">
<italic>1.46E&#x02212;04</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>4.18E&#x02212;04</italic>
</td><td char="&#x000b1;" align="char">1.51E+00&#x000a0;&#x000b1;&#x000a0;7.11E&#x02212;02</td><td char="&#x000b1;" align="char">3.01E&#x02212;02&#x000a0;&#x000b1;&#x000a0;1.05E&#x02212;07</td><td char="&#x000b1;" align="char">3.71E&#x02212;01&#x000a0;&#x000b1;&#x000a0;6.73E&#x02212;02</td><td char="&#x000b1;" align="char">1.82E&#x02212;01&#x000a0;&#x000b1;&#x000a0;6.12E&#x02212;02</td><td char="&#x000b1;" align="char">6.29E&#x02212;04&#x000a0;&#x000b1;&#x000a0;1.71E&#x02212;04</td></tr><tr><td align="left">F13</td><td char="&#x000b1;" align="char">
<italic>4.81E&#x02212;02</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>2.29E&#x02212;02</italic>
</td><td char="&#x000b1;" align="char">2.81E&#x02212;01&#x000a0;&#x000b1;&#x000a0;5.65E&#x02212;02</td><td char="&#x000b1;" align="char">3.50E&#x02212;01&#x000a0;&#x000b1;&#x000a0;0.00E+00</td><td char="&#x000b1;" align="char">3.89E&#x02212;01&#x000a0;&#x000b1;&#x000a0;5.57E&#x02212;02</td><td char="&#x000b1;" align="char">5.61E&#x02212;01&#x000a0;&#x000b1;&#x000a0;1.48E&#x02212;01</td><td char="&#x000b1;" align="char">5.54E&#x02212;02&#x000a0;&#x000b1;&#x000a0;2.44E&#x02212;02</td></tr><tr><td align="left">F14</td><td char="&#x000b1;" align="char">3.12E&#x02212;01&#x000a0;&#x000b1;&#x000a0;5.13E&#x02212;02</td><td char="&#x000b1;" align="char">1.87E&#x02212;01&#x000a0;&#x000b1;&#x000a0;2.66E&#x02212;02</td><td char="&#x000b1;" align="char">2.91E&#x02212;01&#x000a0;&#x000b1;&#x000a0;2.81E&#x02212;07</td><td char="&#x000b1;" align="char">2.69E&#x02212;01&#x000a0;&#x000b1;&#x000a0;7.83E&#x02212;02</td><td char="&#x000b1;" align="char">3.99E&#x02212;01&#x000a0;&#x000b1;&#x000a0;2.31E&#x02212;01</td><td char="&#x000b1;" align="char">
<italic>1.84E&#x02212;01</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>3.51E&#x02212;02</italic>
</td></tr><tr><td align="left">F15</td><td char="&#x000b1;" align="char">
<italic>3.02E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>1.23E+00</italic>
</td><td char="&#x000b1;" align="char">1.37E+01&#x000a0;&#x000b1;&#x000a0;4.82E+00</td><td char="&#x000b1;" align="char">2.25E+01&#x000a0;&#x000b1;&#x000a0;7.17E&#x02212;08</td><td char="&#x000b1;" align="char">7.37E+00&#x000a0;&#x000b1;&#x000a0;8.55E&#x02212;01</td><td char="&#x000b1;" align="char">1.27E+01&#x000a0;&#x000b1;&#x000a0;6.92E+00</td><td char="&#x000b1;" align="char">3.25E+00&#x000a0;&#x000b1;&#x000a0;6.16E&#x02212;01</td></tr><tr><td align="left">F16</td><td char="&#x000b1;" align="char">1.28E+01&#x000a0;&#x000b1;&#x000a0;7.05E&#x02212;01</td><td char="&#x000b1;" align="char">1.47E+01&#x000a0;&#x000b1;&#x000a0;6.74E&#x02212;01</td><td char="&#x000b1;" align="char">9.86E+00&#x000a0;&#x000b1;&#x000a0;0.00E+00</td><td char="&#x000b1;" align="char">1.09E+01&#x000a0;&#x000b1;&#x000a0;2.74E&#x02212;01</td><td char="&#x000b1;" align="char">1.09E+01&#x000a0;&#x000b1;&#x000a0;6.91E&#x02212;01</td><td char="&#x000b1;" align="char">
<italic>1.06E+01</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>6.34E&#x02212;01</italic>
</td></tr><tr><td align="left">
<italic>C</italic>
</td><td align="left"/><td align="left"/><td align="left"/><td align="left"/><td align="left"/><td align="left"/></tr><tr><td align="left">F17</td><td char="&#x000b1;" align="char">
<italic>9.35E+02</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>3.88E+02</italic>
</td><td char="&#x000b1;" align="char">2.35E+05&#x000a0;&#x000b1;&#x000a0;1.19E+05</td><td char="&#x000b1;" align="char">2.81E+07&#x000a0;&#x000b1;&#x000a0;0.00E+00</td><td char="&#x000b1;" align="char">6.28E+03&#x000a0;&#x000b1;&#x000a0;6.01E+03</td><td char="&#x000b1;" align="char">2.74E+04&#x000a0;&#x000b1;&#x000a0;4.04E+04</td><td char="&#x000b1;" align="char">1.05E+03&#x000a0;&#x000b1;&#x000a0;4.01E+02</td></tr><tr><td align="left">F18</td><td char="&#x000b1;" align="char">7.54E+02&#x000a0;&#x000b1;&#x000a0;1.61E+01</td><td char="&#x000b1;" align="char">5.51E+02&#x000a0;&#x000b1;&#x000a0;7.16E+02</td><td char="&#x000b1;" align="char">2.86E+03&#x000a0;&#x000b1;&#x000a0;1.38E&#x02212;07</td><td char="&#x000b1;" align="char">7.67E+01&#x000a0;&#x000b1;&#x000a0;3.69E+01</td><td char="&#x000b1;" align="char">1.96E+02&#x000a0;&#x000b1;&#x000a0;4.77E+02</td><td char="&#x000b1;" align="char">
<italic>2.17E+01</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>1.42E+01</italic>
</td></tr><tr><td align="left">F19</td><td char="&#x000b1;" align="char">
<italic>3.88E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>6.11E&#x02212;01</italic>
</td><td char="&#x000b1;" align="char">1.37E+01&#x000a0;&#x000b1;&#x000a0;1.30E+00</td><td char="&#x000b1;" align="char">1.84E+02&#x000a0;&#x000b1;&#x000a0;0.00E+00</td><td char="&#x000b1;" align="char">9.95E+00&#x000a0;&#x000b1;&#x000a0;1.95E+00</td><td char="&#x000b1;" align="char">7.89E+00&#x000a0;&#x000b1;&#x000a0;1.88E+00</td><td char="&#x000b1;" align="char">4.16E+00&#x000a0;&#x000b1;&#x000a0;1.08E+00</td></tr><tr><td align="left">F20</td><td char="&#x000b1;" align="char">9.79E+00&#x000a0;&#x000b1;&#x000a0;4.68E+00</td><td char="&#x000b1;" align="char">1.14E+04&#x000a0;&#x000b1;&#x000a0;5.61E+03</td><td char="&#x000b1;" align="char">3.82E+04&#x000a0;&#x000b1;&#x000a0;3.67E&#x02212;08</td><td char="&#x000b1;" align="char">4.28E+01&#x000a0;&#x000b1;&#x000a0;2.64E+01</td><td char="&#x000b1;" align="char">8.53E+02&#x000a0;&#x000b1;&#x000a0;7.79E+02</td><td char="&#x000b1;" align="char">
<italic>8.59E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>3.01E+00</italic>
</td></tr><tr><td align="left">F21</td><td char="&#x000b1;" align="char">2.29E+02&#x000a0;&#x000b1;&#x000a0;1.19E+02</td><td char="&#x000b1;" align="char">1.81E+05&#x000a0;&#x000b1;&#x000a0;9.51E+04</td><td char="&#x000b1;" align="char">1.63E+07&#x000a0;&#x000b1;&#x000a0;0.00E+00</td><td char="&#x000b1;" align="char">7.29E+02&#x000a0;&#x000b1;&#x000a0;9.59E+02</td><td char="&#x000b1;" align="char">1.74E+04&#x000a0;&#x000b1;&#x000a0;1.82E+04</td><td char="&#x000b1;" align="char">
<italic>1.72E+02</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>1.01E+02</italic>
</td></tr><tr><td align="left">F22</td><td char="&#x000b1;" align="char">6.09E+01&#x000a0;&#x000b1;&#x000a0;5.74E+01</td><td char="&#x000b1;" align="char">4.07E+02&#x000a0;&#x000b1;&#x000a0;1.31E+02</td><td char="&#x000b1;" align="char">1.02E+03&#x000a0;&#x000b1;&#x000a0;5.74E&#x02212;07</td><td char="&#x000b1;" align="char">1.46E+02&#x000a0;&#x000b1;&#x000a0;8.92E+01</td><td char="&#x000b1;" align="char">2.32E+02&#x000a0;&#x000b1;&#x000a0;9.25E+01</td><td char="&#x000b1;" align="char">
<italic>4.68E+01</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>2.17E+01</italic>
</td></tr><tr><td align="left">
<italic>D</italic>
</td><td align="left"/><td align="left"/><td align="left"/><td align="left"/><td align="left"/><td align="left"/></tr><tr><td align="left">F23</td><td char="&#x000b1;" align="char">2.00E+02&#x000a0;&#x000b1;&#x000a0;0.00E+00</td><td char="&#x000b1;" align="char">3.15E+02&#x000a0;&#x000b1;&#x000a0;1.41E&#x02212;03</td><td char="&#x000b1;" align="char">2.00E+02&#x000a0;&#x000b1;&#x000a0;0.00E+00</td><td char="&#x000b1;" align="char">3.14E+02&#x000a0;&#x000b1;&#x000a0;0.00E+02</td><td char="&#x000b1;" align="char">3.15E+02&#x000a0;&#x000b1;&#x000a0;6.67E&#x02212;02</td><td char="&#x000b1;" align="char">
<italic>2.00E+02</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td></tr><tr><td align="left">F24</td><td char="&#x000b1;" align="char">2.00E+02&#x000a0;&#x000b1;&#x000a0;5.05E&#x02212;03</td><td char="&#x000b1;" align="char">2.28E+02&#x000a0;&#x000b1;&#x000a0;4.25E+00</td><td char="&#x000b1;" align="char">2.00E+02&#x000a0;&#x000b1;&#x000a0;0.00E+00</td><td char="&#x000b1;" align="char">2.26E+02&#x000a0;&#x000b1;&#x000a0;3.63E+00</td><td char="&#x000b1;" align="char">2.36E+02&#x000a0;&#x000b1;&#x000a0;5.47E+00</td><td char="&#x000b1;" align="char">
<italic>2.00E+02</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>9.31E&#x02212;04</italic>
</td></tr><tr><td align="left">F25</td><td char="&#x000b1;" align="char">2.00E+02&#x000a0;&#x000b1;&#x000a0;0.00E+00</td><td char="&#x000b1;" align="char">2.11E+02&#x000a0;&#x000b1;&#x000a0;1.70E+00</td><td char="&#x000b1;" align="char">2.00E+02&#x000a0;&#x000b1;&#x000a0;0.00E+00</td><td char="&#x000b1;" align="char">2.00E+02&#x000a0;&#x000b1;&#x000a0;1.99E&#x02212;01</td><td char="&#x000b1;" align="char">2.01E+02&#x000a0;&#x000b1;&#x000a0;1.69E&#x02212;01</td><td char="&#x000b1;" align="char">
<italic>2.00E+02</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>1.31E&#x02212;03</italic>
</td></tr><tr><td align="left">F26</td><td char="&#x000b1;" align="char">1.24E+02&#x000a0;&#x000b1;&#x000a0;4.27E+01</td><td char="&#x000b1;" align="char">1.00E+02&#x000a0;&#x000b1;&#x000a0;9.33E&#x02212;02</td><td char="&#x000b1;" align="char">2.00E+02&#x000a0;&#x000b1;&#x000a0;0.00E+00</td><td char="&#x000b1;" align="char">1.00E+02&#x000a0;&#x000b1;&#x000a0;5.41E&#x02212;02</td><td char="&#x000b1;" align="char">1.01E+02&#x000a0;&#x000b1;&#x000a0;1.72E&#x02212;01</td><td char="&#x000b1;" align="char">
<italic>1.00E+02</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>2.54E&#x02212;02</italic>
</td></tr><tr><td align="left">F27</td><td char="&#x000b1;" align="char">2.00E+02&#x000a0;&#x000b1;&#x000a0;0.00E+00</td><td char="&#x000b1;" align="char">5.88E+02&#x000a0;&#x000b1;&#x000a0;1.72E+02</td><td char="&#x000b1;" align="char">2.00E+02&#x000a0;&#x000b1;&#x000a0;0.00E+00</td><td char="&#x000b1;" align="char">4.01E+02&#x000a0;&#x000b1;&#x000a0;3.09E+01</td><td char="&#x000b1;" align="char">4.02E+02&#x000a0;&#x000b1;&#x000a0;9.77E&#x02212;01</td><td char="&#x000b1;" align="char">
<italic>2.00E+02</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td></tr><tr><td align="left">F28</td><td char="&#x000b1;" align="char">2.00E+02&#x000a0;&#x000b1;&#x000a0;0.00E+00</td><td char="&#x000b1;" align="char">1.59E+03&#x000a0;&#x000b1;&#x000a0;5.76E+02</td><td char="&#x000b1;" align="char">
<italic>2.00E+02</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td><td char="&#x000b1;" align="char">3.93E+02&#x000a0;&#x000b1;&#x000a0;1.47E+01</td><td char="&#x000b1;" align="char">4.31E+02&#x000a0;&#x000b1;&#x000a0;1.52E+01</td><td char="&#x000b1;" align="char">3.42E+02&#x000a0;&#x000b1;&#x000a0;1.21E+01</td></tr><tr><td align="left">F29</td><td char="&#x000b1;" align="char">
<italic>2.00E+02</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td><td char="&#x000b1;" align="char">1.32E+03&#x000a0;&#x000b1;&#x000a0;2.09E+02</td><td char="&#x000b1;" align="char">
<italic>2.00E+02</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td><td char="&#x000b1;" align="char">2.11E+02&#x000a0;&#x000b1;&#x000a0;2.93E+00</td><td char="&#x000b1;" align="char">2.16E+02&#x000a0;&#x000b1;&#x000a0;1.18E+00</td><td char="&#x000b1;" align="char">2.06E+02&#x000a0;&#x000b1;&#x000a0;1.17E+00</td></tr><tr><td align="left">F30</td><td char="&#x000b1;" align="char">2.00E+02&#x000a0;&#x000b1;&#x000a0;0.00E+00</td><td char="&#x000b1;" align="char">2.89E+03&#x000a0;&#x000b1;&#x000a0;5.49E+02</td><td char="&#x000b1;" align="char">2.00E+02&#x000a0;&#x000b1;&#x000a0;0.00E+00</td><td char="&#x000b1;" align="char">4.53E+02&#x000a0;&#x000b1;&#x000a0;1.98E+02</td><td char="&#x000b1;" align="char">5.93E+02&#x000a0;&#x000b1;&#x000a0;9.87E+01</td><td char="&#x000b1;" align="char">
<italic>2.00E+02</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td></tr></tbody></table><table-wrap-foot><p>&#x0201c;Mean&#x0201d; and &#x0201c;SD&#x0201d; indicate the average and standard deviation of the function error values obtained in 30 runs, respectively</p></table-wrap-foot></table-wrap></p><p>Wilcoxon&#x02019;s and Friedman&#x02019;s tests are performed to further detect significant differences among CCDE and the five competitors (Alcal&#x000e1; et al. <xref ref-type="bibr" rid="CR1">2009</xref>). Tables&#x000a0;<xref rid="Tab6" ref-type="table">6</xref> and <xref rid="Tab7" ref-type="table">7</xref> summarize the results of these tests.&#x000a0;The portions in italic in Tables <xref rid="Tab6" ref-type="table">6</xref> and <xref rid="Tab7" ref-type="table">7</xref> represent the best results among the algorithms in terms of the optimization of the test functions.<table-wrap id="Tab6"><label>Table&#x000a0;6</label><caption><p>Results of the multiple-problem Wilcoxon&#x02019;s test for CMLSP, NRGA, SOO, FWA-DE, OptBees and CCDE at a 0.05 significance level</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Algorithm</th><th align="left">R+</th><th align="left">R&#x02212;</th><th align="left">
<italic>p</italic> value</th><th align="left">
<italic>&#x003b1;</italic>&#x000a0;=&#x000a0;0.05</th></tr></thead><tbody><tr><td align="left">CCDE vs CMLSP</td><td char="." align="char">296.0</td><td char="." align="char">169.0</td><td char="." align="char">1.9808E&#x02212;01</td><td align="left">No</td></tr><tr><td align="left">CCDE vs NRGA</td><td char="." align="char">
<italic>432.0</italic>
</td><td char="." align="char">3.0</td><td char="." align="char">1.8626E&#x02212;08</td><td align="left">Yes</td></tr><tr><td align="left">CCDE vs SOO</td><td char="." align="char">
<italic>383.0</italic>
</td><td char="." align="char">52.0</td><td char="." align="char">1.3914E&#x02212;04</td><td align="left">Yes</td></tr><tr><td align="left">CCDE vs FWA-DE</td><td char="." align="char">
<italic>444.0</italic>
</td><td char="." align="char">21.0</td><td char="." align="char">8.326E&#x02212;07</td><td align="left">Yes</td></tr><tr><td align="left">CCDE vs OptBees</td><td char="." align="char">
<italic>458.5</italic>
</td><td char="." align="char">6.5</td><td char="." align="char">3.0739E&#x02212;08</td><td align="left">Yes</td></tr></tbody></table></table-wrap><table-wrap id="Tab7"><label>Table&#x000a0;7</label><caption><p>Ranking of CMLSP, NRGA, SOO, FWA-DE, OptBees and CCDE according to the statistical test of the Friedman test at a 0.05 significance level</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Algorithms</th><th align="left">CMLSP</th><th align="left">NRGA</th><th align="left">SOO</th><th align="left">FWA-DE</th><th align="left">OptBees</th><th align="left">CCDE</th></tr></thead><tbody><tr><td align="left">Uni. Func.</td><td char="." align="char">
<italic>2.375</italic>
</td><td char="." align="char">4.625</td><td char="." align="char">5.375</td><td char="." align="char">3</td><td char="." align="char">3.25</td><td char="." align="char">
<italic>2.375</italic>
</td></tr><tr><td align="left">Multim. Func.</td><td char="." align="char">2.8077</td><td char="." align="char">4.5</td><td char="." align="char">4.0769</td><td char="." align="char">3.6538</td><td char="." align="char">4.1923</td><td char="." align="char">
<italic>1.7692</italic>
</td></tr><tr><td align="left">Hyb. Func.</td><td char="." align="char">2.1667</td><td char="." align="char">4.8333</td><td char="." align="char">6</td><td char="." align="char">3</td><td char="." align="char">3.6667</td><td char="." align="char">
<italic>1.3333</italic>
</td></tr><tr><td align="left">Compos. Func.</td><td char="." align="char">
<italic>2.3125</italic>
</td><td char="." align="char">5.3125</td><td char="." align="char">2.4375</td><td char="." align="char">3.5625</td><td char="." align="char">5.0625</td><td char="." align="char">
<italic>2.3125</italic>
</td></tr><tr><td align="left">Total</td><td char="." align="char">2.4667</td><td char="." align="char">4.8333</td><td char="." align="char">4.2167</td><td char="." align="char">3.4167</td><td char="." align="char">4.2167</td><td char="." align="char">
<italic>1.85</italic>
</td></tr></tbody></table></table-wrap></p><p>The R+ values in Table&#x000a0;<xref rid="Tab6" ref-type="table">6</xref> show that CCDE has better statistical performance than CMLSP, NRGA, SOO, FWA-DE, and OptBees. Wilcoxon&#x02019;s test at <italic>&#x003b1;</italic>&#x000a0;=&#x000a0;0.05 show significant differences among CCDE and the competitors, except for CMLSP. Table&#x000a0;<xref rid="Tab7" ref-type="table">7</xref> shows that CCDE and CMLSP rank the best for the unimodal functions with 30 dimension variables. CCDE ranks the best for the multimodal, hybrid, and composition functions. Thus, CCDE ranks first on the 30 test functions.</p><p>Figure&#x000a0;<xref rid="Fig4" ref-type="fig">4</xref> illustrates the trace progress for typical test functions with 30 dimension variables.<fig id="Fig4"><label>Fig.&#x000a0;4</label><caption><p>Evolution of the mean function error values derived from CMLSP, NRGA, SOO, FWA-DE, OptBees and CCDE versus the number of <italic>FEs</italic> on 12 test functions with <italic>D</italic>&#x000a0;=&#x000a0;30 selected from IEEE CEC2014</p></caption><graphic xlink:href="40064_2016_2838_Fig4_HTML" id="MO16"/></fig></p></sec><sec id="Sec19"><title>Real-world application problems</title><p>In addition to the 30 benchmarks in the previous sections, 5 real-world engineering optimization problems from IEEE CEC2011 are selected to evaluate the performance of CCDE in this subsection. These five real-world engineering optimization problems (denoted as RP<sub>1</sub>&#x02013;RP<sub>5</sub>) are the parameter estimation for frequency-modulated sound waves (T01 in CEC 2011), Tersoff Potential Function Minimization (T06), Spread Spectrum Radar Polly Phase Code Design (T07), Circular Antenna Array Design Problem (T10), Static Economic Load Dispatch Problem (T11.4), and Spacecraft Trajectory Optimization Problem (T13) (Das and Suganthan <xref ref-type="bibr" rid="CR4">2010</xref>). These problems have diverse complex characteristics and are very difficult to solve. Detailed descriptions of the five problems can be found in (Das and Suganthan <xref ref-type="bibr" rid="CR4">2010</xref>). The parameters of CCDE and other compared DEs are the same with those for the 30 benchmarks. A total of 30 independent runs are performed for each problem, with 150,000 <italic>FE</italic>s as the termination criterion.</p><p>Table&#x000a0;<xref rid="Tab8" ref-type="table">8</xref> summarizes the means and standard deviations of the objective function values over 30 independent runs for each problem. Wilcoxon&#x02019;s and Friedman&#x02019;s tests at a 0.05 significance level are implemented on the experimental results using KEEL software to draw statistically sound conclusions (Alcal&#x000e1; et al. <xref ref-type="bibr" rid="CR1">2009</xref>). Table&#x000a0;<xref rid="Tab9" ref-type="table">9</xref> shows that CCDE has higher R+ values than the other algorithms in all problems. Moreover, <italic>p</italic> values are less than 0.5 in all cases, except for CCDE versus CoBiDE. In addition, CCDE has the best ranking according to Table&#x000a0;<xref rid="Tab10" ref-type="table">10</xref>.&#x000a0;The portions in italic in Tables <xref rid="Tab8" ref-type="table">8</xref>, <xref rid="Tab9" ref-type="table">9</xref> and <xref rid="Tab10" ref-type="table">10</xref> represent the best results among the algorithms in terms of the optimization of the test functions. <table-wrap id="Tab8"><label>Table&#x000a0;8</label><caption><p>Mean and SD obtained by JADE, SaDE, EPSDE, CoBiDE and CCDE through 30 independent runs on 5 engineering optimization problems with 150,000 FES with 150,000 <italic>FEs</italic>
</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Problem</th><th align="left">JADE mean&#x000a0;&#x000b1;&#x000a0;SD</th><th align="left">SaDE mean&#x000a0;&#x000b1;&#x000a0;SD</th><th align="left">EPSDE mean&#x000a0;&#x000b1;&#x000a0;SD</th><th align="left">CoBiDE mean&#x000a0;&#x000b1;&#x000a0;SD</th><th align="left">CCDE mean&#x000a0;&#x000b1;&#x000a0;SD</th></tr></thead><tbody><tr><td align="left">RP<sub>1</sub>
</td><td char="&#x000b1;" align="char">9.62E&#x02212;02&#x000a0;&#x000b1;&#x000a0;4.08E&#x02212;02</td><td char="&#x000b1;" align="char">
<italic>0.00E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td><td char="&#x000b1;" align="char">5.06E&#x02212;02&#x000a0;&#x000b1;&#x000a0;3.17E&#x02212;02</td><td char="&#x000b1;" align="char">
<italic>0.00E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td><td char="&#x000b1;" align="char">
<italic>0.00E+00</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>0.00E+00</italic>
</td></tr><tr><td align="left">RP<sub>2</sub>
</td><td char="&#x000b1;" align="char">6.52E&#x02212;01&#x000a0;&#x000b1;&#x000a0;1.63E&#x02212;01</td><td char="&#x000b1;" align="char">1.69E+00&#x000a0;&#x000b1;&#x000a0;3.31E&#x02212;01</td><td char="&#x000b1;" align="char">3.35E+00&#x000a0;&#x000b1;&#x000a0;7.27E+00</td><td char="&#x000b1;" align="char">
<italic>6.11E&#x02212;01</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>9.71E&#x02212;01</italic>
</td><td char="&#x000b1;" align="char">6.27E&#x02212;01&#x000a0;&#x000b1;&#x000a0;1.01E&#x02212;01</td></tr><tr><td align="left">RP<sub>3</sub>
</td><td char="&#x000b1;" align="char">7.98E&#x02212;01&#x000a0;&#x000b1;&#x000a0;9.12E&#x02212;01</td><td char="&#x000b1;" align="char">7.66E&#x02212;01&#x000a0;&#x000b1;&#x000a0;1.94E&#x02212;01</td><td char="&#x000b1;" align="char">7.58E&#x02212;01&#x000a0;&#x000b1;&#x000a0;5.58E&#x02212;01</td><td char="&#x000b1;" align="char">7.02E&#x02212;01&#x000a0;&#x000b1;&#x000a0;4.37E&#x02212;01</td><td char="&#x000b1;" align="char">
<italic>6.93E&#x02212;01</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>1.59E&#x02212;01</italic>
</td></tr><tr><td align="left">RP<sub>4</sub>
</td><td char="&#x000b1;" align="char">&#x02212;2.13E+01&#x000a0;&#x000b1;&#x000a0;1.45E+00</td><td char="&#x000b1;" align="char">&#x02212;2.15E+01&#x000a0;&#x000b1;&#x000a0;2.42E&#x02212;01</td><td char="&#x000b1;" align="char">&#x02212;2.14E+01&#x000a0;&#x000b1;&#x000a0;1.02E&#x02212;01</td><td char="&#x000b1;" align="char">&#x02212;2.15E+01&#x000a0;&#x000b1;&#x000a0;1.97E&#x02212;01</td><td char="&#x000b1;" align="char">
<italic>&#x02212;2.16E+01</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>1.76E&#x02212;01</italic>
</td></tr><tr><td align="left">RP<sub>5</sub>
</td><td char="&#x000b1;" align="char">1.54E+01&#x000a0;&#x000b1;&#x000a0;2.12E+00</td><td char="&#x000b1;" align="char">1.56E+01&#x000a0;&#x000b1;&#x000a0;1.85E+00</td><td char="&#x000b1;" align="char">1.43E+01&#x000a0;&#x000b1;&#x000a0;2.16E+00</td><td char="&#x000b1;" align="char">1.42E+01&#x000a0;&#x000b1;&#x000a0;1.75E+00</td><td char="&#x000b1;" align="char">
<italic>1.41E+01</italic>&#x000a0;<italic>&#x000b1;</italic>&#x000a0;<italic>1.21E+00</italic>
</td></tr></tbody></table><table-wrap-foot><p>&#x0201c;Mean&#x0201d; and &#x0201c;SD&#x0201d; indicate the average and standard deviation of the function error values obtained in 30 runs, respectively</p></table-wrap-foot></table-wrap><table-wrap id="Tab9"><label>Table&#x000a0;9</label><caption><p>Results of the multiple-problem Wilcoxon&#x02019;s test for JADE, SaDE, EPSDE, CoBiDE and CCDE at a 0.05 significance level</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Algorithm</th><th align="left">R+</th><th align="left">R&#x02212;</th><th align="left">
<italic>p</italic> value</th><th align="left">
<italic>&#x003b1;</italic>&#x000a0;=&#x000a0;0.05</th></tr></thead><tbody><tr><td align="left">CCDE vs JADE</td><td char="." align="char">
<italic>15.0</italic>
</td><td char="." align="char">0.0</td><td char="." align="char">3.0971E&#x02212;02</td><td align="left">Yes</td></tr><tr><td align="left">CCDE vs SaDE</td><td char="." align="char">
<italic>10.0</italic>
</td><td char="." align="char">0.0</td><td char="." align="char">4.4610E&#x02212;02</td><td align="left">Yes</td></tr><tr><td align="left">CCDE vs EPSDE</td><td char="." align="char">
<italic>15.0</italic>
</td><td char="." align="char">0.0</td><td char="." align="char">3.0971E&#x02212;02</td><td align="left">Yes</td></tr><tr><td align="left">CCDE vs CoBiDE</td><td char="." align="char">8.0</td><td char="." align="char">2.0</td><td char="." align="char">2.0124E&#x02212;02</td><td align="left">No</td></tr></tbody></table></table-wrap><table-wrap id="Tab10"><label>Table&#x000a0;10</label><caption><p>Ranking of JADE, SaDE, EPSDE, CoBiDE and CCDE according to the statistical test of the Friedman test at a 0.05 significance level</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Algorithms</th><th align="left">Ranking</th></tr></thead><tbody><tr><td align="left">JADE</td><td char="." align="char">4.4</td></tr><tr><td align="left">SaDE</td><td char="." align="char">3.5</td></tr><tr><td align="left">EPSDE</td><td char="." align="char">3.8</td></tr><tr><td align="left">CoBiDE</td><td char="." align="char">1.9</td></tr><tr><td align="left">CCDE</td><td char="." align="char">
<italic>1.4</italic>
</td></tr></tbody></table></table-wrap></p><p>Therefore, these experimental results verify the potential of CCDE in real-world applications.</p></sec></sec><sec id="Sec20"><title>Conclusions</title><p>The number of works in evolutionary computation involving the solution of difficult optimization problems has been increasing in recent years. DE is an efficient and robust EA and is a hotspot in this field. CCDE, a DE variant based on strategies guided by the crossover and covariance matrices, is proposed in this paper to improve the performance of DE and simplify its structure.</p><p>In CCDE, the classical crossover operation and its associated <italic>CR</italic> in DE is simplified by the crossover matrix, which is a binary integer-valued (0, 1) matrix of size <italic>N</italic>&#x000a0;&#x000d7;&#x000a0;<italic>D</italic> computed by the random generation equation. Improvement is performed to enhance the exploration capability by increasing the diversity of the population. The covariance matrix generated by the <italic>&#x003bb;</italic> best individuals is used to fully utilize the information for the best individuals and randomly search the region around the best individual by Gaussian distribution. Accordingly, the exploitation capability is improved. In addition, <italic>M</italic> is introduced to store the previous generation and control the search direction. As a result, the diversity of the population is enhanced. CCDE has been tested on 30 benchmark test functions developed for IEEE CEC 2014 and 5 complex real-world engineering optimization problems selected from IEEE CEC 2011. The experimental and statistical results suggest that the performance of CCDE is better than those of the four other DE variants and five algorithms from CEC 2014. CCDE shows high-quality solution and robustness for the tested benchmark functions and real-world engineering problems.</p><p>Future studies can extend CCDE by applying the algorithm to various classes of problems, such as multi-objective optimization and constrained optimization problems. The method of CCDE and overall comparison with other evolution algorithms can also be comprehensively studied.</p></sec></body><back><ack><title>Authors&#x02019; contributions</title><p>YL and JF wrote the main manuscript and designed the novel strategy; YL and JH designed the experiments and data evaluation. All authors read and approved the final manuscript.</p><sec id="FPar1"><title>Acknowledgements</title><p>The authors wish to thank the editor and anonymous referees for their constructive comments and recommendations, which have significantly improved the presentation of this paper. Furthermore, the authors would like to thank the National Natural Science Foundation of China (No. 51541905) for its financial support of this work.</p></sec><sec id="FPar2"><title>Competing interests</title><p>The authors declare that they have no competing interests.</p></sec></ack><ref-list id="Bib1"><title>References</title><ref id="CR1"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Alcal&#x000e1;</surname><given-names>FJ</given-names></name><name><surname>S&#x000e1;nchez</surname><given-names>L</given-names></name><name><surname>Garc&#x000ed;a</surname><given-names>S</given-names></name><name><surname>Jesus</surname><given-names>MJ</given-names></name><etal/></person-group><article-title>KEEL: a software tool to assess evolutionary algorithms to data mining problems</article-title><source>Soft Comput</source><year>2009</year><volume>13</volume><fpage>307</fpage><lpage>318</lpage><pub-id pub-id-type="doi">10.1007/s00500-008-0323-y</pub-id></element-citation></ref><ref id="CR2"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Brest</surname><given-names>J</given-names></name><name><surname>Greiner</surname><given-names>S</given-names></name><name><surname>Boskovic</surname><given-names>B</given-names></name><name><surname>Mernik</surname><given-names>M</given-names></name><etal/></person-group><article-title>Self-adapting controlparameters in differential evolution: a comparative study on numerical bench-mark problems</article-title><source>IEEE Trans Evol Comput</source><year>2006</year><volume>10</volume><fpage>646</fpage><lpage>657</lpage><pub-id pub-id-type="doi">10.1109/TEVC.2006.872133</pub-id></element-citation></ref><ref id="CR3"><mixed-citation publication-type="other">Chen L, Liu HL, Zheng Z (2014) A evolutionary algorithm based on covariance matrix leaning and searching preference for solving CEC 2014 benchmark problems. In: Proceedings of the 2014 IEEE congress on evolutionary computation, pp 2672&#x02013;2677</mixed-citation></ref><ref id="CR4"><mixed-citation publication-type="other">Das S, Suganthan PN (2010) Problem definitions and evaluation criteria for CEC 2011 competition on testing evolutionary algorithms on real world optimization problems. Technical report, Jadavpur University and Nanyang Technological University, Singapore</mixed-citation></ref><ref id="CR5"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Deep</surname><given-names>K</given-names></name><name><surname>Singh</surname><given-names>KP</given-names></name><name><surname>Kansal</surname><given-names>ML</given-names></name><name><surname>Mohan</surname><given-names>C</given-names></name></person-group><article-title>A real coded genetic algorithm for solving integer and mixed integer optimization problems</article-title><source>Appl Math Comput</source><year>2009</year><volume>212</volume><fpage>505</fpage><lpage>518</lpage></element-citation></ref><ref id="CR6"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Dong</surname><given-names>CR</given-names></name><name><surname>Ng</surname><given-names>WWY</given-names></name><name><surname>Wang</surname><given-names>XZ</given-names></name><name><surname>Patrick</surname><given-names>PK</given-names></name><etal/></person-group><article-title>An imprived differential evolution and its application to determining feature weights in similarity-based clustering</article-title><source>Neurocomputing</source><year>2014</year><volume>146</volume><fpage>95</fpage><lpage>103</lpage><pub-id pub-id-type="doi">10.1016/j.neucom.2014.04.065</pub-id></element-citation></ref><ref id="CR7"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>dos Santos Coelho</surname><given-names>L</given-names></name><name><surname>Ayala</surname><given-names>HVH</given-names></name><name><surname>Mariani</surname><given-names>VC</given-names></name></person-group><article-title>A self-adaptive chaotic differential evolution algorithm using gamma distribution for unconstrained global optimization</article-title><source>Appl Math Comput</source><year>2014</year><volume>234</volume><fpage>452</fpage><lpage>459</lpage></element-citation></ref><ref id="CR8"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Edmonds</surname><given-names>J</given-names></name></person-group><article-title>Matroids and the greedy algorithm</article-title><source>Math Program</source><year>1971</year><volume>1</volume><fpage>127</fpage><lpage>136</lpage><pub-id pub-id-type="doi">10.1007/BF01584082</pub-id></element-citation></ref><ref id="CR9"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fan</surname><given-names>QQ</given-names></name><name><surname>Yan</surname><given-names>XF</given-names></name></person-group><article-title>Self-adaptive differential evolution algorithm with discrete mutation control parameters</article-title><source>Expert Syst Appl</source><year>2015</year><volume>42</volume><fpage>1551</fpage><lpage>1572</lpage><pub-id pub-id-type="doi">10.1016/j.eswa.2014.09.046</pub-id></element-citation></ref><ref id="CR10"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fraa</surname><given-names>A</given-names></name><name><surname>Bouzoubia</surname><given-names>S</given-names></name><name><surname>Boukhalfa</surname><given-names>I</given-names></name></person-group><article-title>A sinusoidal differential evolution algorithm for numerical optimisation</article-title><source>Appl Soft Comput</source><year>2015</year><volume>27</volume><fpage>99</fpage><lpage>126</lpage><pub-id pub-id-type="doi">10.1016/j.asoc.2014.11.003</pub-id></element-citation></ref><ref id="CR11"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Garc&#x000ed;a</surname><given-names>S</given-names></name><name><surname>Molina</surname><given-names>D</given-names></name><name><surname>Lozano</surname><given-names>M</given-names></name><name><surname>Herrera</surname><given-names>F</given-names></name></person-group><article-title>A study on the use of non-parametric tests for analyzing the evolutionary algorithms&#x02019; behaviour: a case study on the CEC&#x02019;2005</article-title><source>J Heuristics</source><year>2009</year><volume>15</volume><fpage>617</fpage><lpage>644</lpage><pub-id pub-id-type="doi">10.1007/s10732-008-9080-4</pub-id></element-citation></ref><ref id="CR12"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Ghosh</surname><given-names>S</given-names></name><name><surname>Das</surname><given-names>S</given-names></name><name><surname>Roy</surname><given-names>S</given-names></name><etal/></person-group><article-title>A differential covariance matrix adaptation evolutionary algorithm for real parameter optimization</article-title><source>Inf Sci</source><year>2012</year><volume>182</volume><issue>1</issue><fpage>192</fpage><lpage>219</lpage></element-citation></ref><ref id="CR13"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gundry</surname><given-names>S</given-names></name><name><surname>Zou</surname><given-names>JM</given-names></name><name><surname>Uyar</surname><given-names>MU</given-names></name><name><surname>Sahin</surname><given-names>CS</given-names></name><etal/></person-group><article-title>Differential evolution-based autonomous and disruption tolerant vehicular self-organization in MANETs</article-title><source>As Hoc Netw</source><year>2015</year><volume>25</volume><fpage>454</fpage><lpage>471</lpage><pub-id pub-id-type="doi">10.1016/j.adhoc.2014.08.006</pub-id></element-citation></ref><ref id="CR14"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Gwizda&#x00142;&#x00142;a</surname><given-names>TM</given-names></name></person-group><article-title>The role of different genetic operators in the optimization of magnetic models</article-title><source>Appl Math Comput</source><year>2012</year><volume>218</volume><fpage>9220</fpage><lpage>9233</lpage></element-citation></ref><ref id="CR15"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hansen</surname><given-names>N</given-names></name><name><surname>Ostermeier</surname><given-names>A</given-names></name></person-group><article-title>Completely derandomized self-adaptation in evolution strategies</article-title><source>Evol Comput</source><year>2001</year><volume>9</volume><fpage>159</fpage><lpage>195</lpage><pub-id pub-id-type="doi">10.1162/106365601750190398</pub-id><pub-id pub-id-type="pmid">11382355</pub-id></element-citation></ref><ref id="CR16"><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Liang</surname><given-names>JJ</given-names></name><name><surname>Qu</surname><given-names>BY</given-names></name><name><surname>Suganthan</surname><given-names>PN</given-names></name></person-group><source>Problem definitions and evaluation criteria for the CEC 2014 special session and competition on single objective real-parameter numerical optimization</source><year>2013</year><publisher-loc>Beijing</publisher-loc><publisher-name>Tech Rep Beijing Int Conv Center</publisher-name></element-citation></ref><ref id="CR17"><mixed-citation publication-type="other">Maia RD, Castro LN, Caminhas WM (2014) Real-parameter optimization with OptBees. In: Proceedings of the 2014 IEEE congress on evolutionary computation, pp 2649&#x02013;2655</mixed-citation></ref><ref id="CR18"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Mallipeddi</surname><given-names>R</given-names></name><name><surname>Suganthan</surname><given-names>PN</given-names></name><name><surname>Pan</surname><given-names>QK</given-names></name><name><surname>Tasgetiren</surname><given-names>MF</given-names></name></person-group><article-title>Differential evolutionalgorithm with ensemble of parameters and mutation trategies</article-title><source>Appl Soft Comput</source><year>2011</year><volume>11</volume><fpage>1679</fpage><lpage>1696</lpage><pub-id pub-id-type="doi">10.1016/j.asoc.2010.04.024</pub-id></element-citation></ref><ref id="CR19"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Maulik</surname><given-names>U</given-names></name><name><surname>Saha</surname><given-names>I</given-names></name></person-group><article-title>Modified differential evolution based fuzzy clustering for pixel classification in remote sensing imagery</article-title><source>Pattern Recogn</source><year>2009</year><volume>42</volume><fpage>2135</fpage><lpage>2149</lpage><pub-id pub-id-type="doi">10.1016/j.patcog.2009.01.011</pub-id></element-citation></ref><ref id="CR20"><mixed-citation publication-type="other">Preux P, Munos R, Valko M (2014) Bandits attack function optimization. In: Proceedings of the 2014 IEEE congress on evolutionary computation, pp 2245&#x02013;2252</mixed-citation></ref><ref id="CR21"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Qin</surname><given-names>AK</given-names></name><name><surname>Huang</surname><given-names>VL</given-names></name><name><surname>Suganthan</surname><given-names>PN</given-names></name></person-group><article-title>Differential evolution algorithm with strategy adaptation for global numerical optimization</article-title><source>IEEE Trans Evol Comput</source><year>2009</year><volume>13</volume><fpage>398</fpage><lpage>417</lpage><pub-id pub-id-type="doi">10.1109/TEVC.2008.927706</pub-id></element-citation></ref><ref id="CR22"><mixed-citation publication-type="other">Santucci V, Milani A. (2011). Covariance-based parameters adaptation in differential evolution. Genetic and evolutionary computation conference, pp 687&#x02013;690</mixed-citation></ref><ref id="CR23"><mixed-citation publication-type="other">Storn R, Price K (1995) Differential evolution&#x02014;a simple and efficient adaptive schemefor global optimization over continuous spaces. Technology Report TR-95-012, Berkeley, CA</mixed-citation></ref><ref id="CR24"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Storn</surname><given-names>R</given-names></name><name><surname>Price</surname><given-names>KV</given-names></name></person-group><article-title>Differential evolution&#x02014;a simple and efficient heuristic forglobal optimization over continuous spaces</article-title><source>J Global Optim</source><year>1997</year><volume>11</volume><fpage>341</fpage><lpage>359</lpage><pub-id pub-id-type="doi">10.1023/A:1008202821328</pub-id></element-citation></ref><ref id="CR25"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Venu</surname><given-names>MK</given-names></name><name><surname>Mallipeddi</surname><given-names>R</given-names></name><name><surname>Suganthan</surname><given-names>PN</given-names></name></person-group><article-title>Fiber Bragg grating sensor array interrogation using differential evolution</article-title><source>Optoelectron Adv Mater Rapid Commun</source><year>2008</year><volume>2</volume><fpage>682</fpage><lpage>685</lpage></element-citation></ref><ref id="CR26"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wang</surname><given-names>L</given-names></name><name><surname>Li</surname><given-names>LP</given-names></name></person-group><article-title>Fixed-structure H&#x0221e; controller synthesis based on differentialevolution with level comparison</article-title><source>IEEE Trans Evol Comput</source><year>2011</year><volume>15</volume><fpage>341</fpage><lpage>359</lpage></element-citation></ref><ref id="CR27"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wang</surname><given-names>Y</given-names></name><name><surname>Lib</surname><given-names>HX</given-names></name><name><surname>Huang</surname><given-names>TW</given-names></name></person-group><article-title>Differential evolution based on covariance matrix learning andbimodal distribution parameter setting</article-title><source>Appl Soft Comput</source><year>2014</year><volume>18</volume><fpage>232</fpage><lpage>247</lpage><pub-id pub-id-type="doi">10.1016/j.asoc.2014.01.038</pub-id></element-citation></ref><ref id="CR28"><mixed-citation publication-type="other">Yashesh D, Deb K, Bandaru S (2014) Non-uniform mapping in real-coded genetic algorithms. In: Proceedings of the 2014 IEEE congress on evolutionary computation, pp 2237&#x02013;2244</mixed-citation></ref><ref id="CR29"><mixed-citation publication-type="other">Yu C, Kelley LC, Zheng SQ, Tan Y (2014) Fireworks algorithm with differential evolution for solving the CEC 2014 competition problems. In: Proceedings of the 2014 IEEE congress on evolutionary computation, pp 3238&#x02013;3245</mixed-citation></ref><ref id="CR30"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhabitsky</surname><given-names>M</given-names></name><name><surname>Zhabitskaya</surname><given-names>E</given-names></name></person-group><article-title>Asynchronous differential evolution with adaptive correlation matrix</article-title><source>Conf Genet Evol Comput</source><year>2013</year><volume>27</volume><issue>1</issue><fpage>455</fpage><lpage>462</lpage></element-citation></ref><ref id="CR31"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhang</surname><given-names>XY</given-names></name><name><surname>Duan</surname><given-names>HB</given-names></name></person-group><article-title>An improved constrained differential evolution algorithm for unmanned aerial vehicle global route planning</article-title><source>Appl Soft Comput</source><year>2015</year><volume>26</volume><fpage>270</fpage><lpage>284</lpage><pub-id pub-id-type="doi">10.1016/j.asoc.2014.09.046</pub-id></element-citation></ref><ref id="CR32"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhang</surname><given-names>J</given-names></name><name><surname>Sanderson</surname><given-names>AC</given-names></name></person-group><article-title>JADE: adaptive differential evolution with optional external archive</article-title><source>IEEE Trans Evol Comput</source><year>2009</year><volume>13</volume><fpage>945</fpage><lpage>958</lpage><pub-id pub-id-type="doi">10.1109/TEVC.2009.2014613</pub-id></element-citation></ref><ref id="CR33"><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Zhang</surname><given-names>JR</given-names></name><name><surname>Lin</surname><given-names>S</given-names></name><name><surname>Qiu</surname><given-names>WX</given-names></name></person-group><article-title>A modified chaotic differential evolution algorithm for short-term optimal hydrothermal scheduling</article-title><source>Int J Electr Power Energy Syst</source><year>2015</year><volume>65</volume><fpage>159</fpage><lpage>168</lpage><pub-id pub-id-type="doi">10.1016/j.ijepes.2014.09.041</pub-id></element-citation></ref></ref-list></back></article>